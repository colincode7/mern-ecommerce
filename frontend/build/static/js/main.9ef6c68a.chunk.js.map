{"version":3,"sources":["redux/actionTypes/productListConstants.js","redux/actionTypes/productDetailsConstants.js","redux/actionTypes/cartConstants.js","redux/actionTypes/userConstants.js","redux/actionTypes/orderConstants.js","redux/store.js","redux/reducers/productLists.js","redux/reducers/productDetails.js","redux/reducers/cart.js","redux/reducers/user.js","redux/reducers/order.js","components/CustomStyles/header.js","components/SearchProductBox.js","redux/actions/userAction.js","components/Header.js","components/Footer.js","components/Rating.js","components/Products.js","redux/actions/productListAction.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Meta.js","utils/carousalData.js","screen/HomeScreen.js","screen/skeletons/ProductScreenSkeleton.js","redux/actions/productDetailsAction.js","screen/ProductScreen.js","redux/actions/cartAction.js","screen/CartScreen.js","screen/customStyle/allFormsScreen.js","components/CustomStyles/CheckoutStepper/StepConnector.js","components/CustomStyles/CheckoutStepper/StepIcon.js","components/CheckoutStepper.js","screen/LoginScreen.js","screen/RegisterScreen.js","redux/actions/orderAction.js","screen/customStyle/ProfileScreen.js","screen/ProfileScreen.js","screen/ShippingScreen.js","screen/PaymentMethod.js","screen/customStyle/PlaceOrderScreen.js","screen/PlaceOrderScreen.js","components/StripeCheckout.js","components/PayPalCheckout.js","screen/skeletons/OrderScreenSkeleton.js","screen/OrderScreen.js","screen/customStyle/listScreen.js","screen/UserListScreen.js","screen/UserEditScreen.js","screen/ProductListScreen.js","screen/ProductEditScreen.js","screen/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILED","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILED","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAILED","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAILED","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAILED","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILED","PRODUCT_UPDATE_RESET","CART_ITEM_ADD","CART_ITEM_REMOVE","CART_ITEM_RESET","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILED","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILED","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAILED","USER_CHECK_TOKEN_REQUEST","USER_CHECK_TOKEN_SUCCESS","USER_CHECK_TOKEN_FAILED","USER_CHECK_TOKEN_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILED","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILED","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILED","USER_UPDATE_RESET","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","CREATE_ORDER_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILED","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILED","ORDER_PAY_RESET","LIST_MY_ORDER_REQUEST","LIST_MY_ORDER_SUCCESS","LIST_MY_ORDER_FAILED","LIST_MY_ORDER_RESET","LIST_ALL_ORDER_REQUEST","LIST_ALL_ORDER_SUCCESS","LIST_ALL_ORDER_FAILED","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILED","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","loading","products","error","action","type","payload","productDetails","product","productCreate","success","productDelete","productUpdate","productCreateReview","cart","cartItems","shippingAddress","paymentMethod","existItem","find","p","map","filter","userLogin","isAuthenticated","userInfo","userRegister","userDetails","user","userUpdateProfile","userAuthToken","userList","users","userDelete","userUpdate","order","orderDetails","orders","orderPay","myOrders","allOrders","orderDeliver","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","useStyles","makeStyles","theme","root","flexGrow","marginTop","appbar","padding","background","position","menu","menuButton","marginRight","spacing","breakpoints","up","display","title","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","link_brand","textDecoration","link_menu_item","link","down","link_drawer","primary","SearchBox","history","classes","useState","keyword","setKeyword","useEffect","window","location","pathname","includes","trim","push","className","InputBase","value","onChange","e","target","placeholder","input","inputProps","addUser","updateProfile","userUpdateSuccess","userLogout","dispatch","removeItem","getUserDetails","API","id","getState","a","config","headers","Authorization","token","axios","get","data","err","response","message","Header","isMobile","anchorEl","setAnchorEl","anchorElAdmin","setAnchorElAdmin","openEl","Boolean","openElAdmin","toggle","setToggle","useDispatch","useSelector","logoutHandler","handleClose","handleAdminMenuClose","AppBar","elevation","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","to","render","Button","aria-controls","aria-haspopup","event","currentTarget","style","fontSize","name","split","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","TransitionComponent","Fade","open","onClose","MenuItem","ListItemText","ListItemIcon","isAdmin","SupervisorAccount","PeopleAlt","ShoppingBasket","Drawer","anchor","List","ListItem","button","Footer","Container","Row","Col","opacity","Rating","text","defaultProps","Products","path","Card","category","_id","src","image","alt","Body","Title","as","Text","rating","numReviews","price","reqProducts","addProducts","productsFailed","errMess","listProducts","console","log","Loader","Spinner","animation","role","margin","Message","varient","children","Alert","severity","mobile","BasicPagination","totalPage","setPaginate","Pagination","paginate","count","page","prev","currentPage","scrollTo","size","Meta","description","keywords","Helmet","content","carousalData","image_desktop","image_mobile","heading","para","Home","options","loop","dots","nav","navText","responsive","320","items","768","1000","allProducts","allProductsPerPage","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","Math","ceil","length","isQuerying","setIsQuerying","URLSearchParams","electronicsRef","useRef","homeRef","mensRef","womensRef","autoplay","autoplayTimeout","lazyLoad","smartSpeed","index","backgroundPosition","backgroundSize","backgroundRepeat","current","scrollIntoView","behavior","ref","electronic","home_appliance","mens_accessory","womens_accessory","md","lg","ProductScreenSkeleton","Skeleton","successProductCreate","successProductUpdate","listProductDetails","ProductScreen","match","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","params","reviews","aria-current","goBack","Image","fluid","ListGroup","Item","countInStock","Form","Control","Array","keys","q","disabled","sm","review","createdAt","substring","Group","controlId","Label","row","preventDefault","post","createProductReview","addCart","addToCart","setItem","stringify","removeFromCart","removeCart","addShippingAddress","addPaymentMethod","emptyCart","CartScreen","productId","Number","item","rounded","border","outline","removecartHandler","reduce","acc","toFixed","useStyle","form","flexDirection","paper","paddingTop","paperUserEdit","paperProductEdit","avatar","marginBottom","transform","backgroundImage","info","main","fontWeight","borderColor","paddingBottom","inputProduct","buttonProduct","uploadButton","cursor","icon","register","login","selectLabel","textAlign","back","CheckoutStepConnector","withStyles","alternativeLabel","top","active","completed","line","StepConnector","useStepIconStyles","zIndex","boxShadow","StepIcon","props","icons","1","2","LocalShipping","3","AccountBalance","4","clsx","String","CheckoutStepper","step","steps","Stepper","activeStep","connector","label","Step","StepLabel","StepIconComponent","LoginScreen","email","setEmail","password","setPassword","passwordVisibility","setPasswordVisibility","redirect","Paper","Avatar","component","FormControl","InputLabel","htmlFor","OutlinedInput","required","startAdornment","InputAdornment","labelWidth","endAdornment","onMouseDown","loginUser","Grid","container","RegisterScreen","setName","confirmPassword","setConfirmPassword","confirmPasswordVisibility","setConfirmPasswordVisibility","setMessage","registerUser","addOrder","payOrder","orderId","paymentResult","put","table","details","CssTextField","TextField","StyledTableCell","createStyles","head","body","TableCell","StyledTableRow","selected","hover","TableRow","ProfileScreen","React","setPage","rowsPerPage","setRowsPerPage","myOrdersList","loadingOrders","errorOrders","listMyOrders","xs","multiline","InputLabelProps","shrink","autoComplete","updateUserProfile","TableContainer","Table","TableHead","align","TableBody","scope","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentMethodScreen","setPaymentMethod","RadioGroup","FormControlLabel","control","Radio","innerWidth","maxWidth","inline","divider","list_item","paddingRight","order_summary","order_link","shipping","deliver_button","float","fontFamily","fontStyle","letterSpacing","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","placeOrder","list","Divider","ListItemAvatar","secondary","ListItemSecondaryAction","createOrder","orderItems","stripeButton","StripeCheckout","loadingPay","successPay","makePayment","stripeKey","process","amount","currency","billingAddress","PayPalCheckout","sdkReady","setSdkReady","addPayPalScript","clientId","script","document","createElement","async","onload","appendChild","paypal","onSuccess","onError","onCancel","msg","orderID","OrderScreenSkeleton","OrderScreen","loadingDeliver","successDeliver","getOrderDetails","rel","href","deliverOrder","minWidth","tableHead","tableCol","backgroundClip","webkitBackgroundClip","webkitTextFillColor","check","cross","createProductButton","UserListScreen","successDelete","listUsers","handleUserDelete","userId","confirm","delete","deleteUser","tableContainer","Tooltip","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","Switch","checked","updateUser","loadingCreate","successCreate","errorCreate","createdProduct","handleDeleteProduct","deleteProduct","createProduct","brand","ProductEditScreen","setCategory","setBrand","setPrice","setDescription","setImage","setCountInStock","uploading","setUploading","productCategory","handleUploadImage","file","files","formData","FormData","append","URL","createObjectURL","direction","justify","rows","updateProduct","OrderListScreen","listAllOrders","App","checkUserAuthToken","exact","PaymentMethod","ProductListScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.9ef6c68a.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAILED = \"PRODUCT_LIST_FAILED\";\r\n","export const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAILED = \"PRODUCT_DETAILS_FAILED\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAILED = \"PRODUCT_CREATE_REVIEW_FAILED\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\n///   FOR ADMIN USER  ///\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAILED = \"PRODUCT_DELETE_FAILED\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAILED = \"PRODUCT_CREATE_FAILED\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAILED = \"PRODUCT_UPDATE_FAILED\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n","export const CART_ITEM_ADD = \"CART_ITEM_ADD\";\r\nexport const CART_ITEM_REMOVE = \"CART_ITEM_REMOVE\";\r\nexport const CART_ITEM_RESET = \"CART_ITEM_RESET\";\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAILED = \"USER_LOGIN_FAILED\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAILED = \"USER_REGISTER_FAILED\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAILED = \"USER_DETAILS_FAILED\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAILED = \"USER_UPDATE_PROFILE_FAILED\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET \";\r\n\r\nexport const USER_CHECK_TOKEN_REQUEST = \"USER_CHECK_TOKEN_REQUEST \";\r\nexport const USER_CHECK_TOKEN_SUCCESS = \"USER_CHECK_TOKEN_SUCCESS \";\r\nexport const USER_CHECK_TOKEN_FAILED = \"USER_CHECK_TOKEN_FAILED \";\r\nexport const USER_CHECK_TOKEN_RESET = \"USER_CHECK_TOKEN_RESET \";\r\n\r\n///  FOR ADMIN USER   ///\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAILED = \"USER_LIST_FAILED\";\r\nexport const USER_LIST_RESET = \"USER_RESET_LIST\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAILED = \"USER_DELETE_FAILED\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAILED = \"USER_UPDATE_FAILED\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","export const CREATE_ORDER_REQUEST = \"CREATE_ORDER_REQUEST\";\r\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\r\nexport const CREATE_ORDER_FAILED = \"CREATE_ORDER_FAILED\";\r\nexport const CREATE_ORDER_RESET = \"CREATE_ORDER_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAILED = \"ORDER_DETAILS_FAILED\";\r\nexport const ORDER_DETAILS_RESET = \"ORDER_DETAILS_RESET\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAILED = \"ORDER_PAY_FAILED\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const LIST_MY_ORDER_REQUEST = \"LIST_MY_ORDER_REQUEST\";\r\nexport const LIST_MY_ORDER_SUCCESS = \"LIST_MY_ORDER_SUCCESS\";\r\nexport const LIST_MY_ORDER_FAILED = \"LIST_MY_ORDER_FAILED\";\r\nexport const LIST_MY_ORDER_RESET = \"LIST_MY_ORDER_RESET\";\r\n\r\nexport const LIST_ALL_ORDER_REQUEST = \"LIST_ALL_ORDER_REQUEST\";\r\nexport const LIST_ALL_ORDER_SUCCESS = \"LIST_ALL_ORDER_SUCCESS\";\r\nexport const LIST_ALL_ORDER_FAILED = \"LIST_ALL_ORDER_FAILED\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAILED = \"ORDER_DELIVER_FAILED\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import { combineReducers, applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//// Reducers\r\nimport { productListsReducer } from \"./reducers/productLists\";\r\nimport {\r\n  productDetailsReducer,\r\n  productCreateReviewReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n} from \"./reducers/productDetails\";\r\nimport { cartReducer } from \"./reducers/cart\";\r\n\r\nimport {\r\n  userAuthToken,\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/user\";\r\n\r\nimport {\r\n  createOrderReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  myOrdersReducer,\r\n  allOrdersReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/order\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListsReducer,\r\n  productDetails: productDetailsReducer,\r\n  productCreate: productCreateReducer, // for admin user only\r\n  productDelete: productDeleteReducer, // for admin user only\r\n  productUpdate: productUpdateReducer, // for admin user only\r\n  productCreateReview: productCreateReviewReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userAuthToken: userAuthToken,\r\n  userList: userListReducer, // for admin user only\r\n  userDelete: userDeleteReducer, // for admin user only\r\n  userUpdate: userUpdateReducer, // for admin user only\r\n  order: createOrderReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  myOrders: myOrdersReducer,\r\n  allOrders: allOrdersReducer, // for admin user only\r\n  orderDeliver: orderDeliverReducer, // for admin user only\r\n});\r\n\r\n// GET all cart Items from local Storage\r\nconst cartsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\n// GET shippingAddress from local Storage\r\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\n// GET user info from local Storage\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartsFromLocalStorage,\r\n    shippingAddress: shippingAddressFromLocalStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAILED,\r\n} from \"../actionTypes/productListConstants\";\r\n\r\nexport const productListsReducer = (\r\n  state = { loading: false, products: [], error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [], error: null };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload,\r\n        error: null,\r\n      };\r\n\r\n    case PRODUCT_LIST_FAILED:\r\n      return { loading: false, products: [], error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILED,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAILED,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAILED,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAILED,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAILED,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"../actionTypes/productDetailsConstants\";\r\n\r\n// product details reducer\r\nexport const productDetailsReducer = (\r\n  state = { loading: false, product: {}, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, product: {}, error: null };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload, error: null };\r\n\r\n    case PRODUCT_DETAILS_FAILED:\r\n      return { loading: false, product: {}, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// create product review reducer\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// delete product reducer\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true, error: null };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true, error: null };\r\n\r\n    case PRODUCT_DELETE_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// create product reducer\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Update product reducer\r\nexport const productUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ITEM_ADD,\r\n  CART_ITEM_REMOVE,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_ITEM_RESET,\r\n} from \"../actionTypes/cartConstants\";\r\n\r\n///////////////////////    CART ADD & REMOVE TO/FROM CART  ///////////////////\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {}, paymentMethod: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ITEM_ADD:\r\n      const { payload } = action;\r\n      // check if cartItems exist or not\r\n      const existItem = state.cartItems.find(\r\n        (p) => p.product === payload.product\r\n      );\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((p) =>\r\n            p.product === existItem.product ? payload : p\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, payload] };\r\n      }\r\n\r\n    case CART_ITEM_REMOVE:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((p) => p.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    case CART_ITEM_RESET:\r\n      return { ...state, cartItems: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_FAILED,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAILED,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_FAILED,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILED,\r\n  USER_DETAILS_RESET,\r\n  USER_CHECK_TOKEN_REQUEST,\r\n  USER_CHECK_TOKEN_SUCCESS,\r\n  USER_CHECK_TOKEN_FAILED,\r\n  USER_CHECK_TOKEN_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAILED,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAILED,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILED,\r\n  USER_UPDATE_RESET,\r\n} from \"../actionTypes/userConstants\";\r\n\r\n///    LOGIN REDUCER    ///\r\n\r\nexport const userLoginReducer = (\r\n  state = {\r\n    loading: false,\r\n    isAuthenticated: false,\r\n    userInfo: null,\r\n    error: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true, error: null };\r\n    case USER_LOGIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userInfo: action.payload,\r\n      };\r\n\r\n    case USER_LOGIN_FAILED:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_LOGOUT:\r\n      return {\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///     REGISTER REDUCER    ///\r\n\r\nexport const userRegisterReducer = (\r\n  state = {\r\n    loading: false,\r\n    isAuthenticated: false,\r\n    userInfo: null,\r\n    error: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true, error: null };\r\n    case USER_REGISTER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userInfo: action.payload,\r\n      };\r\n\r\n    case USER_REGISTER_FAILED:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_LOGOUT:\r\n      return {\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///   USER PROFILE DETAILS   ///\r\n\r\nexport const userDetailsReducer = (\r\n  state = { loading: false, user: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return {\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///   UPDATE USER PROFILE DETAILS   ///\r\n\r\nexport const userUpdateProfileReducer = (\r\n  state = { loading: false, userInfo: null, error: null, success: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n        success: true,\r\n      };\r\n\r\n    case USER_UPDATE_PROFILE_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/// CHECK AUTH TOKEN  ///\r\nexport const userAuthToken = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_CHECK_TOKEN_REQUEST:\r\n      return { loading: true };\r\n    case USER_CHECK_TOKEN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: action.payload,\r\n      };\r\n\r\n    case USER_CHECK_TOKEN_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_CHECK_TOKEN_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///*  FOR ADMIN USER   ///\r\n\r\n// user list reducer\r\nexport const userListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n\r\n    case USER_LIST_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_LIST_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// user delete reducer\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case USER_DELETE_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// user update reducer\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: action.payload,\r\n        success: true,\r\n      };\r\n\r\n    case USER_UPDATE_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_UPDATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAILED,\r\n  CREATE_ORDER_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAILED,\r\n  ORDER_DETAILS_RESET,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAILED,\r\n  ORDER_PAY_RESET,\r\n  LIST_MY_ORDER_REQUEST,\r\n  LIST_MY_ORDER_SUCCESS,\r\n  LIST_MY_ORDER_FAILED,\r\n  LIST_MY_ORDER_RESET,\r\n  LIST_ALL_ORDER_REQUEST,\r\n  LIST_ALL_ORDER_SUCCESS,\r\n  LIST_ALL_ORDER_FAILED,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_FAILED,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../actionTypes/orderConstants\";\r\n\r\n// create order reducer\r\nexport const createOrderReducer = (\r\n  state = {\r\n    loading: false,\r\n    success: false,\r\n    error: null,\r\n    order: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CREATE_ORDER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case CREATE_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n        success: true,\r\n      };\r\n\r\n    case CREATE_ORDER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CREATE_ORDER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// get order details by id of particular user reducer\r\nexport const orderDetailsReducer = (\r\n  state = {\r\n    loading: true,\r\n    orders: null,\r\n    error: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_RESET:\r\n      return {\r\n        orders: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// update order to paid reducer\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// get my orders of particular user reducer\r\nexport const myOrdersReducer = (\r\n  state = { loading: false, orders: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LIST_MY_ORDER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case LIST_MY_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case LIST_MY_ORDER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case LIST_MY_ORDER_RESET:\r\n      return {\r\n        orders: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//  get all orders reducer (for admin user)\r\nexport const allOrdersReducer = (\r\n  state = { loading: false, orders: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LIST_ALL_ORDER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case LIST_ALL_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case LIST_ALL_ORDER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// update order to delivered reducer\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\n///////////////////////    Custom Style    //////////////////////////\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"4.3rem\",\r\n  },\r\n\r\n  appbar: {\r\n    padding: \"0.4rem\",\r\n    background: \"linear-gradient(45deg, #0267B5,  30%, #2196f3 90%)\",\r\n    position: \"fixed\",\r\n  },\r\n\r\n  menu: {},\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  link_brand: {\r\n    color: \"inherit\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n    },\r\n  },\r\n  link_menu_item: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  link_drawer: {\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary,\r\n    },\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useStyles } from \"./CustomStyles/header\";\r\n\r\nexport default function SearchBox({ history }) {\r\n  const classes = useStyles();\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  useEffect(() => {\r\n    // console.log(window.location.pathname);\r\n    if (\r\n      window.location.pathname === \"/\" ||\r\n      window.location.pathname.includes(\"/search\")\r\n    ) {\r\n      if (keyword.trim()) {\r\n        history.push(`/search?name=${keyword}`);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      setKeyword(\"\");\r\n    }\r\n  }, [keyword, history]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <SearchIcon />\r\n        </div>\r\n        <InputBase\r\n          value={keyword}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_FAILED,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAILED,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAILED,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILED,\r\n  USER_CHECK_TOKEN_REQUEST,\r\n  USER_CHECK_TOKEN_SUCCESS,\r\n  USER_CHECK_TOKEN_FAILED,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAILED,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAILED,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILED,\r\n} from \"../actionTypes/userConstants\";\r\n\r\nimport { LIST_MY_ORDER_RESET } from \"../actionTypes/orderConstants\";\r\n\r\n///*     ACTION      ///\r\n\r\n/// LOGIN  ///\r\nconst loginReq = () => ({\r\n  type: USER_LOGIN_REQUEST,\r\n});\r\n\r\nconst addUser = (user) => ({\r\n  type: USER_LOGIN_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst loginFailed = (err) => ({\r\n  type: USER_LOGIN_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  REGISTER  ///\r\nconst registerReq = () => ({\r\n  type: USER_REGISTER_REQUEST,\r\n});\r\n\r\nconst newUser = (user) => ({\r\n  type: USER_REGISTER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst registerFailed = (err) => ({\r\n  type: USER_REGISTER_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  USER DETAILS  ///\r\nconst profileReq = () => ({\r\n  type: USER_DETAILS_REQUEST,\r\n});\r\n\r\nconst getProfile = (user) => ({\r\n  type: USER_DETAILS_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst profileFailed = (err) => ({\r\n  type: USER_DETAILS_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  UPDATE USER DETAILS  ///\r\nconst updateProfileReq = () => ({\r\n  type: USER_UPDATE_PROFILE_REQUEST,\r\n});\r\n\r\nconst updateProfile = (user) => ({\r\n  type: USER_UPDATE_PROFILE_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst updateProfileFailed = (err) => ({\r\n  type: USER_UPDATE_PROFILE_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///*   FOR ADMIN USER    ///\r\n\r\n/// USER LIST  ///\r\nconst userListReq = () => ({\r\n  type: USER_LIST_REQUEST,\r\n});\r\n\r\nconst userListSuccess = (users) => ({\r\n  type: USER_LIST_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nconst userListFailed = (err) => ({\r\n  type: USER_LIST_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  DELETE USER  ///\r\nconst userDeleteReq = () => ({\r\n  type: USER_DELETE_REQUEST,\r\n});\r\n\r\nconst userDeleteSuccess = () => ({\r\n  type: USER_DELETE_SUCCESS,\r\n});\r\n\r\nconst userDeleteFailed = (err) => ({\r\n  type: USER_DELETE_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  UPDATE USER  ///\r\nconst userUpdateReq = () => ({\r\n  type: USER_UPDATE_REQUEST,\r\n});\r\n\r\nconst userUpdateSuccess = (user) => ({\r\n  type: USER_UPDATE_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst userUpdateFailed = (err) => ({\r\n  type: USER_UPDATE_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///*    ACTION CREATOR    ///\r\n\r\n///    LOGIN    ///\r\nexport const loginUser = (API, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginReq());\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API}/user/login`,\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch(addUser(data));\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      loginFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///    LOGOUT    ///\r\nexport const userLogout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({ type: LIST_MY_ORDER_RESET });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\n///    REGISTER    ///\r\nexport const registerUser = (API, name, email, password) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(registerReq());\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API}/user/register`,\r\n      { name, email, password },\r\n      config\r\n    );\r\n    dispatch(newUser(data));\r\n    dispatch(addUser(data));\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      registerFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///    USER DETAILS (PROFILE)   ///\r\nexport const getUserDetails = (API, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(profileReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`${API}/user/${id}`, config);\r\n\r\n    dispatch(getProfile(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      profileFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///    UPDATE USER DETAILS (PROFILE)   ///\r\nexport const updateUserProfile = (API, user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(updateProfileReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`${API}/user/profile`, user, config);\r\n\r\n    dispatch(updateProfile(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      updateProfileFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n/// USER AUTH TOKEN CHECK  ///\r\nexport const checkUserAuthToken = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_CHECK_TOKEN_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`${API}/user/auth`, config);\r\n\r\n    dispatch({\r\n      type: USER_CHECK_TOKEN_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch(\r\n      dispatch({\r\n        type: USER_CHECK_TOKEN_FAILED,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n///*   FOR ADMIN USER   ///\r\n\r\n/// USER LIST  ///\r\nexport const listUsers = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(userListReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`${API}/user`, config);\r\n\r\n    dispatch(userListSuccess(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      userListFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n/// USER DELETE  ///\r\nexport const deleteUser = (API, userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(userDeleteReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    await axios.delete(`${API}/user/${userId}`, config);\r\n\r\n    dispatch(userDeleteSuccess());\r\n  } catch (error) {\r\n    dispatch(\r\n      userDeleteFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n/// USER UPDATE  ///\r\nexport const updateUser = (API, userId, user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(userUpdateReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`${API}/user/${userId}`, user, config);\r\n\r\n    dispatch(userUpdateSuccess(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      userUpdateFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\n///////////////////////    MATERIAL UI Component    //////////////////\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\n///////////////////////   MATERIAL ICONS     ///////////////////////\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\n///////////////////////// Search Box component   ///////////////////\r\nimport SearchBox from \"./SearchProductBox\";\r\n\r\n/////////////////////////    REDUX     //////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userLogout } from \"../redux/actions/userAction\";\r\n\r\n//////////////////////////   CUSTOM STYLE    /////////////////////////\r\nimport { useStyles } from \"./CustomStyles/header\";\r\nimport {\r\n  PeopleAlt,\r\n  ShoppingBasket,\r\n  ShoppingCart,\r\n  SupervisorAccount,\r\n} from \"@material-ui/icons\";\r\n\r\nexport default function Header({ isMobile }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [anchorElAdmin, setAnchorElAdmin] = useState(null);\r\n  const openEl = Boolean(anchorEl);\r\n  const openElAdmin = Boolean(anchorElAdmin);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  ////////////////////////    REDUX     ////////////////////////////////\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(userLogout());\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  ///    FOR Dropdown Menu    ///\r\n\r\n  ///  FOR USER  ///\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  ///  FOR ADMIN USER  ///\r\n  const handleAdminMenu = (event) => {\r\n    setAnchorElAdmin(event.currentTarget);\r\n  };\r\n\r\n  const handleAdminMenuClose = () => {\r\n    setAnchorElAdmin(null);\r\n  };\r\n\r\n  return (\r\n    <header className={classes.root}>\r\n      <AppBar position=\"fixed\" elevation={10} className={classes.appbar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            onClick={() => setToggle(true)}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link className={classes.link_brand} to=\"/\">\r\n              eShop\r\n            </Link>\r\n          </Typography>\r\n          {/*// Search Box Component */}\r\n          <Route render={({ history }) => <SearchBox history={history} />} />\r\n          &nbsp; &nbsp; &nbsp; &nbsp;\r\n          {/*//  CART BUTTON (if logged in goes to /cart otherwise redirect to /login )  //*/}\r\n          <Link\r\n            className={classes.link}\r\n            to={userInfo ? \"/cart\" : \"/login?redirect=cart\"}\r\n          >\r\n            <Button color=\"inherit\">\r\n              <ShoppingCartIcon />\r\n              &nbsp; Cart\r\n            </Button>\r\n          </Link>\r\n          {userInfo ? (\r\n            ///     DROPDOWN MENU IF USER EXISTS OR LOGGED IN   ///\r\n            <>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n                style={{ fontSize: \"1.25rem\" }}\r\n              >\r\n                <AccountCircle />\r\n                &nbsp;\r\n                {!isMobile ? userInfo.name.split(\" \")[0] : null}\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                className={classes.menu}\r\n                elevation={4}\r\n                getContentAnchorEl={null}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                TransitionComponent={Fade}\r\n                open={openEl}\r\n                onClose={handleClose}\r\n              >\r\n                {/*//    USER NAME ON MOBILE VIEW    //*/}\r\n                {isMobile ? (\r\n                  <MenuItem onClick={handleClose}>\r\n                    <IconButton>\r\n                      <AccountCircle />\r\n                    </IconButton>\r\n                    <ListItemText primary={userInfo.name.split(\" \")[0]} />\r\n                  </MenuItem>\r\n                ) : null}\r\n                {/*//      PROFILE BUTTON if user is logged in      */}\r\n                <Link to=\"/profile\" className={classes.link_menu_item}>\r\n                  <MenuItem onClick={handleClose}>\r\n                    <ListItemIcon>\r\n                      <PersonIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Profile\" />\r\n                  </MenuItem>\r\n                </Link>\r\n\r\n                {/*//    LOGOUT BUTTON (if user is logged in)    //*/}\r\n                <MenuItem\r\n                  onClick={logoutHandler}\r\n                  className={classes.link_menu_item}\r\n                >\r\n                  <ListItemIcon>\r\n                    <ExitToAppIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Logout\" />\r\n                </MenuItem>\r\n              </Menu>\r\n\r\n              {/* ///     ADMIN SECTION OF DROPDOWN IF USER ADMIN EXISTS OR LOGGED IN   /// */}\r\n              {userInfo.isAdmin ? (\r\n                <>\r\n                  <IconButton\r\n                    aria-label=\"account of admin user\"\r\n                    aria-controls=\"menu-admin-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleAdminMenu}\r\n                    color=\"inherit\"\r\n                    style={{ fontSize: \"1.25rem\" }}\r\n                  >\r\n                    <SupervisorAccount />\r\n                    &nbsp;\r\n                    {!isMobile ? \"Admin\" : null}\r\n                  </IconButton>\r\n                  <Menu\r\n                    id=\"menu-appbar\"\r\n                    className={classes.menu}\r\n                    elevation={4}\r\n                    getContentAnchorEl={null}\r\n                    anchorEl={anchorElAdmin}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    TransitionComponent={Fade}\r\n                    open={openElAdmin}\r\n                    onClose={handleAdminMenuClose}\r\n                  >\r\n                    {/*//   USER LIST    */}\r\n                    <Link\r\n                      to=\"/admin/userlist\"\r\n                      className={classes.link_menu_item}\r\n                    >\r\n                      <MenuItem onClick={handleAdminMenuClose}>\r\n                        <ListItemIcon>\r\n                          <PeopleAlt />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Users\" />\r\n                      </MenuItem>\r\n                    </Link>\r\n                    {/*//   PRODUCT LIST    */}\r\n                    <Link\r\n                      to=\"/admin/productlist\"\r\n                      className={classes.link_menu_item}\r\n                    >\r\n                      <MenuItem onClick={handleAdminMenuClose}>\r\n                        <ListItemIcon>\r\n                          <ShoppingBasket />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Products\" />\r\n                      </MenuItem>\r\n                    </Link>\r\n                    {/*//   ORDERS LIST    */}\r\n                    <Link\r\n                      to=\"/admin/orderlist\"\r\n                      className={classes.link_menu_item}\r\n                    >\r\n                      <MenuItem onClick={handleAdminMenuClose}>\r\n                        <ListItemIcon>\r\n                          <ShoppingCart />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Orders\" />\r\n                      </MenuItem>\r\n                    </Link>\r\n                  </Menu>\r\n                </>\r\n              ) : null}\r\n            </>\r\n          ) : (\r\n            ///    LOGIN BUTTON IF USER DOES NOT EXISTS OR LOGGED OUT  ///\r\n            <Link className={classes.link} to=\"/login\">\r\n              <Button color=\"inherit\">\r\n                <GroupAddIcon />\r\n                &nbsp; LOGIN\r\n              </Button>\r\n            </Link>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/*///      FOR MOBILE VIEW    ///*/}\r\n      <Drawer anchor=\"bottom\" open={toggle} onClose={() => setToggle(false)}>\r\n        <List>\r\n          {userInfo ? (\r\n            ///    LOGOUT BUTTON IF USER EXISTS OR LOGGED IN   ///\r\n            <ListItem\r\n              button\r\n              className={classes.link_drawer}\r\n              onClick={logoutHandler}\r\n            >\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Logout\"} />\r\n            </ListItem>\r\n          ) : (\r\n            ///    LOGIN BUTTON IF USER DOES NOT EXISTS OR LOGGED OUT    ///\r\n\r\n            <Link className={classes.link_drawer} to=\"/login\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <GroupAddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Login\"} />\r\n              </ListItem>\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            className={classes.link_drawer}\r\n            to={userInfo ? \"/cart\" : \"/login?redirect=cart\"}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Cart\"} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n     return (\r\n          <footer>\r\n               <Container>\r\n                    <Row>\r\n                         <Col>\r\n                              <p className=\"text-center py-3\" style={{opacity: 0.8}}>Copyright &copy; 2020 by Shubham Dutta</p>\r\n                         </Col>\r\n                    </Row>\r\n               </Container>\r\n          </footer>\r\n     )\r\n}\r\n\r\nexport default Footer\r\n","import React from \"react\";\r\n\r\nimport \"../styles/components/Rating.css\";\r\n\r\nexport default function Rating({ value, text, color }) {\r\n  return (\r\n    <>\r\n      <div className=\"rating\">\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 1\r\n                ? \"fas fa-star\"\r\n                : value >= 0.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 2\r\n                ? \"fas fa-star\"\r\n                : value >= 1.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 3\r\n                ? \"fas fa-star\"\r\n                : value >= 2.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 4\r\n                ? \"fas fa-star\"\r\n                : value >= 3.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 5\r\n                ? \"fas fa-star\"\r\n                : value >= 4.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span className=\"ml-2\">{text}</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: \"#FAAE20\",\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/components/Products.css\";\r\n\r\nexport default function Products({ product, path }) {\r\n  return (\r\n    <>\r\n      <Card className=\"card my-3  rounded\">\r\n        <Link to={`products/${product.category}/${product._id}`}>\r\n          {/* <Card.Img className=\"card_image \" src={product.image} /> */}\r\n          <div className=\"card_image_div\">\r\n            <img\r\n              className=\"card_image\"\r\n              src={product.image}\r\n              alt={product.image}\r\n            />\r\n          </div>\r\n        </Link>\r\n        <Card.Body>\r\n          <Link to={`products/${product.category}/${product._id}`}>\r\n            <Card.Title\r\n              as=\"div\"\r\n              style={{ fontSize: \"16px\", textDecoration: \"none\" }}\r\n            >\r\n              <strong>{product.name}</strong>\r\n            </Card.Title>\r\n          </Link>\r\n\r\n          <Card.Text as=\"div\">\r\n            <div className=\"my-3\">\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} rating`}\r\n              />\r\n\r\n              {/* {product.rating} from {product.numReviews} rating */}\r\n            </div>\r\n          </Card.Text>\r\n\r\n          <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAILED,\r\n} from \"../actionTypes/productListConstants\";\r\n\r\n///*   ACTIONS    ///\r\n\r\nconst reqProducts = () => ({\r\n  type: PRODUCT_LIST_REQUEST,\r\n});\r\n\r\nconst addProducts = (products) => ({\r\n  type: PRODUCT_LIST_SUCCESS,\r\n  payload: products,\r\n});\r\n\r\nconst productsFailed = (errMess) => ({\r\n  type: PRODUCT_LIST_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n///*     ACTION CREATOR     ///\r\n\r\nexport const listProducts = (keyword = \"\", API) => async (dispatch) => {\r\n  try {\r\n    dispatch(reqProducts());\r\n\r\n    const { data } = await axios.get(`${API}/products?keyword=${keyword}`);\r\n\r\n    dispatch(addProducts(data));\r\n\r\n    console.log(data);\r\n  } catch (error) {\r\n    dispatch(\r\n      productsFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      variant=\"primary\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst Message = ({ varient, children }) => {\r\n  return (\r\n    <Alert className=\"mb-3\" severity={varient}>\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n      width: \"70rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  mobile: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function BasicPagination({ totalPage, setPaginate, isMobile }) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event, page) => {\r\n    setPaginate((prev) => ({\r\n      ...prev,\r\n      currentPage: page,\r\n    }));\r\n    if (isMobile) {\r\n      window.scrollTo(0, 2820);\r\n    } else {\r\n      window.scrollTo(0, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={isMobile ? classes.mobile : classes.root}>\r\n      <Pagination\r\n        className={classes.paginate}\r\n        count={totalPage}\r\n        onChange={handleChange}\r\n        shape=\"rounded\"\r\n        color=\"primary\"\r\n        size={isMobile ? \"small\" : \"large\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Welcome To eShop\",\r\n  description: \"Buy all the best products here at very cheap price\",\r\n  keyword:\r\n    \"eShop,ecommerce,cheap products,online store,ecommerce website,shopping cart,e commerce business,e commerce sites,free shopping cart,payment,payment integration,paypal,stripe,search by products,best products,buy electronics,buy men's accessories,buy women's accessories,buy home appliances\",\r\n};\r\n\r\nexport default Meta;\r\n","export const carousalData = [\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_electronics.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_electronics_phone.png\",\r\n    heading: \"Electronics Accessories\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n    id: \"#electronics\",\r\n  },\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_home.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_home_phone.png\",\r\n    heading: \"Home Appliances\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n    id: \"#home_appliances\",\r\n  },\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_mens.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_mens_phone.png\",\r\n    heading: \"Mens Accessories\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n\r\n    id: \"#mens_accessories\",\r\n  },\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_womens.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_womens_phone.png\",\r\n    heading: \"Womens Accessories\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n    id: \"#womens_accessories\",\r\n  },\r\n];\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Products\";\r\n\r\n// Owl Carousal\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\r\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../redux/actions/productListAction\";\r\n\r\n// Components\r\nimport Loader from \"../components/Loader\";\r\nimport ErrMess from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n// Carousal Data\r\nimport { carousalData } from \"../utils/carousalData\";\r\n\r\n// Styling\r\nimport \"../styles/Screen/HomeScreen.css\";\r\n\r\nexport default function Home({ location, API, isMobile }) {\r\n  // option for card carousal\r\n  const options = {\r\n    loop: false,\r\n    dots: false,\r\n    margin: 10,\r\n    nav: true,\r\n    navText: [\r\n      \"<i class='fa fa-2x fa-angle-left'></i>\",\r\n      \"<i class='fa fa-2x fa-angle-right'></i>\",\r\n    ],\r\n    responsive: {\r\n      320: {\r\n        items: 1,\r\n      },\r\n      768: {\r\n        items: 3,\r\n      },\r\n      1000: {\r\n        items: 4,\r\n      },\r\n    },\r\n  };\r\n\r\n  // option for hero section carousal\r\n  const options2 = {\r\n    loop: true,\r\n    margin: 100,\r\n    nav: true,\r\n    autoplay: true,\r\n    autoplayTimeout: 4000,\r\n    lazyLoad: true,\r\n    smartSpeed: 1000,\r\n    items: 1,\r\n  };\r\n\r\n  //   fetching datas of productList from redux state\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  // PAGINATION CALCULATIONS\r\n  const [paginate, setPaginate] = useState({\r\n    allProducts: [],\r\n    currentPage: 1,\r\n    allProductsPerPage: !isMobile ? 6 : 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPaginate((prev) => ({\r\n      ...prev,\r\n      allProducts: products,\r\n    }));\r\n\r\n    window.scrollTo(0, 0);\r\n  }, [loading, products]);\r\n\r\n  const { allProducts, currentPage, allProductsPerPage } = paginate;\r\n\r\n  // Logic for displaying current allProducts\r\n  const indexOfLastProduct = currentPage * allProductsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - allProductsPerPage;\r\n  const currentProducts = allProducts.slice(\r\n    indexOfFirstProduct,\r\n    indexOfLastProduct\r\n  );\r\n  const totalPage = Math.ceil(allProducts.length / allProductsPerPage);\r\n  // ENDS PAGINATION CALCULATIONS\r\n\r\n  // SEARCH by query in route\r\n  const [isQuerying, setIsQuerying] = useState(false);\r\n\r\n  const query = new URLSearchParams(location.search);\r\n  const keyword = query.get(\"name\") || \"\";\r\n  // const pageNumber = parseInt(query.get(\"pageNumber\")) || \"\";\r\n\r\n  useEffect(() => {\r\n    if (keyword) {\r\n      setIsQuerying(true);\r\n    } else {\r\n      setIsQuerying(false);\r\n    }\r\n    dispatch(listProducts(keyword, API));\r\n  }, [dispatch, keyword, API]);\r\n\r\n  // Scroll on Click to products category in carousel\r\n  const electronicsRef = useRef(null); // To Electronics\r\n  const homeRef = useRef(null); // To Home Appliances\r\n  const mensRef = useRef(null); // To Mens Accessories\r\n  const womensRef = useRef(null); // To Womens Accessories\r\n\r\n  // function to scroll to desired position smoothly\r\n  const executeScroll = (id) => {\r\n    if (id === \"#electronics\") {\r\n      electronicsRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    } else if (id === \"#home_appliances\") {\r\n      homeRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    } else if (id === \"#mens_accessories\") {\r\n      mensRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    } else if (id === \"#womens_accessories\") {\r\n      womensRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {/*//   CAROUSAL   /// */}\r\n      <OwlCarousel\r\n        key={products.length}\r\n        className=\"owl-carousel owl-theme\"\r\n        {...options2}\r\n      >\r\n        {carousalData.map((data, index) => (\r\n          <Col key={index}>\r\n            <div\r\n              className={isMobile ? \"carousal_phone\" : \"carousal\"}\r\n              style={\r\n                isMobile\r\n                  ? {\r\n                      background: `url(${data.image_mobile})`,\r\n                      backgroundPosition: \"-30px\",\r\n                      backgroundSize: \"cover\",\r\n                      backgroundRepeat: \"no-repeat\",\r\n                    }\r\n                  : {\r\n                      background: `url(${data.image_desktop})`,\r\n                      backgroundPosition: \"center\",\r\n                      backgroundSize: \"cover\",\r\n                      backgroundRepeat: \"no-repeat\",\r\n                    }\r\n              }\r\n            >\r\n              <h1\r\n                className={\r\n                  isMobile ? \"carousal_heading_phone\" : \"carousal_heading\"\r\n                }\r\n              >\r\n                {data.heading}\r\n              </h1>\r\n              <h2\r\n                className={isMobile ? \"carousal_para_phone\" : \"carousal_para\"}\r\n              >\r\n                {data.para}\r\n              </h2>\r\n              <button\r\n                onClick={() => executeScroll(data.id)}\r\n                className={\r\n                  isMobile ? \"carousal_button_phone\" : \"carousal_button\"\r\n                }\r\n              >\r\n                SHOP NOW\r\n              </button>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </OwlCarousel>\r\n\r\n      {/* /////////////////    BUG: Render carusal before children ////////// */}\r\n      {/*//////////////////    SOLUTION: ADD key to OwlCarousal  */}\r\n\r\n      <div className={isMobile ? \"products_section_phone\" : \"products_section\"}>\r\n        {/*// if nothing there to search then show all category division of products otherwise not //*/}\r\n        {!isQuerying ? (\r\n          <>\r\n            {/* ELECTRONICS */}\r\n            <h1\r\n              ref={electronicsRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone  pt-5 mt-4\"\r\n                  : \" category_heading pt-5 mt-5\"\r\n              }\r\n            >\r\n              Electronics Accessories\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"electronics\")\r\n                      .map((electronic, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={electronic} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n\r\n            {/* HOME APPLIANCES */}\r\n            <h1\r\n              ref={homeRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone  pt-5 mt-4\"\r\n                  : \"category_heading pt-5 mt-5\"\r\n              }\r\n            >\r\n              Home Appliances\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"home_appliances\")\r\n                      .map((home_appliance, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={home_appliance} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n\r\n            {/* MENS'S ACCESSORIES */}\r\n            <h1\r\n              ref={mensRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone  pt-5 mt-4\"\r\n                  : \"category_heading pt-5 mt-5\"\r\n              }\r\n            >\r\n              Men's Accessories\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"mens_accessories\")\r\n                      .map((mens_accessory, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={mens_accessory} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n\r\n            {/* WOMEN'S ACCESSORIES */}\r\n            <h1\r\n              ref={womensRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone  pt-5 mt-4\"\r\n                  : \"category_heading pt-5 mt-5\"\r\n              }\r\n            >\r\n              Women's Accessories\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"womens_accessories\")\r\n                      .map((womens_accessory, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={womens_accessory} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n          </>\r\n        ) : null}\r\n\r\n        {/*// CAROUSAL ENDS //*/}\r\n\r\n        {/* ALL PRODUCTS */}\r\n        <h1\r\n          className={\r\n            isMobile\r\n              ? \"category_heading_phone  pt-5 mt-4\"\r\n              : \"category_heading pt-5 mt-4\"\r\n          }\r\n        >\r\n          Latest Products\r\n        </h1>\r\n\r\n        <Row>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n          ) : (\r\n            currentProducts.map((product, index) => (\r\n              <Col md={4} lg={3} key={index}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))\r\n          )}\r\n\r\n          {/*// PAGINATION COMPONENT //*/}\r\n          <Paginate\r\n            totalPage={totalPage}\r\n            currentPage={currentPage}\r\n            setPaginate={setPaginate}\r\n            isMobile={isMobile}\r\n          />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst ProductScreenSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Skeleton animation=\"wave\" variant=\"rect\" height={440} />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Skeleton variant=\"rect\" height={320} />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Skeleton variant=\"rect\" height={200} />\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Row>\r\n        <Col md={6}>\r\n          <Skeleton variant=\"text\" height={60} width={360} />\r\n          <Skeleton variant=\"rect\" height={16} width={180} />\r\n          <div className=\"mt-4 ml-4 mb-3\">\r\n            <Skeleton variant=\"text\" height={30} width={180} />\r\n            <Skeleton variant=\"text\" height={16} width={190} />\r\n            <Skeleton variant=\"text\" height={24} width={300} />\r\n          </div>\r\n\r\n          <Skeleton variant=\"text\" height={60} width={360} />\r\n          <Skeleton variant=\"rect\" height={30} width={500} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreenSkeleton;\r\n","import {\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILED,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAILED,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAILED,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAILED,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAILED,\r\n} from \"../actionTypes/productDetailsConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n///*      ACTIONS    ///\r\n\r\n// product details\r\nconst reqProduct = () => ({\r\n  type: PRODUCT_DETAILS_REQUEST,\r\n});\r\n\r\nconst addProduct = (product) => ({\r\n  type: PRODUCT_DETAILS_SUCCESS,\r\n  payload: product,\r\n});\r\n\r\nconst productFailed = (errMess) => ({\r\n  type: PRODUCT_DETAILS_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  create products review\r\nconst reqProductReview = () => ({\r\n  type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n});\r\n\r\nconst addProductReview = () => ({\r\n  type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n});\r\n\r\nconst productReviewFailed = (errMess) => ({\r\n  type: PRODUCT_CREATE_REVIEW_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  delete product\r\nconst reqProductDelete = () => ({\r\n  type: PRODUCT_DELETE_REQUEST,\r\n});\r\n\r\nconst successProductDelete = () => ({\r\n  type: PRODUCT_DELETE_SUCCESS,\r\n});\r\n\r\nconst deleteProductFailed = (errMess) => ({\r\n  type: PRODUCT_DELETE_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  create product\r\nconst reqProductCreate = () => ({\r\n  type: PRODUCT_CREATE_REQUEST,\r\n});\r\n\r\nconst successProductCreate = (data) => ({\r\n  type: PRODUCT_CREATE_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst productCreateFailed = (errMess) => ({\r\n  type: PRODUCT_CREATE_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  update product\r\nconst reqProductUpdate = () => ({\r\n  type: PRODUCT_UPDATE_REQUEST,\r\n});\r\n\r\nconst successProductUpdate = (data) => ({\r\n  type: PRODUCT_UPDATE_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst productUpdateFailed = (errMess) => ({\r\n  type: PRODUCT_UPDATE_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n///*   ACTION CREATOR    ///\r\n\r\n// list all product details\r\nexport const listProductDetails = (API, category, id) => async (dispatch) => {\r\n  try {\r\n    dispatch(reqProduct());\r\n\r\n    const { data } = await axios.get(`${API}/products/${category}/${id}`);\r\n\r\n    dispatch(addProduct(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      productFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// Create product Review\r\nexport const createProductReview = (API, category, id, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqProductReview());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${API}/products/${category}/${id}/reviews`,\r\n      review,\r\n      config\r\n    );\r\n\r\n    dispatch(addProductReview());\r\n  } catch (error) {\r\n    dispatch(\r\n      productReviewFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///*   ADMIN USER   ///\r\n\r\n// delete product\r\nexport const deleteProduct = (API, category, id) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqProductDelete());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`${API}/products/${category}/${id}`, config);\r\n\r\n    dispatch(successProductDelete());\r\n  } catch (error) {\r\n    dispatch(\r\n      deleteProductFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// create product\r\nexport const createProduct = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqProductCreate());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`${API}/products`, {}, config);\r\n\r\n    dispatch(successProductCreate(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      productCreateFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// update product\r\nexport const updateProduct = (API, category, product) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqProductUpdate());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `${API}/products/${category}/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch(successProductUpdate(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      productUpdateFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//////////////////    COMPONENTS     //////////////////////////\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport Skeleton from \"./skeletons/ProductScreenSkeleton\";\r\n\r\n/////////////////     REDUX    ///////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../redux/actions/productDetailsAction\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../redux/actionTypes/productDetailsConstants\";\r\n\r\nimport \"../styles/Screen/ProductScreen.css\";\r\n\r\nexport default function ProductScreen({ history, match, API, isMobile }) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  //////////////////     fetching datas of productList from redux state   ////////////////////////\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // product details\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  // create product review reducer\r\n  const productCreateReview = useSelector((state) => state.productCreateReview);\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productCreateReview;\r\n\r\n  // user login credentials\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n      alert(\"Review Submitted Successfully\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    dispatch(listProductDetails(API, match.params.category, match.params.id));\r\n  }, [dispatch, match, successProductReview, API]);\r\n\r\n  console.log(product.reviews);\r\n  //////////////////////    Redirect to Cart page      ///////////////////////\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(\r\n      `/cart/${match.params.category}/${match.params.id}?qty=${qty}`\r\n    );\r\n  };\r\n\r\n  // submit product review\r\n  const submitReviewHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(API, match.params.category, match.params.id, {\r\n        rating: rating,\r\n        comment: comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  /////////////////////    GO BACK      ////////////////////////\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">{product.category}</li>\r\n          {!isMobile ? (\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {product.name}\r\n            </li>\r\n          ) : null}\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Button>\r\n\r\n      {loading ? (\r\n        <Skeleton />\r\n      ) : error ? (\r\n        <Message varient=\"#FC308B\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          {/* /// add custom title in productScreen (of product name) / */}\r\n          <Meta title={`${product.name}`} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image\r\n                className=\"shadow\"\r\n                src={product.image}\r\n                alt={product.name}\r\n                fluid\r\n              />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup className=\"shadow\" varient=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3 className=\"font-weight-bold text-primary\">\r\n                    {product.name}\r\n                  </h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>\r\n                    <h5 className=\"font-weight-bold text-secondary\">Price:</h5>\r\n                  </strong>\r\n                  <span>{product.price}</span>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>\r\n                    <h5 className=\"font-weight-bold text-secondary\">\r\n                      Description:\r\n                    </h5>\r\n                  </strong>\r\n                  <p>{product.description}</p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup varient=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price: </Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status: </Col>\r\n                      <Col>\r\n                        <strong>\r\n                          ${product.countInStock ? \"In Stock\" : \"Out Of Stock\"}\r\n                        </strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Quantity: </Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (q) => (\r\n                                <option key={q + 1} value={q + 1}>\r\n                                  {q + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      className={\r\n                        product.countInStock === 0\r\n                          ? \"btn-block p-3 disabled\"\r\n                          : \"btn-block p-3\"\r\n                      }\r\n                      onClick={addToCartHandler}\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      ADD TO CART\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/*// list down product reviews and create review //*/}\r\n          <Row>\r\n            <Col sm={12} md={9}>\r\n              <h2\r\n                className=\"mt-5 font-weight-bolder  text-primary display-5\"\r\n                style={isMobile ? { fontSize: \"2rem\" } : { fontSize: \"3rem\" }}\r\n              >\r\n                Product Reviews\r\n              </h2>\r\n              <Rating value={product.rating} />\r\n              {product.reviews && product.reviews.length === 0 && (\r\n                <Message>No Reviews</Message>\r\n              )}\r\n\r\n              <ListGroup className=\"pt-3\" variant=\"flush\">\r\n                {product.reviews &&\r\n                  product.reviews.map((review) => {\r\n                    return (\r\n                      <ListGroup.Item key={review._id}>\r\n                        <div>\r\n                          <h4>\r\n                            <strong>{review.name}</strong>\r\n                          </h4>{\" \"}\r\n                          <Rating value={review.rating} />\r\n                        </div>\r\n\r\n                        <div>\r\n                          <strong>{review.createdAt.substring(0, 10)} </strong>\r\n                          <span className=\"pl-3\"> {review.comment}</span>\r\n                        </div>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n              </ListGroup>\r\n\r\n              <ListGroup varient=\"flush\">\r\n                <ListGroup.Item className=\"pt-2 mt-4\">\r\n                  <h2\r\n                    className=\"font-weight-bold pb-2 text-primary\"\r\n                    style={\r\n                      isMobile ? { fontSize: \"1.5rem\" } : { fontSize: \"2.3rem\" }\r\n                    }\r\n                  >\r\n                    Write Your Review\r\n                  </h2>\r\n                  {errorProductReview && (\r\n                    <Message varient=\"error\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label\r\n                          style={isMobile ? { fontSize: \"1.3rem\" } : {}}\r\n                          className=\"review_form_label  text-primary\"\r\n                        >\r\n                          Rating\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option>Select Rating...</option>\r\n                          <option value=\"1\">1 - Very Bad</option>\r\n                          <option value=\"2\">2 - Not too Bad</option>\r\n                          <option value=\"3\">3 - Noice</option>\r\n                          <option value=\"4\">4 - Loved it</option>\r\n                          <option value=\"5\">5 - WoW Amazing</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label\r\n                          style={isMobile ? { fontSize: \"1.3rem\" } : {}}\r\n                          className=\"review_form_label  text-primary\"\r\n                        >\r\n                          Your Comment\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"8\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        className=\"review_submit\"\r\n                        onClick={submitReviewHandler}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  CART_ITEM_ADD,\r\n  CART_ITEM_REMOVE,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_ITEM_RESET,\r\n} from \"../actionTypes/cartConstants\";\r\n\r\n///*     ACTIONS      ///\r\n\r\nconst addCart = (data, qty) => ({\r\n  type: CART_ITEM_ADD,\r\n  payload: {\r\n    product: data._id,\r\n    name: data.name,\r\n    image: data.image,\r\n    price: data.price,\r\n    category: data.category,\r\n    countInStock: data.countInStock,\r\n    qty,\r\n  },\r\n});\r\n\r\nconst removeCart = (id) => ({\r\n  type: CART_ITEM_REMOVE,\r\n  payload: id,\r\n});\r\n\r\nconst shippingAddress = (data) => ({\r\n  type: CART_SAVE_SHIPPING_ADDRESS,\r\n  payload: data,\r\n});\r\n\r\nconst paymentMethod = (data) => ({\r\n  type: CART_SAVE_PAYMENT_METHOD,\r\n  payload: data,\r\n});\r\n\r\n///*     ACTION CREATOR    ///\r\n\r\n///   ADD TO CART   ///\r\nexport const addToCart = (API, id, category, qty) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { data } = await axios.get(`${API}/products/${category}/${id}`);\r\n  dispatch(addCart(data, qty));\r\n  // Adding cartItems to localStorage\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n///   REMOVE FROM CART   ///\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch(removeCart(id));\r\n  // Adding to localStorage after removing particular product\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n///   SAVE SHIPPING ADDRESS   ///\r\nexport const addShippingAddress = (data) => (dispatch) => {\r\n  dispatch(shippingAddress(data));\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\n///   SAVE PAYMENT METHOD   ///\r\nexport const addPaymentMethod = (data) => (dispatch) => {\r\n  dispatch(paymentMethod(data));\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n\r\n///   RESET CART ITEMS   ///\r\nexport const emptyCart = () => (dispatch) => {\r\n  dispatch({ type: CART_ITEM_RESET });\r\n\r\n  localStorage.removeItem(\"cartItems\");\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n//////////////////    COMPONENTS     //////////////////////////\r\nimport Message from \"../components/Message\";\r\n\r\n/////////////////     REDUX    ///////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../redux/actions/cartAction\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//////////////////   CSS style   //////////////////////////////\r\n\r\nimport \"../styles/Screen/CartScreen.css\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst CartScreen = ({ match, location, history, isMobile, API }) => {\r\n  const productId = match.params.id;\r\n  const category = match.params.category;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /// User Login Credentials  ///\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  ///  cart reducer  ///\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (productId) {\r\n      dispatch(addToCart(API, productId, category, qty));\r\n    }\r\n  }, [dispatch, productId, qty, category, userInfo, history, API]);\r\n\r\n  ///    remove cart Handler  ///\r\n  const removecartHandler = (productId) => {\r\n    console.log(productId);\r\n    dispatch(removeFromCart(productId));\r\n  };\r\n\r\n  ///   Checkout Process Handler  ///\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n    console.log(\"CHECKOUT\");\r\n  };\r\n\r\n  ///  GO BACK   ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Cart Screen / */}\r\n      <Meta title=\"Cart Screen\" />\r\n      {/*///  BREADCRUMB OF NAV  /*/}\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            CART\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2\">\r\n        Go Back\r\n      </Button>\r\n      {/*///////////////////////////  CART WHOLE SECTION  /////////////////////////////*/}\r\n\r\n      <Row className=\"mt-4\">\r\n        {/*//////////////////////////   1. CART LEFT SECTION   //////////////////////////////*/}\r\n        <Col md={8}>\r\n          <h1 className=\"cart__name \">\r\n            YOUR CART ({cartItems && cartItems.length})\r\n            <span className=\"cart__name__span\"> ITEM</span>\r\n          </h1>\r\n\r\n          <br />\r\n\r\n          {/*//////////////    CART == EMPTY -> ErrMess => Else => loop through cartItems   ////////////*/}\r\n\r\n          {cartItems.length === 0 ? (\r\n            <Message varient=\"info\">\r\n              <span className=\"cart__empty\">Your cart is empty </span>\r\n              <Link to=\"/\">Keep Shopping</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup varient=\"flush\" className=\"shadow-lg\">\r\n              {!isMobile ? (\r\n                <ListGroup.Item className=\"cart__left__heading\">\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <h3>Image</h3>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                      <h3>Name</h3>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <h3>Price</h3>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <h3>Quantity</h3>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ) : null}\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item key={item.product}>\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <Image\r\n                        className=\"cart__left__item__image\"\r\n                        width={isMobile ? \"360\" : \"200\"}\r\n                        src={item.image}\r\n                        alt={item.name}\r\n                        fluid\r\n                        rounded\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mt-4\" sm={3}>\r\n                      <Link\r\n                        className=\"cart__left__item__name\"\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        {item.name}\r\n                      </Link>\r\n                    </Col>\r\n                    <Col sm={2} className=\"cart__left__item__price\">\r\n                      ${item.price}\r\n                    </Col>\r\n                    <Col className={isMobile ? \"mt-3\" : \"\"} sm={2}>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        style={{ border: \"none\", outline: \"none\" }}\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            addToCart(\r\n                              item.product,\r\n                              item.category,\r\n                              Number(e.target.value)\r\n                            )\r\n                          )\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((q) => (\r\n                          <option key={q + 1} value={q + 1}>\r\n                            {q + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className={isMobile ? \"mt-3 mb-2\" : \"\"} sm={2}>\r\n                      <Button\r\n                        className=\"cart__left__item__remove\"\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => removecartHandler(item.product)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n\r\n        {/*//////////////////////////   2. CART RIGHT SECTION    /////////////////////////////*/}\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup>\r\n              <ListGroup.Item className={isMobile ? \"pt-4\" : \"pb-4\"}>\r\n                <Button\r\n                  className=\"btn-block p-2 cart__right__checkout\"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  PROCEED TO PAY\r\n                </Button>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <h4 className=\"cart__right__order__heading\">\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__subtotal\">Subtotal:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__subtotal--value\">\r\n                      ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__price\">Price:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__price--value\">\r\n                      $\r\n                      {cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__delivery\">Delivery:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__delivery--value\">Free</h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__total__price\">Total:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__total__price--value\">\r\n                      $\r\n                      {cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//////////////////////////////    CUSTOM STYLES   /////////////////////////////\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n  form: {\r\n    padding: theme.spacing(2.6),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper: {\r\n    width: \"50%\",\r\n    margin: \"auto\",\r\n    marginTop: \"3rem\",\r\n\r\n    paddingTop: theme.spacing(2.4),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for user edit screen\r\n  paperUserEdit: {\r\n    width: \"60%\",\r\n    margin: \"auto\",\r\n    marginTop: \"1.2rem\",\r\n\r\n    paddingTop: theme.spacing(2.4),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for product edit screen\r\n  paperProductEdit: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    marginTop: \"1rem\",\r\n    padding: \"3.6rem\",\r\n\r\n    paddingTop: theme.spacing(2.4),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      padding: \"1.6rem\",\r\n    },\r\n  },\r\n\r\n  avatar: {\r\n    width: \"3.1rem\",\r\n    height: \"3.1rem\",\r\n    marginLeft: \"50%\",\r\n    marginBottom: \"0.8rem\",\r\n    transform: \"translateX(-50%)\",\r\n    backgroundImage: \"linear-gradient(45deg, #2196f3,  70%, #045694 90%)\",\r\n  },\r\n\r\n  heading: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"1rem\",\r\n    marginTop: \"0.6rem\",\r\n    color: \"#1853F3\",\r\n    fontSize: \"2.4rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"1.4rem\",\r\n    },\r\n  },\r\n\r\n  input: {\r\n    \"& label\": {\r\n      color: theme.palette.info.main,\r\n      fontSize: \"1.2rem\",\r\n      fontWeight: \"550\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#2196f3 \",\r\n        paddingBottom: \"2.8rem\",\r\n      },\r\n    },\r\n    paddingBottom: theme.spacing(3.8),\r\n    width: \"80%\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for product edit screen\r\n  inputProduct: {\r\n    \"& label\": {\r\n      color: theme.palette.info.main,\r\n      fontSize: \"1.2rem\",\r\n      fontWeight: \"550\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#2196f3 \",\r\n        paddingBottom: \"2.8rem\",\r\n      },\r\n    },\r\n    paddingBottom: theme.spacing(3.8),\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  button: {\r\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n    width: \"80%\",\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"0.8rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for product edit screen\r\n  buttonProduct: {\r\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"1rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"76%\",\r\n      marginBottom: \"3rem\",\r\n    },\r\n  },\r\n\r\n  // upload image button\r\n  uploadButton: {\r\n    marginTop: \"0.8rem\",\r\n    marginBottom: \"0.4rem\",\r\n    marginRight: \"0rem\",\r\n    width: \"100%\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  icon: {\r\n    width: \"1.2rem\",\r\n  },\r\n\r\n  register: {\r\n    paddingTop: theme.spacing(2.8),\r\n    marginLeft: \"6rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"auto\",\r\n    },\r\n  },\r\n\r\n  login: {\r\n    paddingTop: theme.spacing(2.8),\r\n    marginLeft: \"6rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"auto\",\r\n    },\r\n  },\r\n\r\n  selectLabel: {\r\n    fontSize: \"1.4rem\",\r\n    textAlign: \"center\",\r\n    color: \"#1853F3\",\r\n  },\r\n\r\n  back: {\r\n    marginLeft: \"0.6rem\",\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    marginBottom: \"-1rem\",\r\n    backgroundImage: \"linear-gradient(45deg, #2196f3,  70%, #045694 90%)\",\r\n    borderRadius: \"2rem\",\r\n    padding: \"0.3rem 0 0.3rem 0.5rem\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\n\r\n//////////////////////////////   Step Connector   ///////////////////////////////\r\nexport const CheckoutStepConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage: \"linear-gradient(45deg, #2196f3,  30%, #045694 90%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage: \"linear-gradient(45deg, #045694,  30%, #2196f3 90%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  AccountBalance,\r\n  LocalShipping,\r\n  PeopleAlt,\r\n  ShoppingBasket,\r\n} from \"@material-ui/icons\";\r\n\r\n/////////////////////////////////////////////   Style Step Icon   //////////////////////////////////////////////\r\nexport const useStepIconStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: \"3.2rem\",\r\n    height: \"3.2rem\",\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"2.4rem\",\r\n      height: \"2.4rem\",\r\n    },\r\n  },\r\n  active: {\r\n    backgroundImage: \"linear-gradient(45deg, #045694,  30%, #2196f3 90%)\",\r\n    boxShadow: \"0 8px 22px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundImage: \"linear-gradient(45deg, #045694,  30%, #2196f3 90%)\",\r\n  },\r\n}));\r\n\r\n////////////////////////////////////////////   Step Icon   /////////////////////////////////////////////\r\nexport function StepIcon(props) {\r\n  const classes = useStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <PeopleAlt fontSize=\"small\" />,\r\n    2: <LocalShipping fontSize=\"small\" />,\r\n    3: <AccountBalance fontSize=\"small\" />,\r\n    4: <ShoppingBasket fontSize=\"small\" />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\n\r\n////////////////////////////////////    CUSTOM STYLE COMPONENTS   /////////////////////////////////////////\r\nimport { CheckoutStepConnector } from \"./CustomStyles/CheckoutStepper/StepConnector\";\r\nimport { StepIcon } from \"./CustomStyles/CheckoutStepper/StepIcon\";\r\n\r\nfunction getSteps() {\r\n  return [\"Sign In\", \"Shipping\", \"Payment\", \"Place Order\"];\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function CheckoutStepper({ step }) {\r\n  const classes = useStyles();\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <div>\r\n      <Stepper\r\n        className={classes.root}\r\n        activeStep={step}\r\n        alternativeLabel\r\n        connector={<CheckoutStepConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={StepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst LoginScreen = ({ history, location, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = login;\r\n\r\n  //    FOR SHIPPING PAGE REDIRECT OR HOME   //\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    // if user logged in redirect to particular query ('register', 'cart', 'shipping')\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    //DISPATCH LOGIN\r\n    dispatch(loginUser(API, email, password));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Login Screen / */}\r\n      <Meta title=\"Login Screen\" />\r\n      {redirect === \"shipping\" ? <CheckoutStepper step={0} /> : null}\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PeopleIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        {/*///////////////////////////////    LOADER    /////////////////////////////////////////*/}\r\n        {loading && <Loader />}\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-email\"\r\n              placeholder=\"Email Address\"\r\n              required\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <EmailIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={54}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              type={passwordVisibility ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setPasswordVisibility(!passwordVisibility)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {passwordVisibility ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={90}\r\n            />\r\n          </FormControl>\r\n\r\n          {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n          {error && <Message varient=\"error\">{error}</Message>}\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item>\r\n              <Typography component=\"h5\" className={classes.register}>\r\n                Haven't Registered yet? &nbsp;\r\n                <Link\r\n                  to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n                  variant=\"body2\"\r\n                >\r\n                  Register\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../redux/actions/userAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst RegisterScreen = ({ history, location, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n  const [confirmPasswordVisibility, setConfirmPasswordVisibility] = useState(\r\n    false\r\n  );\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const register = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = register;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    //DISPATCH REGISTER\r\n    if (password === confirmPassword) {\r\n      dispatch(registerUser(API, name, email, password));\r\n    } else {\r\n      setMessage(\"Password does not match\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Register Screen / */}\r\n      <Meta title=\"Register Screen\" />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PeopleIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n\r\n        {/*///////////////////////////////    LOADER    /////////////////////////////////////////*/}\r\n        {loading && <Loader />}\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-name\">Name</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-name\"\r\n              placeholder=\"Your Name\"\r\n              required\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <PeopleIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={55}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-email\"\r\n              placeholder=\"Email Address\"\r\n              required\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <EmailIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={54}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              type={passwordVisibility ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setPasswordVisibility(!passwordVisibility)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {passwordVisibility ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={90}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-confirmPassword\">\r\n              Confirm Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n              type={confirmPasswordVisibility ? \"text\" : \"password\"}\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() =>\r\n                      setConfirmPasswordVisibility(!confirmPasswordVisibility)\r\n                    }\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {confirmPasswordVisibility ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={168}\r\n            />\r\n          </FormControl>\r\n\r\n          {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n\r\n          {error && <Message varient=\"error\">{error}</Message>}\r\n          {message && <Message varient=\"error\">{message}</Message>}\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item>\r\n              <Typography component=\"h5\" className={classes.login}>\r\n                Already Registered? &nbsp;\r\n                <Link\r\n                  to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n                  variant=\"body2\"\r\n                >\r\n                  Login\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAILED,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAILED,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAILED,\r\n  LIST_MY_ORDER_REQUEST,\r\n  LIST_MY_ORDER_SUCCESS,\r\n  LIST_MY_ORDER_FAILED,\r\n  LIST_ALL_ORDER_REQUEST,\r\n  LIST_ALL_ORDER_SUCCESS,\r\n  LIST_ALL_ORDER_FAILED,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAILED,\r\n} from \"../actionTypes/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n///*    ACTIONS   ///\r\n\r\n///     ORDER CREATE    ///\r\nconst reqOrder = () => ({\r\n  type: CREATE_ORDER_REQUEST,\r\n});\r\n\r\nconst addOrder = (order) => ({\r\n  type: CREATE_ORDER_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst orderFailed = (error) => ({\r\n  type: CREATE_ORDER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   Order Details   ///\r\nconst reqOrderDetails = () => ({\r\n  type: ORDER_DETAILS_REQUEST,\r\n});\r\n\r\nconst addOrderDetails = (order) => ({\r\n  type: ORDER_DETAILS_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst orderDetailsFailed = (error) => ({\r\n  type: ORDER_DETAILS_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///    PAY Order   ///\r\nconst reqPayOrder = () => ({\r\n  type: ORDER_PAY_REQUEST,\r\n});\r\n\r\nconst addPayOrder = (order) => ({\r\n  type: ORDER_PAY_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst payOrderFailed = (error) => ({\r\n  type: ORDER_PAY_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   MY ORDERS   ///\r\nconst reqMyOrders = () => ({\r\n  type: LIST_MY_ORDER_REQUEST,\r\n});\r\n\r\nconst addMyOrders = (order) => ({\r\n  type: LIST_MY_ORDER_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst myOrdersFailed = (error) => ({\r\n  type: LIST_MY_ORDER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   ALL ORDERS   ///\r\nconst reqAllOrders = () => ({\r\n  type: LIST_ALL_ORDER_REQUEST,\r\n});\r\n\r\nconst addAllOrders = (orders) => ({\r\n  type: LIST_ALL_ORDER_SUCCESS,\r\n  payload: orders,\r\n});\r\n\r\nconst allOrdersFailed = (error) => ({\r\n  type: LIST_ALL_ORDER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   UPDATE ORDER TO PAID   ///\r\nconst reqDeliverOrder = () => ({\r\n  type: ORDER_DELIVER_REQUEST,\r\n});\r\n\r\nconst updateOrderToDelivered = () => ({\r\n  type: ORDER_DELIVER_SUCCESS,\r\n  success: true,\r\n});\r\n\r\nconst deliverOrderFailed = (error) => ({\r\n  type: ORDER_DELIVER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///*     ACTION CREATOR    ///\r\n\r\n///    ORDER CREATE    ///\r\nexport const createOrder = (API, order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqOrder());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(`${API}/orders`, order, config);\r\n    dispatch(addOrder(data));\r\n  } catch (error) {\r\n    orderFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    ORDER DETAILS    ///\r\nexport const getOrderDetails = (API, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqOrderDetails());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${API}/orders/${id}`, config);\r\n    dispatch(addOrderDetails(data));\r\n  } catch (error) {\r\n    orderDetailsFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    PAY ORDER AND UPDATE ORDER TO PAID    ///\r\nexport const payOrder = (API, orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqPayOrder());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `${API}/orders/${orderId}/payment`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch(addPayOrder(data));\r\n  } catch (error) {\r\n    payOrderFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    LIST MY ORDERS (PARTICULAR USER)    ///\r\nexport const listMyOrders = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqMyOrders());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${API}/orders/myorders`, config);\r\n    dispatch(addMyOrders(data));\r\n  } catch (error) {\r\n    myOrdersFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///* ADMIN USER   ///\r\n\r\n///    LIST ALL ORDERS   ///\r\nexport const listAllOrders = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqAllOrders());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${API}/orders`, config);\r\n    dispatch(addAllOrders(data));\r\n  } catch (error) {\r\n    allOrdersFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    UPDATE ORDER TO DELIVERED    ///\r\nexport const deliverOrder = (API, orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqDeliverOrder());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    await axios.put(`${API}/orders/${orderId}/deliver`, {}, config);\r\n    dispatch(updateOrderToDelivered());\r\n  } catch (error) {\r\n    deliverOrderFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n","import { makeStyles, withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1.4),\r\n      width: \"76%\",\r\n    },\r\n    marginTop: \"1.4rem\",\r\n  },\r\n\r\n  heading: {\r\n    // color: theme.palette.info.main,\r\n    color: \"#2071E3\",\r\n    fontWeight: \"550\",\r\n  },\r\n  button: {\r\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n    margin: theme.spacing(1.4),\r\n    width: \"76%\",\r\n  },\r\n\r\n  table: {\r\n    borderRadius: \".4rem\",\r\n    marginTop: \"1.4rem\",\r\n  },\r\n  details: {\r\n    boxShadow:\r\n      \"rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px\",\r\n    \"&:hover\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#4EABDE\",\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\n/////////////////////////     CUSTOM STYLE TextField     ///////////////////////////\r\nexport const CssTextField = withStyles({\r\n  root: {\r\n    \"& label\": {\r\n      color: \"green\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"green\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n/////////////////////////     CUSTOM STYLE TABLE CELL     ///////////////////////////\r\nexport const StyledTableCell = withStyles((theme) =>\r\n  createStyles({\r\n    head: {\r\n      background: \"#2196F3\",\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  })\r\n)(TableCell);\r\n\r\n/////////////////////////     CUSTOM STYLE TABLE ROW     ///////////////////////////\r\nexport const StyledTableRow = withStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.selected,\r\n        \"&:hover\": {\r\n          backgroundColor: theme.palette.action.hover,\r\n        },\r\n      },\r\n    },\r\n  })\r\n)(TableRow);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///    MATERIAL UI   ///\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MaterialButton from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\n///    REDUX     ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n  userLogout,\r\n} from \"../redux/actions/userAction\";\r\nimport { listMyOrders } from \"../redux/actions/orderAction\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport {\r\n  useStyles,\r\n  CssTextField,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/ProfileScreen\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProfileScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  ///   LOGIN REDUCER    ///\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  ///    USER PROFILE REDUCER    ///\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  ///   UPDATE USER PROFILE REDUCER    ///\r\n  const updateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = updateProfile;\r\n\r\n  ///   MY ORDERS REDUCER    ///\r\n  const myOrdersList = useSelector((state) => state.myOrders);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = myOrdersList;\r\n\r\n  // redirect to login page if not logged in and set name & email field in form\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n    // logout if jwt expire\r\n    else if (error === \"jwt expired\") {\r\n      alert(\"Logged Out!! Again log in to view profile\");\r\n      dispatch(userLogout());\r\n    }\r\n  }, [dispatch, userInfo, user, history, error]);\r\n\r\n  // fetch user details (even after update) and fetch all orders\r\n  useEffect(() => {\r\n    dispatch(getUserDetails(API, \"profile\"));\r\n    dispatch(listMyOrders(API));\r\n  }, [dispatch, API]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password does not match\");\r\n    } else {\r\n      //DISPATCH UPDATE\r\n      dispatch(updateUserProfile(API, { id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <>\r\n      {/* /// add custom title in User Profile / */}\r\n      <Meta title=\"User profile\" />\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            PROFILE\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      {/*//////////////////////////////////////     GRID       ////////////////////////////////////// */}\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item sm={4} xs={12}>\r\n          <h2 className={classes.heading}>PROFILE</h2>\r\n          {loading && <Loader />}\r\n          <form className={classes.form}>\r\n            <CssTextField\r\n              id=\"outlined-name\"\r\n              label=\"Name\"\r\n              value={name}\r\n              multiline\r\n              placeholder=\"Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            <CssTextField\r\n              id=\"outlined-email\"\r\n              label=\"Email\"\r\n              value={email}\r\n              multiline\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <CssTextField\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              label=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <CssTextField\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              id=\"outlined-password\"\r\n              required\r\n              label=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n\r\n            {error && <Message varient=\"error\">{error}</Message>}\r\n            {message && <Message varient=\"error\">{message}</Message>}\r\n\r\n            {success && (\r\n              <Message varient=\"success\">Profile Updated Successfully</Message>\r\n            )}\r\n            <MaterialButton\r\n              className={classes.button}\r\n              onClick={submitHandler}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update\r\n            </MaterialButton>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid item sm={8} xs={12}>\r\n          <h2 className={classes.heading}>MY ORDERS</h2>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message varient=\"danger\">{errorOrders}</Message>\r\n          ) : (\r\n            <Paper elevation={8} className={classes.table}>\r\n              <TableContainer className={classes.table}>\r\n                <Table aria-label=\"customized table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell align=\"center\">ORDER ID</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">DATE</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">TOTAL</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">PAID</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">\r\n                        DELIVERED\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"center\"></StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {orders &&\r\n                      orders\r\n                        .slice(\r\n                          page * rowsPerPage,\r\n                          page * rowsPerPage + rowsPerPage\r\n                        )\r\n                        .map((order) => (\r\n                          <StyledTableRow key={order._id}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                              {order._id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.createdAt.substring(0, 10)}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.totalPrice}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.isPaid ? (\r\n                                <div>\r\n                                  <DoneIcon color=\"primary\"></DoneIcon>\r\n                                  &nbsp; &nbsp;\r\n                                  <span>{order.paidAt.substring(0, 10)}</span>\r\n                                </div>\r\n                              ) : (\r\n                                <i\r\n                                  className=\"fa fa-times\"\r\n                                  style={{ color: \"#f44336\" }}\r\n                                ></i>\r\n                              )}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.isDelivered ? (\r\n                                order.deliveredAt.substring(0, 10)\r\n                              ) : (\r\n                                <i\r\n                                  className=\"fa fa-times\"\r\n                                  style={{ color: \"#f44336\" }}\r\n                                ></i>\r\n                              )}\r\n                            </StyledTableCell>\r\n\r\n                            <StyledTableCell align=\"center\">\r\n                              <Link to={`/orders/${order._id}`}>\r\n                                <MaterialButton\r\n                                  className={classes.details}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  DETAILS\r\n                                </MaterialButton>\r\n                              </Link>\r\n                            </StyledTableCell>\r\n                          </StyledTableRow>\r\n                        ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              {orders && (\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={orders.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={(event, newPage) => setPage(newPage)}\r\n                  onChangeRowsPerPage={(event) => {\r\n                    setRowsPerPage(parseInt(event.target.value, 10));\r\n                    setPage(0);\r\n                  }}\r\n                />\r\n              )}\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport FiberPinIcon from \"@material-ui/icons/FiberPin\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addShippingAddress } from \"../redux/actions/cartAction\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const classes = useStyle();\r\n\r\n  ////////////////////     REDUX  REDUCER   ////////////////////\r\n  const shippingAdd = useSelector((state) => state.cart);\r\n  const { shippingAddress } = shippingAdd;\r\n\r\n  ////////////////////    SHIPPING ADDRESS STATE (DEFAULT: FROM LOCAL STORAGE)    ////////////////////////\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Redirect to loginScreen on logout\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    //DISPATCH SHIPPING ADDRESS\r\n    dispatch(addShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/paymentMethod\");\r\n  };\r\n\r\n  /////////////////////    GO BACK      ////////////////////////\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutStepper step={1} />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <div onClick={goBack}>\r\n          <ArrowBackIosIcon className={classes.back} />\r\n        </div>\r\n        <Avatar className={classes.avatar}>\r\n          <LocalShippingIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Shipping Address\r\n        </Typography>\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-address\">\r\n              Address\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-address\"\r\n              placeholder=\"Your Address\"\r\n              required\r\n              type=\"text\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LocationOnIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={60}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-city\">City</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-city\"\r\n              placeholder=\"Your City\"\r\n              required\r\n              type=\"text\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LocationCityIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={30}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-postalCode\">\r\n              Postal Code\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-postalCode\"\r\n              placeholder=\"Postal Code\"\r\n              required\r\n              type=\"text\"\r\n              value={postalCode}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <FiberPinIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={90}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-confirmPassword\">\r\n              Country\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-country\"\r\n              placeholder=\"Your Country\"\r\n              required\r\n              type=\"text\"\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LanguageIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={58}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            CONTINUE\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPaymentMethod } from \"../redux/actions/cartAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst PaymentMethodScreen = ({ history }) => {\r\n  const classes = useStyle();\r\n\r\n  ////////////////////     REDUX  REDUCER of Shipping Address   ////////////////////\r\n  const shippingAdd = useSelector((state) => state.cart);\r\n  const { shippingAddress } = shippingAdd;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Redirect to loginScreen on logout\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    /////////////////////////      DISPATCH PAYMENT METHOD and push to /placeorder   ////////////////\r\n    dispatch(addPaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  /////////////////////    GO BACK      ////////////////////////\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutStepper step={2} />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <div onClick={goBack}>\r\n          <ArrowBackIosIcon className={classes.back} />\r\n        </div>\r\n\r\n        <Avatar className={classes.avatar}>\r\n          <AccountBalanceIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Payment Method\r\n        </Typography>\r\n\r\n        <form className={classes.form}>\r\n          <FormControl component=\"fieldset\" className={classes.input}>\r\n            {/* <FormLabel className={classes.selectLabel} component=\"legend\">\r\n              Select Method\r\n            </FormLabel> */}\r\n            <RadioGroup\r\n              aria-label=\"payment method\"\r\n              name=\"payment method\"\r\n              value={paymentMethod}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"PayPal\"\r\n                control={<Radio required />}\r\n                label=\"PayPal\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Stripe\"\r\n                control={<Radio required />}\r\n                label=\"Stripe\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            CONTINUE\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentMethodScreen;\r\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// MOBILE BREAKPOINT\r\nconst isMobile = window.innerWidth <= 768;\r\nexport const useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: \"36ch\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n      display: \"inline\",\r\n    },\r\n\r\n    divider: {\r\n      marginBottom: \"0.5rem\",\r\n      marginTop: \"0.3rem\",\r\n    },\r\n    avatar: {\r\n      width: isMobile ? \"3.9rem\" : \"6.5rem\",\r\n      height: isMobile ? \"3.9rem\" : \"6.5rem\",\r\n      marginRight: \"1rem\",\r\n    },\r\n    paper: {\r\n      marginBottom: \"1.8rem\",\r\n      padding: \"0.4rem 1rem 1rem 0\",\r\n    },\r\n    list_item: {\r\n      paddingLeft: isMobile ? \"1.2rem\" : \"3.4rem\",\r\n      paddingRight: \"1rem\",\r\n      paddingBottom: \"1.4rem\",\r\n    },\r\n    order_summary: {\r\n      fontSize: \"1.6rem\",\r\n      margin: \"auto\",\r\n    },\r\n\r\n    order_link: {\r\n      textDecoration: \"none\",\r\n    },\r\n\r\n    message: {\r\n      paddingLeft: \"2rem\",\r\n      marginTop: \"0.8rem\",\r\n      width: \"100%\",\r\n    },\r\n\r\n    shipping: {\r\n      marginRight: isMobile ? \"1.8rem\" : \"2.8rem\",\r\n    },\r\n\r\n    email: {\r\n      color: \"#000\",\r\n    },\r\n\r\n    qty: {\r\n      fontSize: \"1.3rem\",\r\n      fontWeight: \"450\",\r\n    },\r\n\r\n    deliver_button: {\r\n      width: \"100%\",\r\n      height: \"3.6rem\",\r\n      border: \"none\",\r\n      outline: \"none\",\r\n      float: \"right\",\r\n      background: \"linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)\",\r\n      justifyContent: \"center\",\r\n      fontFamily: \"Montserrat, sans-serif\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 500,\r\n      fontSize: \"1.25rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      letterSpacing: \"0.005em\",\r\n      color: \"#ffffff\",\r\n      filter: \"drop-shadow(12px 12px 10px rgba(0, 0, 0, 0.42))\",\r\n\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        width: \"14rem\",\r\n        height: \"3rem\",\r\n        fontSize: \"1rem\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n///////////////////////////     MATERIAL UI   ////////////////////////////////\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport ErrMess from \"../components/Message\";\r\n\r\n///////////////////////////    REDUX     ///////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeFromCart } from \"../redux/actions/cartAction\";\r\nimport { createOrder } from \"../redux/actions/orderAction\";\r\nimport { CREATE_ORDER_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n///////////////////////////    CUSTOM STYLES     ///////////////////////////////\r\nimport { useStyles } from \"./customStyle/PlaceOrderScreen\";\r\n\r\nconst PlaceOrderScreen = ({ history, API, isMobile }) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // cart details\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems, shippingAddress, paymentMethod } = cart;\r\n\r\n  /////////////////////  Items Price   ////////////////////\r\n  cart.itemsPrice = cartItems\r\n    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n    .toFixed(2);\r\n\r\n  ////////////////////   Shipping Price  /////////////////////////////\r\n  cart.shippingPrice = (cart.itemsPrice > 150 ? 100 : 0).toFixed(2);\r\n\r\n  //////////////////////  Tax Price  /////////////////////////////\r\n  cart.taxPrice = ((cart.itemsPrice * 25) / 100).toFixed(2);\r\n\r\n  /////////////////////   TOTAL PRICE  /////////////////////////////\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  /////////////////  REMOVE ORDER FROM CART   //////////////\r\n  const removeCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const placeOrder = useSelector((state) => state.order);\r\n  const { order, success } = placeOrder;\r\n\r\n  //////////////////  PLACE ORDER   //////////////////////\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder(API, {\r\n        orderItems: cartItems,\r\n        shippingAddress: shippingAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (success) {\r\n      history.push(`/orders/${order._id}`);\r\n      dispatch({ type: CREATE_ORDER_RESET });\r\n    }\r\n  }, [dispatch, history, order, success, userInfo, API]);\r\n\r\n  return (\r\n    <>\r\n      <CheckoutStepper step={3} />\r\n\r\n      <Grid container spacing={4}>\r\n        {/*/////////////////////   LEFT SIDE    ///////////////////////////////////*/}\r\n        <Grid item md={8} xs={12}>\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h5\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>SHIPPING DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  {shippingAddress.address},\r\n                  <br />\r\n                  {shippingAddress.city},\r\n                  <br />\r\n                  {shippingAddress.country},\r\n                  <br />\r\n                  {shippingAddress.postalCode}\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n\r\n            <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h5\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>PAYMENT METHOD</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  {paymentMethod}\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"primary\" variant=\"h5\" component=\"h3\">\r\n                  <strong>ORDER DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n\r\n            {!cartItems.length ? (\r\n              <Container maxWidth=\"md\">\r\n                <ErrMess varient=\"info\">\r\n                  Your Cart Is Empty <Link to=\"/\">Keep Shopping</Link>\r\n                </ErrMess>\r\n              </Container>\r\n            ) : (\r\n              <List>\r\n                {cartItems.map((item, index) => (\r\n                  <div key={index}>\r\n                    <ListItem\r\n                      className={classes.list_item}\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          alt={item.name}\r\n                          variant=\"square\"\r\n                          src={item.image}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <Link\r\n                        className={classes.order_link}\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        <ListItemText\r\n                          primary={item.name}\r\n                          secondary={\r\n                            <Typography\r\n                              color=\"primary\"\r\n                              variant={isMobile ? \"span\" : \"body2\"}\r\n                              component=\"span\"\r\n                            >\r\n                              {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toFixed(2)}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </Link>\r\n                      <ListItemSecondaryAction\r\n                        style={\r\n                          isMobile\r\n                            ? { marginTop: \"2.2rem\", marginRight: \"-1.8rem\" }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"light\"\r\n                          onClick={() => removeCartHandler(item.product)}\r\n                        >\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider\r\n                      variant=\"fullWidth\"\r\n                      className={classes.divider}\r\n                      component=\"li\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/*/////////////////////   RIGHT SIDE    ///////////////////////////////////*/}\r\n        <Grid item md={4} xs={12}>\r\n          <Paper elevation={6}>\r\n            <List>\r\n              <ListItem>\r\n                <Typography\r\n                  className={classes.order_summary}\r\n                  color=\"primary\"\r\n                  variant=\"h4\"\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </Typography>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"inset\" component=\"br\" />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Items</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.itemsPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Shipping</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.shippingPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Tax</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.taxPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Total</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.totalPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"fullWidth\" component=\"br\" />\r\n\r\n              <ListItem>\r\n                <Button\r\n                  className=\"btn-block p-2\"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  PLACE ORDER\r\n                </Button>\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport StripeCheckoutButton from \"react-stripe-checkout\";\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { payOrder } from \"../redux/actions/orderAction\";\r\nimport { emptyCart } from \"../redux/actions/cartAction\";\r\nimport { ORDER_PAY_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport axios from \"axios\";\r\n\r\n// custom style for stripe checkout button\r\nconst useStyle = makeStyles(() => ({\r\n  stripeButton: {\r\n    background: \"linear-gradient(45deg, #007fe4 30%, #00c3f1 90%)\",\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport const StripeCheckout = ({ orderId, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Order details\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { orders } = orderDetails;\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Updated Order after paid\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  // if paid successfully reset\r\n  useEffect(() => {\r\n    if (successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      // empty cart items\r\n      dispatch(emptyCart());\r\n    }\r\n  }, [dispatch, successPay]);\r\n\r\n  // make payment through stripe by post request data to backend\r\n  const makePayment = async (token) => {\r\n    console.log(token);\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${API}/payment/stripe`,\r\n        { token, orderId },\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        }\r\n      );\r\n      console.log(data);\r\n      if (data) {\r\n        dispatch(payOrder(API, orderId, data));\r\n        alert(\r\n          \"Transaction completed by \" + orders.user.name + \" through stripe\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingPay ? (\r\n        <Loader />\r\n      ) : (\r\n        <StripeCheckoutButton\r\n          stripeKey={process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY}\r\n          token={makePayment}\r\n          amount={orders.totalPrice * 100}\r\n          currency=\"USD\"\r\n          name=\"Pay with Stripe\"\r\n          shippingAddress\r\n          billingAddress\r\n        >\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            className={classes.stripeButton}\r\n          >\r\n            Pay With Stripe\r\n          </Button>\r\n        </StripeCheckoutButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { payOrder } from \"../redux/actions/orderAction\";\r\nimport { emptyCart } from \"../redux/actions/cartAction\";\r\nimport { ORDER_PAY_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport const PayPalCheckout = ({ orderId, API }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { orders } = orderDetails;\r\n\r\n  // PAYPAL PAYMENT INTEGRATION\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  //paypal script\r\n  const addPayPalScript = async () => {\r\n    const { data: clientId } = await axios.get(`${API}/config/paypal`);\r\n    console.log(clientId);\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  // if paid successfully reset order_pay and add paypal script if order not paid and paypal is configured previously\r\n  useEffect(() => {\r\n    if (successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      //empty cart\r\n      dispatch(emptyCart());\r\n    } else if (orders && !orders.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, orders, successPay]);\r\n\r\n  // On payment successfully completed\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(API, orderId, paymentResult));\r\n    // alert(\"Transaction completed by \" + paymentResult.payer.name.given_name);\r\n    alert(\"Transaction completed by \" + orders.user.name + \" through paypal\");\r\n  };\r\n\r\n  // Error handling in payment\r\n  const errorPaymentHandler = (err) => {\r\n    console.log(err);\r\n    alert(err);\r\n  };\r\n\r\n  // On cancel of payment\r\n  const cancelPaymentHandler = (msg) => {\r\n    alert(\"Order \" + msg.orderID + \" Cancelled\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingPay ? (\r\n        <Loader />\r\n      ) : !sdkReady ? (\r\n        <Loader />\r\n      ) : (\r\n        <PayPalButton\r\n          amount={`${orders.totalPrice}`}\r\n          onSuccess={successPaymentHandler}\r\n          onError={errorPaymentHandler}\r\n          onCancel={cancelPaymentHandler}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst OrderScreenSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Skeleton\r\n        className=\"mt-4\"\r\n        width={600}\r\n        height={60}\r\n        variant=\"text\"\r\n        component=\"h2\"\r\n      />\r\n      <Grid className=\"mt-3\" container spacing={4}>\r\n        <Grid item md={8} xs={12}>\r\n          <Skeleton variant=\"rect\" height={500} />\r\n          <Skeleton className=\"mt-4\" variant=\"rect\" height={200} />\r\n        </Grid>\r\n        <Grid item md={4} xs={12}>\r\n          <Skeleton variant=\"rect\" height={360} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreenSkeleton;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///////////////////////////     MATERIAL UI   ////////////////////////////////\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n//////////////////////////////    / Components   ////////////////////////\r\nimport Message from \"../components/Message\";\r\nimport { StripeCheckout } from \"../components/StripeCheckout\";\r\nimport { PayPalCheckout } from \"../components/PayPalCheckout\";\r\n\r\n///////////////////////////    REDUX     ///////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails, deliverOrder } from \"../redux/actions/orderAction\";\r\nimport { ORDER_DELIVER_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\n///////////////////////////    CUSTOM STYLES     ///////////////////////////////\r\nimport { useStyles } from \"./customStyle/PlaceOrderScreen\";\r\nimport \"../styles/Screen/OrderScreen.css\";\r\nimport OrderScreenSkeleton from \"./skeletons/OrderScreenSkeleton\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst OrderScreen = ({ match, history, API, isMobile }) => {\r\n  const classes = useStyles();\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials reducer\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Order details reducer\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, orders, error } = orderDetails;\r\n\r\n  // PAYMENT INTEGRATION (update order to paid) reducer\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { success: successPay } = orderPay;\r\n\r\n  // Update order to deliver reducer\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(API, orderId));\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, userInfo, history, API]);\r\n\r\n  const handleDeliver = () => {\r\n    dispatch(deliverOrder(API, orderId));\r\n  };\r\n\r\n  return loading ? (\r\n    <OrderScreenSkeleton />\r\n  ) : error ? (\r\n    <Message varient=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <br />\r\n      <Typography\r\n        variant={isMobile ? \"h6\" : \"h4\"}\r\n        component=\"h4\"\r\n        color=\"textSecondary\"\r\n      >\r\n        <span\r\n          style={isMobile ? { display: \"flex\", justifyContent: \"center\" } : {}}\r\n        >\r\n          ORDER\r\n        </span>{\" \"}\r\n        {orders._id}\r\n      </Typography>\r\n      <br />\r\n      <br />\r\n      <Grid container spacing={4}>\r\n        {/*/////////////////////   LEFT SIDE    ///////////////////////////////////*/}\r\n        <Grid item md={8} xs={12}>\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h4\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>SHIPPING DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  <strong className={classes.shipping}>Name: </strong>\r\n                  {orders.user.name}\r\n                  <br />\r\n                  <br />\r\n                  <strong className={classes.shipping}>Email: </strong>\r\n                  <a\r\n                    rel=\"noreferrer\"\r\n                    className={classes.email}\r\n                    href={orders.user.email}\r\n                    target=\"_blank\"\r\n                  >\r\n                    {orders.user.email}\r\n                  </a>\r\n                  <br />\r\n                  <br />\r\n                  <strong>Address: </strong>\r\n                  <span className=\"ml-4\">{orders.shippingAddress.address}</span>\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.city}\r\n                  </span>\r\n\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.country},\r\n                  </span>\r\n\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.postalCode}\r\n                  </span>\r\n                </Typography>\r\n              </ListItem>\r\n              <div className={classes.message}>\r\n                {orders.isDelivered ? (\r\n                  <Message varient=\"success\">\r\n                    Delivered at {orders.deliveredAt.substring(0, 10)}\r\n                  </Message>\r\n                ) : (\r\n                  <Message varient=\"error\">Not Delivered</Message>\r\n                )}\r\n              </div>\r\n            </List>\r\n\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h4\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>PAYMENT METHOD</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  {orders.paymentMethod}\r\n                </Typography>\r\n              </ListItem>\r\n              <div className={classes.message}>\r\n                {orders.isPaid ? (\r\n                  <Message varient=\"success\">\r\n                    Paid on {orders.paidAt.substring(0, 10)}\r\n                  </Message>\r\n                ) : (\r\n                  <Message varient=\"error\">Not Paid</Message>\r\n                )}\r\n              </div>\r\n            </List>\r\n          </Paper>\r\n\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h5\" : \"h4\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>ORDER DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n\r\n            {!orders.orderItems.length ? (\r\n              <Container maxWidth=\"md\">\r\n                <Message varient=\"info\">\r\n                  No order <Link to=\"/\"> Keep Shopping</Link>\r\n                </Message>\r\n              </Container>\r\n            ) : (\r\n              <List>\r\n                {orders.orderItems.map((item, index) => (\r\n                  <div key={index}>\r\n                    <ListItem\r\n                      className={classes.list_item}\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          alt={item.name}\r\n                          variant=\"square\"\r\n                          src={item.image}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <Link\r\n                        className={classes.order_link}\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        <ListItemText\r\n                          primary={item.name}\r\n                          secondary={\r\n                            <Typography\r\n                              color=\"primary\"\r\n                              variant={isMobile ? \"span\" : \"body2\"}\r\n                              component=\"span\"\r\n                            >\r\n                              {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toFixed(2)}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </Link>\r\n                      {!isMobile ? (\r\n                        <ListItemSecondaryAction className={classes.qty}>\r\n                          Qty: {item.qty}\r\n                        </ListItemSecondaryAction>\r\n                      ) : null}\r\n                    </ListItem>\r\n                    <Divider\r\n                      variant=\"fullWidth\"\r\n                      className={classes.divider}\r\n                      component=\"li\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/*/////////////////////   RIGHT SIDE    ///////////////////////////////////*/}\r\n        <Grid item md={4} xs={12}>\r\n          <Paper elevation={6}>\r\n            <List>\r\n              <ListItem>\r\n                <Typography\r\n                  className={classes.order_summary}\r\n                  color=\"primary\"\r\n                  variant=\"h4\"\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </Typography>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"inset\" component=\"br\" />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Items Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.itemsPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Delivery Charge</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.shippingPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Tax Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.taxPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Total Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.totalPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"fullWidth\" component=\"br\" />\r\n\r\n              {/*/// PAYPAL BUTTON or STRIPE BUTTON showed if order is not paid  ///*/}\r\n              {!orders.isPaid ? (\r\n                <ListItem>\r\n                  <Grid item xs={12}>\r\n                    {orders.paymentMethod === \"PayPal\" ? (\r\n                      <PayPalCheckout orderId={orderId} API={API} />\r\n                    ) : orders.paymentMethod === \"Stripe\" ? (\r\n                      <StripeCheckout orderId={orderId} API={API} />\r\n                    ) : null}\r\n                  </Grid>\r\n                </ListItem>\r\n              ) : (\r\n                userInfo &&\r\n                !userInfo.isAdmin && (\r\n                  <Message>Payment Done Successfully</Message>\r\n                )\r\n              )}\r\n              <ListItem>\r\n                {/*/// Marked As Delivered BUTTON showed if order is not delivered and if admin user  ///*/}\r\n                {userInfo &&\r\n                  userInfo.isAdmin &&\r\n                  orders.isPaid &&\r\n                  !orders.isDelivered && (\r\n                    <>\r\n                      <Button\r\n                        className=\"btn-block p-2 order_deliver_button\"\r\n                        onClick={handleDeliver}\r\n                      >\r\n                        MARKED AS DELIVERED\r\n                      </Button>\r\n                      {loadingDeliver && <Loader />}\r\n                    </>\r\n                  )}\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#2196f3\",\r\n    color: theme.palette.common.white,\r\n    paddingLeft: \"1.8rem\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    paddingLeft: \"1.4rem\",\r\n    padding: \"0.6rem\",\r\n  },\r\n}))(TableCell);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.selected,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  tableHead: {\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  tableCol: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  heading: {\r\n    color: \"#2196f3\",\r\n    fontFamily: \"Merriweather Sans, sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"3.6rem\",\r\n    marginBottom: \"2rem\",\r\n    letterSpacing: \"-0.018em\",\r\n    background: \"linear-gradient(90deg, #014581 0%, #5eb9ffec 86.54%)\",\r\n    backgroundClip: \"text\",\r\n    webkitBackgroundClip: \"text\",\r\n    webkitTextFillColor: \"transparent\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"3rem\",\r\n    },\r\n  },\r\n  check: {\r\n    color: \"#0e890a\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n  cross: {\r\n    fontWeight: \"bolder\",\r\n  },\r\n\r\n  // for product list screen only\r\n  createProductButton: {\r\n    width: \"18rem\",\r\n    height: \"3.6rem\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    marginBottom: \"2rem\",\r\n    float: \"right\",\r\n    background:\r\n      \"linear-gradient( 90deg,  #0663af, 0%, rgba(0, 149, 255, 0.582) 106.57%)\",\r\n    borderRadius: \"2.6rem\",\r\n    justifyContent: \"center\",\r\n    fontFamily: \"Montserrat, sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 500,\r\n    fontSize: \"1.25rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    letterSpacing: \"0.005em\",\r\n    color: \"#ffffff\",\r\n    filter: \"drop-shadow(12px 12px 10px rgba(0, 0, 0, 0.42))\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"14rem\",\r\n      height: \"3rem\",\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n/// Component  ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n/// Custom Style  ///\r\nimport {\r\n  useStyles,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/listScreen\";\r\n\r\n///  REDUX  ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteUser, listUsers } from \"../redux/actions/userAction\";\r\n\r\nconst UserListScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  ///  USER INFO REDUCER ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  USER LIST REDUCER  ///\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  ///  USER DELETE REDUCER  ///\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers(API));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, API]);\r\n\r\n  // delete user\r\n  const handleUserDelete = (userId) => {\r\n    if (window.confirm(\"Are you sure to delete this user??\")) {\r\n      dispatch(deleteUser(API, userId));\r\n    }\r\n  };\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Admin\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Users\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      <h1 className={classes.heading}>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Paper elevation={20}>\r\n            <TableContainer className={classes.tableContainer}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell className={classes.tableHead} align=\"left\">\r\n                      ID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      Name\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      Email\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      Admin\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      align=\"right\"\r\n                    ></StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users &&\r\n                    users\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((user) => (\r\n                        <StyledTableRow key={user._id}>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {user._id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {user.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {user.email}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {user.isAdmin ? (\r\n                              <CheckIcon className={classes.check} />\r\n                            ) : (\r\n                              <CloseIcon\r\n                                color=\"error\"\r\n                                className={classes.cross}\r\n                              />\r\n                            )}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"right\">\r\n                            {/* Edit user detail */}\r\n                            <Link to={`/admin/user/${user._id}/edit`}>\r\n                              <Tooltip title=\"Edit\">\r\n                                <IconButton aria-label=\"edit\">\r\n                                  <EditIcon color=\"inherit\" />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </Link>\r\n\r\n                            {/* Delete user detail */}\r\n                            <Tooltip title=\"Delete\">\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() => handleUserDelete(user._id)}\r\n                              >\r\n                                <DeleteIcon color=\"error\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {users && (\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={users.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={(event, newPage) => setPage(newPage)}\r\n                onChangeRowsPerPage={(event) => {\r\n                  setRowsPerPage(parseInt(event.target.value, 10));\r\n                  setPage(0);\r\n                }}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///    MATERIAL UI    ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Grid } from \"@material-ui/core\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n///      MATERIAL UI ICONS     ///\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n\r\n///     REDUX     ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getUserDetails, updateUser } from \"../redux/actions/userAction\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { USER_UPDATE_RESET } from \"../redux/actionTypes/userConstants\";\r\n\r\nconst UserEditScreen = ({ history, match, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  ///  USER LOGIN REDUCER  ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  USER DETAILS REDUCER (by id) ///\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  ///  USER UPDATE REDUCER (by id) ///\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  ///  get user details  ///\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getUserDetails(API, userId));\r\n    }\r\n  }, [dispatch, API, userId, userInfo, history]);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, userInfo, user, history, successUpdate]);\r\n\r\n  ///   GO BACK    ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  ///  update user details  ///\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      updateUser(API, userId, { name: name, email: email, isAdmin: isAdmin })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n            <Link to=\"/admin/userlist\">Users</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Grid container spacing={0}>\r\n        <Grid item md={1}>\r\n          {/* GO BACK */}\r\n          <Button onClick={goBack} className=\"btn btn-light mt-1\">\r\n            Go Back\r\n          </Button>\r\n        </Grid>\r\n        <Grid item md={11}>\r\n          <Paper elevation={14} className={classes.paperUserEdit}>\r\n            {/* <div onClick={goBack}>\r\n          <ArrowBackIosIcon className={classes.back} />\r\n        </div> */}\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n            <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n              Edit User\r\n            </Typography>\r\n\r\n            {/* ///    LOADER    /// */}\r\n            {loading && <Loader />}\r\n            {loadingUpdate && <Loader />}\r\n\r\n            <form className={classes.form}>\r\n              <FormControl variant=\"outlined\" className={classes.input}>\r\n                <InputLabel htmlFor=\"outlined-adornment-name\">Name</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-name\"\r\n                  placeholder=\"Your Name\"\r\n                  required\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <PeopleIcon className={classes.icon} />\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={45}\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControl variant=\"outlined\" className={classes.input}>\r\n                <InputLabel htmlFor=\"outlined-adornment-email\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-email\"\r\n                  placeholder=\"Email Address\"\r\n                  required\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <EmailIcon className={classes.icon} />\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={40}\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={isAdmin}\r\n                    onChange={() => setIsAdmin(!isAdmin)}\r\n                    name=\"Is Admin\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Is Admin\"\r\n              />\r\n\r\n              {/* ///     VALIDATION ERROR MESSAGE     /// */}\r\n              {error && <Message varient=\"error\">{error}</Message>}\r\n              {errorUpdate && <Message varient=\"error\">{errorUpdate}</Message>}\r\n\r\n              {/* ///     SUCCESS MESSAGE     /// */}\r\n              {successUpdate && (\r\n                <Message varient=\"success\">\r\n                  User Details Editted Successfully\r\n                </Message>\r\n              )}\r\n              <ButtonMui\r\n                className={classes.button}\r\n                onClick={submitHandler}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                UPDATE\r\n              </ButtonMui>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\n/// Component  ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n/// Custom Style  ///\r\nimport {\r\n  useStyles,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/listScreen\";\r\n\r\n///  REDUX  ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../redux/actions/productListAction\";\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n} from \"../redux/actions/productDetailsAction\";\r\nimport { PRODUCT_CREATE_RESET } from \"../redux/actionTypes/productDetailsConstants\";\r\n\r\nconst UserListScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  ///  USER INFO REDUCER ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  PRODUCT LIST REDUCER  ///\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  ///  PRODUCT DELETE REDUCER  ///\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { success: successDelete } = productDelete;\r\n\r\n  ///  PRODUCT CREATE REDUCER  ///\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    error: errorCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listProducts(\"\", API));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, history, successDelete, successCreate, API]);\r\n\r\n  // push to edit screen on creating sample product\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n    if (successCreate) {\r\n      history.push(\r\n        `/admin/product/${createdProduct.category}/${createdProduct._id}/edit`\r\n      );\r\n    }\r\n  }, [dispatch, history, successCreate, createdProduct]);\r\n\r\n  // delete product\r\n  const handleDeleteProduct = (category, productId) => {\r\n    if (window.confirm(\"Are you sure to delete this product??\")) {\r\n      dispatch(deleteProduct(API, category, productId));\r\n    }\r\n  };\r\n\r\n  // create product\r\n  const handleCreateProduct = () => {\r\n    dispatch(createProduct(API));\r\n  };\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Admin\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Products\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      <Grid container>\r\n        <Grid item md={9}>\r\n          <h1 className={classes.heading}>Products</h1>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Button\r\n            onClick={handleCreateProduct}\r\n            className={classes.createProductButton}\r\n          >\r\n            <AddIcon /> Create Product\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* LOADING OR ERROR VALIDATION FOR SAMPLE PRODUCT CREATE */}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Paper elevation={20}>\r\n            <TableContainer className={classes.tableContainer}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell className={classes.tableHead} align=\"left\">\r\n                      ID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      NAME\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      PRICE\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      CATEGORY\r\n                    </StyledTableCell>\r\n                    <StyledTableCell style={{ fontSize: \"1rem\" }} align=\"right\">\r\n                      BRAND\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      align=\"right\"\r\n                    ></StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {products &&\r\n                    products\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((product) => (\r\n                        <StyledTableRow key={product._id}>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {product._id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.price}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.category}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.brand}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"right\">\r\n                            {/* Edit product detail */}\r\n                            <Link\r\n                              to={`/admin/product/${product.category}/${product._id}/edit`}\r\n                            >\r\n                              <Tooltip title=\"Edit\">\r\n                                <IconButton aria-label=\"edit\">\r\n                                  <EditIcon color=\"inherit\" />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </Link>\r\n\r\n                            {/* Delete product detail */}\r\n                            <Tooltip title=\"Delete\">\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() =>\r\n                                  handleDeleteProduct(\r\n                                    product.category,\r\n                                    product._id\r\n                                  )\r\n                                }\r\n                              >\r\n                                <DeleteIcon color=\"error\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {products && (\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={products.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={(event, newPage) => setPage(newPage)}\r\n                onChangeRowsPerPage={(event) => {\r\n                  setRowsPerPage(parseInt(event.target.value, 10));\r\n                  setPage(0);\r\n                }}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\n///    MATERIAL UI    ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\n\r\n///      MATERIAL UI ICONS     ///\r\nimport AttachMoney from \"@material-ui/icons/AttachMoney\";\r\nimport Description from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport ShopIcon from \"@material-ui/icons/Shop\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport LocalMall from \"@material-ui/icons/LocalMall\";\r\n\r\n///     REDUX     ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../redux/actions/productDetailsAction\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../redux/actionTypes/productDetailsConstants\";\r\n\r\nconst ProductEditScreen = ({ history, match, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  ///  USER LOGIN REDUCER  ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  PRODUCT DETAILS REDUCER (by id) ///\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product } = productDetails;\r\n\r\n  ///  UPDATE PRODUCT DETAILS REDUCER (by id) ///\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n  } = productUpdate;\r\n\r\n  const productId = match.params.id;\r\n  const productCategory = match.params.category;\r\n\r\n  ///  get product details and reset update details and push to productScreen on successUpdate  ///\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      dispatch(listProductDetails(API, productCategory, productId));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    API,\r\n    userInfo,\r\n    productId,\r\n    productCategory,\r\n    history,\r\n    successUpdate,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (product || !product.image) {\r\n      setName(product.name);\r\n      setCategory(product.category);\r\n      setBrand(product.brand);\r\n      setPrice(product.price);\r\n      setDescription(product.description);\r\n      setImage(product.image);\r\n      setCountInStock(product.countInStock);\r\n    }\r\n  }, [product]);\r\n\r\n  ///   GO BACK    ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  ///  update product details  ///\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      updateProduct(API, productCategory, {\r\n        _id: product._id,\r\n        name: name,\r\n        category: category,\r\n        brand: brand,\r\n        price: price,\r\n        image: image,\r\n        countInStock: countInStock,\r\n        description: description,\r\n      })\r\n    );\r\n  };\r\n\r\n  // handle upload image\r\n  const handleUploadImage = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      await axios.post(`${API}/upload`, formData, config);\r\n\r\n      // set images readable instance of image being uploaded using multer\r\n      setImage(URL.createObjectURL(e.target.files[0]));\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      );\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* BREADCRUMB */}\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n            <Link to=\"/admin/productlist\">Products</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <Grid container spacing={2}>\r\n        <Grid item md={1}>\r\n          {/* GO BACK */}\r\n          <Button onClick={goBack} className=\"btn btn-light mt-1\">\r\n            Go Back\r\n          </Button>\r\n        </Grid>\r\n        <Grid item md={11}>\r\n          <Paper elevation={14} className={classes.paperProductEdit}>\r\n            <Avatar className={classes.avatar}>\r\n              <ShoppingBasketIcon />\r\n            </Avatar>\r\n            <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n              Edit Product\r\n            </Typography>\r\n            <br />\r\n\r\n            {/* ///    LOADER    /// */}\r\n            {loading && <Loader />}\r\n            {loadingUpdate && <Loader />}\r\n\r\n            <Grid container spacing={10} direction=\"row\" justify=\"space-evenly\">\r\n              <Grid item md={6} xs={12}>\r\n                {/* Product Name */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-name\">\r\n                    Name\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-name\"\r\n                    placeholder=\"Enter Name\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <ShopIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={56}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Category */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-category\">\r\n                    Category\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-category\"\r\n                    placeholder=\"Enter Category\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <LocalMall className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={84}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Brand */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Brand\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-brand\"\r\n                    placeholder=\"Enter Brand\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={brand}\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={54}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Price */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Price\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-price\"\r\n                    placeholder=\"Enter Price\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <AttachMoney className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={50}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} xs={12}>\r\n                {/* Product image */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Image\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-image\"\r\n                    placeholder=\"Enter Image url\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={image}\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <ImageIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={60}\r\n                  />\r\n                  {/* UPLOAD IMAGE */}\r\n                  <input\r\n                    id=\"upload-image\"\r\n                    name=\"upload-image\"\r\n                    className={classes.uploadButton}\r\n                    type=\"file\"\r\n                    onChange={handleUploadImage}\r\n                  />\r\n                  {uploading && <Loader />}\r\n                </FormControl>\r\n\r\n                {/* Product CountInStock */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-countInStock\">\r\n                    Count In Stock\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-countInStock\"\r\n                    placeholder=\"Enter Count In Stock\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={countInStock}\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <ShoppingCartIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={132}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Description */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Description\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-description\"\r\n                    placeholder=\"Enter Description\"\r\n                    required\r\n                    multiline\r\n                    rows={4}\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <Description className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={106}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              {successUpdate && <Message>updated Successfully</Message>}\r\n              {errorUpdate && <Message>{errorUpdate}</Message>}\r\n              <ButtonMui\r\n                className={classes.buttonProduct}\r\n                onClick={submitHandler}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                UPDATE\r\n              </ButtonMui>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n/// Component  ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\n/// Custom Style  ///\r\nimport {\r\n  useStyles,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/listScreen\";\r\n\r\n///  REDUX  ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listAllOrders } from \"../redux/actions/orderAction\";\r\n\r\nconst OrderListScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  ///  USER INFO REDUCER ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  ALL ORDERS REDUCER  ///\r\n  const allOrders = useSelector((state) => state.allOrders);\r\n  const { loading, error, orders } = allOrders;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listAllOrders(API));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, API]);\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Admin\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            ORDERS\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      <h1 className={classes.heading}>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Paper elevation={20}>\r\n            <TableContainer className={classes.tableContainer}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell className={classes.tableHead} align=\"left\">\r\n                      ID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      AMOUNT\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      USER\r\n                    </StyledTableCell>\r\n                    {/* <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      ADDRESS\r\n                    </StyledTableCell> */}\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      DATE\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      PAYMENT METHOD\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      PAID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      DELIVERED\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    ></StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders &&\r\n                    orders\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((order) => (\r\n                        <StyledTableRow key={order._id}>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {order._id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            ${order.totalPrice}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.user && order.user.name.split(\" \")[0]}\r\n                          </StyledTableCell>\r\n                          {/* <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.shippingAddress.city},{\" \"}\r\n                            {order.shippingAddress.postalCode},{\" \"}\r\n                            {order.shippingAddress.country}\r\n                          </StyledTableCell> */}\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.createdAt.substring(0, 10)}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.paymentMethod}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.isPaid ? (\r\n                              <>\r\n                                <CheckIcon className={classes.check} />\r\n                                {order.paidAt.substring(0, 10)}\r\n                              </>\r\n                            ) : (\r\n                              <CloseIcon\r\n                                color=\"error\"\r\n                                className={classes.cross}\r\n                              />\r\n                            )}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.isDelivered ? (\r\n                              <>\r\n                                <CheckIcon className={classes.check} />\r\n                                {order.deliveredAt.substring(0, 10)}\r\n                              </>\r\n                            ) : (\r\n                              <CloseIcon\r\n                                color=\"error\"\r\n                                className={classes.cross}\r\n                              />\r\n                            )}{\" \"}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"right\">\r\n                            {/*Order details (redirect to order screen and can marked as delivered) */}\r\n                            <Link to={`/orders/${order._id}`}>\r\n                              <Button color=\"primary\">Details</Button>\r\n                            </Link>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {orders && (\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={orders.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={(event, newPage) => setPage(newPage)}\r\n                onChangeRowsPerPage={(event) => {\r\n                  setRowsPerPage(parseInt(event.target.value, 10));\r\n                  setPage(0);\r\n                }}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./screen/HomeScreen\";\r\nimport \"./index.css\";\r\nimport ProductScreen from \"./screen/ProductScreen\";\r\nimport CartScreen from \"./screen/CartScreen\";\r\nimport LoginScreen from \"./screen/LoginScreen\";\r\nimport RegisterScreen from \"./screen/RegisterScreen\";\r\nimport ProfileScreen from \"./screen/ProfileScreen\";\r\nimport ShippingScreen from \"./screen/ShippingScreen\";\r\nimport PaymentMethod from \"./screen/PaymentMethod\";\r\nimport PlaceOrderScreen from \"./screen/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screen/OrderScreen\";\r\n// for admin user\r\nimport UserListScreen from \"./screen/UserListScreen\";\r\nimport UserEditScreen from \"./screen/UserEditScreen\";\r\nimport ProductListScreen from \"./screen/ProductListScreen\";\r\nimport ProductEditScreen from \"./screen/ProductEditScreen\";\r\nimport OrderListScreen from \"./screen/OrderListScreen\";\r\n\r\n//REDUX\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userLogout, checkUserAuthToken } from \"./redux/actions/userAction\";\r\nimport { USER_CHECK_TOKEN_RESET } from \"./redux/actionTypes/userConstants\";\r\n\r\nfunction App() {\r\n  // MOBILE BREAKPOINT\r\n  const isMobile = window.innerWidth <= 768;\r\n  const API = process.env.REACT_APP_API;\r\n\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { error } = useSelector((state) => state.userAuthToken);\r\n\r\n  // verify if auth token expired or not\r\n  useEffect(() => {\r\n    dispatch(checkUserAuthToken(API));\r\n  }, [API, dispatch, userInfo]);\r\n\r\n  // if jwt token expired then logged out\r\n  useEffect(() => {\r\n    if (userInfo && error === \"jwt expired\") {\r\n      alert(\"Logged out!! Again login to do shopping!!\");\r\n      dispatch(userLogout());\r\n      dispatch({ type: USER_CHECK_TOKEN_RESET });\r\n    }\r\n  }, [dispatch, userInfo, error]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"body\">\r\n        <Header isMobile={isMobile} />\r\n        <main>\r\n          <Route\r\n            path=\"/search\"\r\n            render={({ location }) => (\r\n              <Home location={location} API={API} isMobile={isMobile} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            render={({ location }) => (\r\n              <Home location={location} API={API} isMobile={isMobile} />\r\n            )}\r\n            exact\r\n          />\r\n          <div className={!isMobile ? \"mx-5 px-4 py-4\" : \"mx-3 px-3 py-4\"}>\r\n            <Route\r\n              path=\"/placeorder\"\r\n              render={({ history }) => (\r\n                <PlaceOrderScreen\r\n                  history={history}\r\n                  API={API}\r\n                  isMobile={isMobile}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/orders/:id\"\r\n              render={({ history, match }) => (\r\n                <OrderScreen\r\n                  match={match}\r\n                  history={history}\r\n                  API={API}\r\n                  isMobile={isMobile}\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/shipping\" component={ShippingScreen} />\r\n            <Route path=\"/paymentMethod\" component={PaymentMethod} />\r\n            <Route\r\n              path=\"/login\"\r\n              render={({ location, history }) => (\r\n                <LoginScreen location={location} history={history} API={API} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/register\"\r\n              render={({ location, history }) => (\r\n                <RegisterScreen\r\n                  location={location}\r\n                  history={history}\r\n                  API={API}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/profile\"\r\n              render={({ history }) => (\r\n                <ProfileScreen history={history} API={API} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/products/:category/:id\"\r\n              render={({ history, match }) => (\r\n                <ProductScreen\r\n                  history={history}\r\n                  API={API}\r\n                  match={match}\r\n                  isMobile={isMobile}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/cart/:category?/:id?\"\r\n              component={({ history, match, location }) => (\r\n                <CartScreen\r\n                  history={history}\r\n                  match={match}\r\n                  isMobile={isMobile}\r\n                  API={API}\r\n                  location={location}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/userlist\"\r\n              component={({ history }) => (\r\n                <UserListScreen history={history} API={API} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/admin/user/:id/edit\"\r\n              component={({ history, match }) => (\r\n                <UserEditScreen history={history} match={match} API={API} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/productlist\"\r\n              component={({ history }) => (\r\n                <ProductListScreen history={history} API={API} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/product/:category/:id/edit\"\r\n              component={({ history, match }) => (\r\n                <ProductEditScreen history={history} match={match} API={API} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/orderlist\"\r\n              component={({ history }) => (\r\n                <OrderListScreen history={history} API={API} />\r\n              )}\r\n            />\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport \"./bootstrap.min.css\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}