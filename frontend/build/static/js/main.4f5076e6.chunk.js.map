{"version":3,"sources":["redux/actionTypes/productListConstants.js","redux/actionTypes/productDetailsConstants.js","redux/actionTypes/cartConstants.js","redux/actionTypes/userConstants.js","redux/actionTypes/orderConstants.js","redux/store.js","redux/reducers/productLists.js","redux/reducers/productDetails.js","redux/reducers/cart.js","redux/reducers/user.js","redux/reducers/order.js","components/CustomStyles/header.js","components/SearchProductBox.js","redux/actions/userAction.js","components/Header.js","components/Footer.js","redux/actions/productListAction.js","components/Rating.js","components/Products.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Meta.js","utils/carousalData.js","screen/HomeScreen.js","screen/skeletons/ProductScreenSkeleton.js","redux/actions/productDetailsAction.js","screen/ProductScreen.js","redux/actions/cartAction.js","screen/CartScreen.js","screen/customStyle/allFormsScreen.js","components/CustomStyles/CheckoutStepper/StepConnector.js","components/CustomStyles/CheckoutStepper/StepIcon.js","components/CheckoutStepper.js","screen/LoginScreen.js","screen/RegisterScreen.js","redux/actions/orderAction.js","screen/customStyle/ProfileScreen.js","screen/ProfileScreen.js","screen/ShippingScreen.js","screen/PaymentMethod.js","screen/customStyle/PlaceOrderScreen.js","screen/PlaceOrderScreen.js","components/StripeCheckout.js","components/PayPalCheckout.js","screen/skeletons/OrderScreenSkeleton.js","screen/OrderScreen.js","screen/customStyle/listScreen.js","screen/UserListScreen.js","screen/UserEditScreen.js","screen/ProductListScreen.js","imageUpload/firebase.config.js","imageUpload/firebaseStorage.js","screen/ProductEditScreen.js","screen/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILED","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILED","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAILED","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAILED","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAILED","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAILED","PRODUCT_UPDATE_RESET","CART_ITEM_ADD","CART_ITEM_REMOVE","CART_ITEM_RESET","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILED","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILED","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAILED","USER_CHECK_TOKEN_REQUEST","USER_CHECK_TOKEN_SUCCESS","USER_CHECK_TOKEN_FAILED","USER_CHECK_TOKEN_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILED","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILED","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILED","USER_UPDATE_RESET","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAILED","CREATE_ORDER_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILED","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILED","ORDER_PAY_RESET","LIST_MY_ORDER_REQUEST","LIST_MY_ORDER_SUCCESS","LIST_MY_ORDER_FAILED","LIST_MY_ORDER_RESET","LIST_ALL_ORDER_REQUEST","LIST_ALL_ORDER_SUCCESS","LIST_ALL_ORDER_FAILED","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILED","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","loading","products","error","action","type","payload","productDetails","product","productCreate","success","productDelete","productUpdate","productCreateReview","cart","cartItems","shippingAddress","paymentMethod","existItem","find","p","map","filter","userLogin","isAuthenticated","userInfo","userRegister","userDetails","user","userUpdateProfile","userAuthToken","userList","users","userDelete","userUpdate","order","orderDetails","orders","orderPay","myOrders","allOrders","orderDeliver","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","useStyles","makeStyles","theme","appbar","padding","background","position","menu","menuButton","marginRight","spacing","breakpoints","up","display","title","flexGrow","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","link_brand","textDecoration","link_menu_item","link","down","link_drawer","primary","SearchBox","history","classes","useState","keyword","setKeyword","useEffect","window","location","pathname","includes","trim","push","className","InputBase","value","onChange","e","target","placeholder","root","input","inputProps","addUser","updateProfile","userUpdateSuccess","userLogout","dispatch","removeItem","getUserDetails","API","id","getState","a","config","headers","Authorization","token","axios","get","data","err","response","message","Header","isMobile","anchorEl","setAnchorEl","anchorElAdmin","setAnchorElAdmin","openEl","Boolean","openElAdmin","toggle","setToggle","useDispatch","useSelector","logoutHandler","handleClose","handleAdminMenuClose","AppBar","elevation","Toolbar","IconButton","edge","onClick","aria-label","Typography","variant","to","render","Button","aria-controls","aria-haspopup","event","currentTarget","style","fontSize","name","split","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","TransitionComponent","Fade","open","onClose","MenuItem","ListItemText","ListItemIcon","isAdmin","SupervisorAccount","PeopleAlt","ShoppingBasket","Drawer","anchor","List","ListItem","button","Footer","Container","Row","Col","opacity","reqProducts","addProducts","productsFailed","errMess","listProducts","console","log","Rating","text","defaultProps","Products","path","Card","category","_id","src","image","alt","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","Message","varient","children","Alert","severity","marginTop","mobile","BasicPagination","totalPage","setPaginate","Pagination","paginate","count","page","prev","currentPage","scrollTo","size","Meta","description","keywords","Helmet","content","carousalData","image_desktop","image_mobile","heading","para","Home","options","loop","dots","nav","navText","responsive","320","items","768","1000","allProducts","allProductsPerPage","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","Math","ceil","length","isQuerying","setIsQuerying","URLSearchParams","electronicsRef","useRef","homeRef","mensRef","womensRef","aria-current","goBack","autoplay","autoplayTimeout","lazyLoad","smartSpeed","index","backgroundPosition","backgroundSize","backgroundRepeat","current","scrollIntoView","behavior","ref","electronic","home_appliance","mens_accessory","womens_accessory","md","lg","xs","ProductScreenSkeleton","Skeleton","successProductCreate","successProductUpdate","listProductDetails","ProductScreen","match","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","params","reviews","Image","fluid","ListGroup","Item","countInStock","Form","Control","Array","keys","q","disabled","sm","review","createdAt","substring","Group","controlId","Label","row","preventDefault","post","createProductReview","addCart","addToCart","setItem","stringify","removeFromCart","removeCart","addShippingAddress","addPaymentMethod","emptyCart","CartScreen","productId","Number","item","rounded","border","outline","removecartHandler","reduce","acc","toFixed","useStyle","form","flexDirection","paper","paddingTop","paperUserEdit","paperProductEdit","avatar","marginBottom","transform","backgroundImage","info","main","fontWeight","borderColor","paddingBottom","inputProduct","buttonProduct","uploadButton","cursor","icon","register","login","selectLabel","textAlign","back","CheckoutStepConnector","withStyles","alternativeLabel","top","active","completed","line","StepConnector","useStepIconStyles","zIndex","boxShadow","StepIcon","props","icons","1","2","LocalShipping","3","AccountBalance","4","clsx","String","CheckoutStepper","step","steps","Stepper","activeStep","connector","label","Step","StepLabel","StepIconComponent","LoginScreen","email","setEmail","password","setPassword","passwordVisibility","setPasswordVisibility","redirect","Paper","Avatar","component","FormControl","InputLabel","htmlFor","OutlinedInput","required","startAdornment","InputAdornment","labelWidth","endAdornment","onMouseDown","loginUser","Grid","container","RegisterScreen","setName","confirmPassword","setConfirmPassword","confirmPasswordVisibility","setConfirmPasswordVisibility","setMessage","registerUser","addOrder","payOrder","orderId","paymentResult","put","table","details","CssTextField","TextField","StyledTableCell","createStyles","head","body","TableCell","StyledTableRow","selected","hover","TableRow","ProfileScreen","React","setPage","rowsPerPage","setRowsPerPage","myOrdersList","loadingOrders","errorOrders","listMyOrders","multiline","InputLabelProps","shrink","autoComplete","updateUserProfile","TableContainer","Table","TableHead","align","TableBody","scope","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentMethodScreen","setPaymentMethod","RadioGroup","FormControlLabel","control","Radio","innerWidth","maxWidth","inline","divider","list_item","paddingRight","order_summary","order_link","shipping","deliver_button","float","fontFamily","fontStyle","letterSpacing","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","placeOrder","list","Divider","ListItemAvatar","secondary","ListItemSecondaryAction","createOrder","orderItems","stripeButton","StripeCheckout","loadingPay","successPay","makePayment","stripeKey","process","amount","currency","billingAddress","PayPalCheckout","sdkReady","setSdkReady","addPayPalScript","clientId","script","document","createElement","async","onload","appendChild","paypal","onSuccess","onError","onCancel","msg","orderID","OrderScreenSkeleton","OrderScreen","loadingDeliver","successDeliver","getOrderDetails","rel","href","deliverOrder","minWidth","tableHead","tableCol","backgroundClip","WebkitBackgroundClip","WebkitTextFillColor","check","cross","createProductButton","UserListScreen","successDelete","listUsers","handleUserDelete","userId","confirm","delete","deleteUser","tableContainer","Tooltip","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","Switch","checked","updateUser","loadingCreate","successCreate","errorCreate","createdProduct","handleDeleteProduct","deleteProduct","createProduct","brand","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","firebaseStorage","file","setUploading","setImage","fileType","fileName","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","storageRef","metaData","uploadTask","child","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","getDownloadURL","then","downloadURL","ProductEditScreen","setCategory","setBrand","setPrice","setDescription","setCountInStock","uploading","productCategory","handleUploadImage","files","direction","justify","rows","updateProduct","OrderListScreen","listAllOrders","App","checkUserAuthToken","exact","PaymentMethod","ProductListScreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4f5076e6.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAILED = \"PRODUCT_LIST_FAILED\";\r\n","export const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAILED = \"PRODUCT_DETAILS_FAILED\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\r\nexport const PRODUCT_CREATE_REVIEW_FAILED = \"PRODUCT_CREATE_REVIEW_FAILED\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\n///   FOR ADMIN USER  ///\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAILED = \"PRODUCT_DELETE_FAILED\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAILED = \"PRODUCT_CREATE_FAILED\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAILED = \"PRODUCT_UPDATE_FAILED\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n","export const CART_ITEM_ADD = \"CART_ITEM_ADD\";\r\nexport const CART_ITEM_REMOVE = \"CART_ITEM_REMOVE\";\r\nexport const CART_ITEM_RESET = \"CART_ITEM_RESET\";\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAILED = \"USER_LOGIN_FAILED\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAILED = \"USER_REGISTER_FAILED\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAILED = \"USER_DETAILS_FAILED\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAILED = \"USER_UPDATE_PROFILE_FAILED\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET \";\r\n\r\nexport const USER_CHECK_TOKEN_REQUEST = \"USER_CHECK_TOKEN_REQUEST \";\r\nexport const USER_CHECK_TOKEN_SUCCESS = \"USER_CHECK_TOKEN_SUCCESS \";\r\nexport const USER_CHECK_TOKEN_FAILED = \"USER_CHECK_TOKEN_FAILED \";\r\nexport const USER_CHECK_TOKEN_RESET = \"USER_CHECK_TOKEN_RESET \";\r\n\r\n///  FOR ADMIN USER   ///\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAILED = \"USER_LIST_FAILED\";\r\nexport const USER_LIST_RESET = \"USER_RESET_LIST\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAILED = \"USER_DELETE_FAILED\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAILED = \"USER_UPDATE_FAILED\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","export const CREATE_ORDER_REQUEST = \"CREATE_ORDER_REQUEST\";\r\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\r\nexport const CREATE_ORDER_FAILED = \"CREATE_ORDER_FAILED\";\r\nexport const CREATE_ORDER_RESET = \"CREATE_ORDER_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAILED = \"ORDER_DETAILS_FAILED\";\r\nexport const ORDER_DETAILS_RESET = \"ORDER_DETAILS_RESET\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAILED = \"ORDER_PAY_FAILED\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const LIST_MY_ORDER_REQUEST = \"LIST_MY_ORDER_REQUEST\";\r\nexport const LIST_MY_ORDER_SUCCESS = \"LIST_MY_ORDER_SUCCESS\";\r\nexport const LIST_MY_ORDER_FAILED = \"LIST_MY_ORDER_FAILED\";\r\nexport const LIST_MY_ORDER_RESET = \"LIST_MY_ORDER_RESET\";\r\n\r\nexport const LIST_ALL_ORDER_REQUEST = \"LIST_ALL_ORDER_REQUEST\";\r\nexport const LIST_ALL_ORDER_SUCCESS = \"LIST_ALL_ORDER_SUCCESS\";\r\nexport const LIST_ALL_ORDER_FAILED = \"LIST_ALL_ORDER_FAILED\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAILED = \"ORDER_DELIVER_FAILED\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n","import { combineReducers, applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//// Reducers\r\nimport { productListsReducer } from \"./reducers/productLists\";\r\nimport {\r\n  productDetailsReducer,\r\n  productCreateReviewReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n} from \"./reducers/productDetails\";\r\nimport { cartReducer } from \"./reducers/cart\";\r\n\r\nimport {\r\n  userAuthToken,\r\n  userDetailsReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/user\";\r\n\r\nimport {\r\n  createOrderReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  myOrdersReducer,\r\n  allOrdersReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/order\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListsReducer,\r\n  productDetails: productDetailsReducer,\r\n  productCreate: productCreateReducer, // for admin user only\r\n  productDelete: productDeleteReducer, // for admin user only\r\n  productUpdate: productUpdateReducer, // for admin user only\r\n  productCreateReview: productCreateReviewReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userAuthToken: userAuthToken,\r\n  userList: userListReducer, // for admin user only\r\n  userDelete: userDeleteReducer, // for admin user only\r\n  userUpdate: userUpdateReducer, // for admin user only\r\n  order: createOrderReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  myOrders: myOrdersReducer,\r\n  allOrders: allOrdersReducer, // for admin user only\r\n  orderDeliver: orderDeliverReducer, // for admin user only\r\n});\r\n\r\n// GET all cart Items from local Storage\r\nconst cartsFromLocalStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\n// GET shippingAddress from local Storage\r\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\n// GET user info from local Storage\r\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartsFromLocalStorage,\r\n    shippingAddress: shippingAddressFromLocalStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromLocalStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAILED,\r\n} from \"../actionTypes/productListConstants\";\r\n\r\nexport const productListsReducer = (\r\n  state = { loading: false, products: [], error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [], error: null };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload,\r\n        error: null,\r\n      };\r\n\r\n    case PRODUCT_LIST_FAILED:\r\n      return { loading: false, products: [], error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILED,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAILED,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAILED,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAILED,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAILED,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"../actionTypes/productDetailsConstants\";\r\n\r\n// product details reducer\r\nexport const productDetailsReducer = (\r\n  state = { loading: false, product: {}, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, product: {}, error: null };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload, error: null };\r\n\r\n    case PRODUCT_DETAILS_FAILED:\r\n      return { loading: false, product: {}, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// create product review reducer\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// delete product reducer\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true, error: null };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true, error: null };\r\n\r\n    case PRODUCT_DELETE_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// create product reducer\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Update product reducer\r\nexport const productUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAILED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ITEM_ADD,\r\n  CART_ITEM_REMOVE,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_ITEM_RESET,\r\n} from \"../actionTypes/cartConstants\";\r\n\r\n///////////////////////    CART ADD & REMOVE TO/FROM CART  ///////////////////\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {}, paymentMethod: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ITEM_ADD:\r\n      const { payload } = action;\r\n      // check if cartItems exist or not\r\n      const existItem = state.cartItems.find(\r\n        (p) => p.product === payload.product\r\n      );\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((p) =>\r\n            p.product === existItem.product ? payload : p\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, payload] };\r\n      }\r\n\r\n    case CART_ITEM_REMOVE:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((p) => p.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    case CART_ITEM_RESET:\r\n      return { ...state, cartItems: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_FAILED,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAILED,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_FAILED,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILED,\r\n  USER_DETAILS_RESET,\r\n  USER_CHECK_TOKEN_REQUEST,\r\n  USER_CHECK_TOKEN_SUCCESS,\r\n  USER_CHECK_TOKEN_FAILED,\r\n  USER_CHECK_TOKEN_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAILED,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAILED,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILED,\r\n  USER_UPDATE_RESET,\r\n} from \"../actionTypes/userConstants\";\r\n\r\n///    LOGIN REDUCER    ///\r\n\r\nexport const userLoginReducer = (\r\n  state = {\r\n    loading: false,\r\n    isAuthenticated: false,\r\n    userInfo: null,\r\n    error: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true, error: null };\r\n    case USER_LOGIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userInfo: action.payload,\r\n      };\r\n\r\n    case USER_LOGIN_FAILED:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_LOGOUT:\r\n      return {\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///     REGISTER REDUCER    ///\r\n\r\nexport const userRegisterReducer = (\r\n  state = {\r\n    loading: false,\r\n    isAuthenticated: false,\r\n    userInfo: null,\r\n    error: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true, error: null };\r\n    case USER_REGISTER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: true,\r\n        userInfo: action.payload,\r\n      };\r\n\r\n    case USER_REGISTER_FAILED:\r\n      return {\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_LOGOUT:\r\n      return {\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///   USER PROFILE DETAILS   ///\r\n\r\nexport const userDetailsReducer = (\r\n  state = { loading: false, user: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return {\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///   UPDATE USER PROFILE DETAILS   ///\r\n\r\nexport const userUpdateProfileReducer = (\r\n  state = { loading: false, userInfo: null, error: null, success: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n        success: true,\r\n      };\r\n\r\n    case USER_UPDATE_PROFILE_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/// CHECK AUTH TOKEN  ///\r\nexport const userAuthToken = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_CHECK_TOKEN_REQUEST:\r\n      return { loading: true };\r\n    case USER_CHECK_TOKEN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: action.payload,\r\n      };\r\n\r\n    case USER_CHECK_TOKEN_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_CHECK_TOKEN_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n///*  FOR ADMIN USER   ///\r\n\r\n// user list reducer\r\nexport const userListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        users: action.payload,\r\n      };\r\n\r\n    case USER_LIST_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_LIST_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// user delete reducer\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case USER_DELETE_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// user update reducer\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: action.payload,\r\n        success: true,\r\n      };\r\n\r\n    case USER_UPDATE_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case USER_UPDATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAILED,\r\n  CREATE_ORDER_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAILED,\r\n  ORDER_DETAILS_RESET,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAILED,\r\n  ORDER_PAY_RESET,\r\n  LIST_MY_ORDER_REQUEST,\r\n  LIST_MY_ORDER_SUCCESS,\r\n  LIST_MY_ORDER_FAILED,\r\n  LIST_MY_ORDER_RESET,\r\n  LIST_ALL_ORDER_REQUEST,\r\n  LIST_ALL_ORDER_SUCCESS,\r\n  LIST_ALL_ORDER_FAILED,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_FAILED,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../actionTypes/orderConstants\";\r\n\r\n// create order reducer\r\nexport const createOrderReducer = (\r\n  state = {\r\n    loading: false,\r\n    success: false,\r\n    error: null,\r\n    order: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CREATE_ORDER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case CREATE_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n        success: true,\r\n      };\r\n\r\n    case CREATE_ORDER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case CREATE_ORDER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// get order details by id of particular user reducer\r\nexport const orderDetailsReducer = (\r\n  state = {\r\n    loading: true,\r\n    orders: null,\r\n    error: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_RESET:\r\n      return {\r\n        orders: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// update order to paid reducer\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// get my orders of particular user reducer\r\nexport const myOrdersReducer = (\r\n  state = { loading: false, orders: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LIST_MY_ORDER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case LIST_MY_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case LIST_MY_ORDER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case LIST_MY_ORDER_RESET:\r\n      return {\r\n        orders: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//  get all orders reducer (for admin user)\r\nexport const allOrdersReducer = (\r\n  state = { loading: false, orders: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LIST_ALL_ORDER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case LIST_ALL_ORDER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case LIST_ALL_ORDER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// update order to delivered reducer\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAILED:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\n///////////////////////    Custom Style    //////////////////////////\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    padding: \"0.4rem\",\r\n    background: \"linear-gradient(45deg, #0267B5,  30%, #2196f3 90%)\",\r\n    position: \"fixed\",\r\n  },\r\n\r\n  menu: {},\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"80%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  link_brand: {\r\n    color: \"inherit\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n    },\r\n  },\r\n  link_menu_item: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  link_drawer: {\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary,\r\n    },\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useStyles } from \"./CustomStyles/header\";\r\n\r\nexport default function SearchBox({ history }) {\r\n  const classes = useStyles();\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  useEffect(() => {\r\n    // console.log(window.location.pathname);\r\n    if (\r\n      window.location.pathname === \"/\" ||\r\n      window.location.pathname.includes(\"/search\")\r\n    ) {\r\n      if (keyword.trim()) {\r\n        history.push(`/search?name=${keyword}`);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    } else {\r\n      setKeyword(\"\");\r\n    }\r\n  }, [keyword, history]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n          <SearchIcon />\r\n        </div>\r\n        <InputBase\r\n          value={keyword}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Search…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_FAILED,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAILED,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAILED,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILED,\r\n  USER_CHECK_TOKEN_REQUEST,\r\n  USER_CHECK_TOKEN_SUCCESS,\r\n  USER_CHECK_TOKEN_FAILED,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAILED,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAILED,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILED,\r\n} from \"../actionTypes/userConstants\";\r\n\r\nimport { LIST_MY_ORDER_RESET } from \"../actionTypes/orderConstants\";\r\n\r\n///*     ACTION      ///\r\n\r\n/// LOGIN  ///\r\nconst loginReq = () => ({\r\n  type: USER_LOGIN_REQUEST,\r\n});\r\n\r\nconst addUser = (user) => ({\r\n  type: USER_LOGIN_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst loginFailed = (err) => ({\r\n  type: USER_LOGIN_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  REGISTER  ///\r\nconst registerReq = () => ({\r\n  type: USER_REGISTER_REQUEST,\r\n});\r\n\r\nconst newUser = (user) => ({\r\n  type: USER_REGISTER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst registerFailed = (err) => ({\r\n  type: USER_REGISTER_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  USER DETAILS  ///\r\nconst profileReq = () => ({\r\n  type: USER_DETAILS_REQUEST,\r\n});\r\n\r\nconst getProfile = (user) => ({\r\n  type: USER_DETAILS_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst profileFailed = (err) => ({\r\n  type: USER_DETAILS_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  UPDATE USER DETAILS  ///\r\nconst updateProfileReq = () => ({\r\n  type: USER_UPDATE_PROFILE_REQUEST,\r\n});\r\n\r\nconst updateProfile = (user) => ({\r\n  type: USER_UPDATE_PROFILE_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst updateProfileFailed = (err) => ({\r\n  type: USER_UPDATE_PROFILE_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///*   FOR ADMIN USER    ///\r\n\r\n/// USER LIST  ///\r\nconst userListReq = () => ({\r\n  type: USER_LIST_REQUEST,\r\n});\r\n\r\nconst userListSuccess = (users) => ({\r\n  type: USER_LIST_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nconst userListFailed = (err) => ({\r\n  type: USER_LIST_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  DELETE USER  ///\r\nconst userDeleteReq = () => ({\r\n  type: USER_DELETE_REQUEST,\r\n});\r\n\r\nconst userDeleteSuccess = () => ({\r\n  type: USER_DELETE_SUCCESS,\r\n});\r\n\r\nconst userDeleteFailed = (err) => ({\r\n  type: USER_DELETE_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///  UPDATE USER  ///\r\nconst userUpdateReq = () => ({\r\n  type: USER_UPDATE_REQUEST,\r\n});\r\n\r\nconst userUpdateSuccess = (user) => ({\r\n  type: USER_UPDATE_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nconst userUpdateFailed = (err) => ({\r\n  type: USER_UPDATE_FAILED,\r\n  payload: err,\r\n});\r\n\r\n///*    ACTION CREATOR    ///\r\n\r\n///    LOGIN    ///\r\nexport const loginUser = (API, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginReq());\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API}/user/login`,\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch(addUser(data));\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      loginFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///    LOGOUT    ///\r\nexport const userLogout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({ type: LIST_MY_ORDER_RESET });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\n///    REGISTER    ///\r\nexport const registerUser = (API, name, email, password) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch(registerReq());\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    const { data } = await axios.post(\r\n      `${API}/user/register`,\r\n      { name, email, password },\r\n      config\r\n    );\r\n    dispatch(newUser(data));\r\n    dispatch(addUser(data));\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      registerFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///    USER DETAILS (PROFILE)   ///\r\nexport const getUserDetails = (API, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(profileReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`${API}/user/${id}`, config);\r\n\r\n    dispatch(getProfile(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      profileFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///    UPDATE USER DETAILS (PROFILE)   ///\r\nexport const updateUserProfile = (API, user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(updateProfileReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`${API}/user/profile`, user, config);\r\n\r\n    dispatch(updateProfile(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      updateProfileFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n/// USER AUTH TOKEN CHECK  ///\r\nexport const checkUserAuthToken = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_CHECK_TOKEN_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`${API}/user/auth`, config);\r\n\r\n    dispatch({\r\n      type: USER_CHECK_TOKEN_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch(\r\n      dispatch({\r\n        type: USER_CHECK_TOKEN_FAILED,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\n///*   FOR ADMIN USER   ///\r\n\r\n/// USER LIST  ///\r\nexport const listUsers = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(userListReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`${API}/user`, config);\r\n\r\n    dispatch(userListSuccess(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      userListFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n/// USER DELETE  ///\r\nexport const deleteUser = (API, userId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(userDeleteReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    await axios.delete(`${API}/user/${userId}`, config);\r\n\r\n    dispatch(userDeleteSuccess());\r\n  } catch (error) {\r\n    dispatch(\r\n      userDeleteFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n/// USER UPDATE  ///\r\nexport const updateUser = (API, userId, user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(userUpdateReq());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const token = userInfo && userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`${API}/user/${userId}`, user, config);\r\n\r\n    dispatch(userUpdateSuccess(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      userUpdateFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\n///////////////////////    MATERIAL UI Component    //////////////////\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\n///////////////////////   MATERIAL ICONS     ///////////////////////\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\n///////////////////////// Search Box component   ///////////////////\r\nimport SearchBox from \"./SearchProductBox\";\r\n\r\n/////////////////////////    REDUX     //////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userLogout } from \"../redux/actions/userAction\";\r\n\r\n//////////////////////////   CUSTOM STYLE    /////////////////////////\r\nimport { useStyles } from \"./CustomStyles/header\";\r\nimport {\r\n  PeopleAlt,\r\n  ShoppingBasket,\r\n  ShoppingCart,\r\n  SupervisorAccount,\r\n} from \"@material-ui/icons\";\r\n\r\nexport default function Header({ isMobile }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [anchorElAdmin, setAnchorElAdmin] = useState(null);\r\n  const openEl = Boolean(anchorEl);\r\n  const openElAdmin = Boolean(anchorElAdmin);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  ////////////////////////    REDUX     ////////////////////////////////\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(userLogout());\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  ///    FOR Dropdown Menu    ///\r\n\r\n  ///  FOR USER  ///\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  ///  FOR ADMIN USER  ///\r\n  const handleAdminMenu = (event) => {\r\n    setAnchorElAdmin(event.currentTarget);\r\n  };\r\n\r\n  const handleAdminMenuClose = () => {\r\n    setAnchorElAdmin(null);\r\n  };\r\n\r\n  return (\r\n    <header className={classes.root}>\r\n      <AppBar position=\"fixed\" elevation={10} className={classes.appbar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            onClick={() => setToggle(true)}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link className={classes.link_brand} to=\"/\">\r\n              eShop\r\n            </Link>\r\n          </Typography>\r\n          {/*// Search Box Component */}\r\n          <Route render={({ history }) => <SearchBox history={history} />} />\r\n          &nbsp; &nbsp; &nbsp; &nbsp;\r\n          {/*//  CART BUTTON (if logged in goes to /cart otherwise redirect to /login )  //*/}\r\n          <Link\r\n            className={classes.link}\r\n            to={userInfo ? \"/cart\" : \"/login?redirect=cart\"}\r\n          >\r\n            <Button color=\"inherit\">\r\n              <ShoppingCartIcon />\r\n              &nbsp; Cart\r\n            </Button>\r\n          </Link>\r\n          {userInfo ? (\r\n            ///     DROPDOWN MENU IF USER EXISTS OR LOGGED IN   ///\r\n            <>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n                style={{ fontSize: \"1.25rem\" }}\r\n              >\r\n                <AccountCircle />\r\n                &nbsp;\r\n                {!isMobile ? userInfo.name.split(\" \")[0] : null}\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                className={classes.menu}\r\n                elevation={4}\r\n                getContentAnchorEl={null}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"center\",\r\n                }}\r\n                TransitionComponent={Fade}\r\n                open={openEl}\r\n                onClose={handleClose}\r\n              >\r\n                {/*//    USER NAME ON MOBILE VIEW    //*/}\r\n                {isMobile ? (\r\n                  <MenuItem onClick={handleClose}>\r\n                    <IconButton>\r\n                      <AccountCircle />\r\n                    </IconButton>\r\n                    <ListItemText primary={userInfo.name.split(\" \")[0]} />\r\n                  </MenuItem>\r\n                ) : null}\r\n                {/*//      PROFILE BUTTON if user is logged in      */}\r\n                <Link to=\"/profile\" className={classes.link_menu_item}>\r\n                  <MenuItem onClick={handleClose}>\r\n                    <ListItemIcon>\r\n                      <PersonIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Profile\" />\r\n                  </MenuItem>\r\n                </Link>\r\n\r\n                {/*//    LOGOUT BUTTON (if user is logged in)    //*/}\r\n                <MenuItem\r\n                  onClick={logoutHandler}\r\n                  className={classes.link_menu_item}\r\n                >\r\n                  <ListItemIcon>\r\n                    <ExitToAppIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Logout\" />\r\n                </MenuItem>\r\n              </Menu>\r\n\r\n              {/* ///     ADMIN SECTION OF DROPDOWN IF USER ADMIN EXISTS OR LOGGED IN   /// */}\r\n              {userInfo.isAdmin ? (\r\n                <>\r\n                  <IconButton\r\n                    aria-label=\"account of admin user\"\r\n                    aria-controls=\"menu-admin-appbar\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleAdminMenu}\r\n                    color=\"inherit\"\r\n                    style={{ fontSize: \"1.25rem\" }}\r\n                  >\r\n                    <SupervisorAccount />\r\n                    &nbsp;\r\n                    {!isMobile ? \"Admin\" : null}\r\n                  </IconButton>\r\n                  <Menu\r\n                    id=\"menu-appbar\"\r\n                    className={classes.menu}\r\n                    elevation={4}\r\n                    getContentAnchorEl={null}\r\n                    anchorEl={anchorElAdmin}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    TransitionComponent={Fade}\r\n                    open={openElAdmin}\r\n                    onClose={handleAdminMenuClose}\r\n                  >\r\n                    {/*//   USER LIST    */}\r\n                    <Link\r\n                      to=\"/admin/userlist\"\r\n                      className={classes.link_menu_item}\r\n                    >\r\n                      <MenuItem onClick={handleAdminMenuClose}>\r\n                        <ListItemIcon>\r\n                          <PeopleAlt />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Users\" />\r\n                      </MenuItem>\r\n                    </Link>\r\n                    {/*//   PRODUCT LIST    */}\r\n                    <Link\r\n                      to=\"/admin/productlist\"\r\n                      className={classes.link_menu_item}\r\n                    >\r\n                      <MenuItem onClick={handleAdminMenuClose}>\r\n                        <ListItemIcon>\r\n                          <ShoppingBasket />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Products\" />\r\n                      </MenuItem>\r\n                    </Link>\r\n                    {/*//   ORDERS LIST    */}\r\n                    <Link\r\n                      to=\"/admin/orderlist\"\r\n                      className={classes.link_menu_item}\r\n                    >\r\n                      <MenuItem onClick={handleAdminMenuClose}>\r\n                        <ListItemIcon>\r\n                          <ShoppingCart />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Orders\" />\r\n                      </MenuItem>\r\n                    </Link>\r\n                  </Menu>\r\n                </>\r\n              ) : null}\r\n            </>\r\n          ) : (\r\n            ///    LOGIN BUTTON IF USER DOES NOT EXISTS OR LOGGED OUT  ///\r\n            <Link className={classes.link} to=\"/login\">\r\n              <Button color=\"inherit\">\r\n                <GroupAddIcon />\r\n                &nbsp; LOGIN\r\n              </Button>\r\n            </Link>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/*///      FOR MOBILE VIEW    ///*/}\r\n      <Drawer anchor=\"bottom\" open={toggle} onClose={() => setToggle(false)}>\r\n        <List>\r\n          {userInfo ? (\r\n            ///    LOGOUT BUTTON IF USER EXISTS OR LOGGED IN   ///\r\n            <ListItem\r\n              button\r\n              className={classes.link_drawer}\r\n              onClick={logoutHandler}\r\n            >\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Logout\"} />\r\n            </ListItem>\r\n          ) : (\r\n            ///    LOGIN BUTTON IF USER DOES NOT EXISTS OR LOGGED OUT    ///\r\n\r\n            <Link className={classes.link_drawer} to=\"/login\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <GroupAddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Login\"} />\r\n              </ListItem>\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            className={classes.link_drawer}\r\n            to={userInfo ? \"/cart\" : \"/login?redirect=cart\"}\r\n          >\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <ShoppingCartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Cart\"} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"text-center py-3\" style={{ opacity: 0.8 }}>\r\n              Copyright &copy; 2021 by Shubham Dutta\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAILED,\r\n} from \"../actionTypes/productListConstants\";\r\n\r\n///*   ACTIONS    ///\r\n\r\nconst reqProducts = () => ({\r\n  type: PRODUCT_LIST_REQUEST,\r\n});\r\n\r\nconst addProducts = (products) => ({\r\n  type: PRODUCT_LIST_SUCCESS,\r\n  payload: products,\r\n});\r\n\r\nconst productsFailed = (errMess) => ({\r\n  type: PRODUCT_LIST_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n///*     ACTION CREATOR     ///\r\n\r\nexport const listProducts = (keyword = \"\", API) => async (dispatch) => {\r\n  try {\r\n    dispatch(reqProducts());\r\n\r\n    const { data } = await axios.get(`${API}/products?keyword=${keyword}`);\r\n\r\n    dispatch(addProducts(data));\r\n\r\n    console.log(data);\r\n  } catch (error) {\r\n    dispatch(\r\n      productsFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"../styles/components/Rating.css\";\r\n\r\nexport default function Rating({ value, text, color }) {\r\n  return (\r\n    <>\r\n      <div className=\"rating\">\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 1\r\n                ? \"fas fa-star\"\r\n                : value >= 0.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 2\r\n                ? \"fas fa-star\"\r\n                : value >= 1.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 3\r\n                ? \"fas fa-star\"\r\n                : value >= 2.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 4\r\n                ? \"fas fa-star\"\r\n                : value >= 3.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span>\r\n          <i\r\n            className={\r\n              value >= 5\r\n                ? \"fas fa-star\"\r\n                : value >= 4.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            style={{ color: color }}\r\n          ></i>\r\n        </span>\r\n        <span className=\"ml-2\">{text}</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: \"#FAAE20\",\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../styles/components/Products.css\";\r\n\r\nexport default function Products({ product, path }) {\r\n  return (\r\n    <>\r\n      <Card className=\"card my-3  rounded\">\r\n        <Link to={`products/${product.category}/${product._id}`}>\r\n          {/* <Card.Img className=\"card_image \" src={product.image} /> */}\r\n          <div className=\"card_image_div\">\r\n            <img\r\n              className=\"card_image\"\r\n              src={product.image}\r\n              alt={product.image}\r\n            />\r\n          </div>\r\n        </Link>\r\n        <Card.Body>\r\n          <Link to={`products/${product.category}/${product._id}`}>\r\n            <Card.Title\r\n              as=\"div\"\r\n              style={{ fontSize: \"16px\", textDecoration: \"none\" }}\r\n            >\r\n              <strong>{product.name}</strong>\r\n            </Card.Title>\r\n          </Link>\r\n\r\n          <Card.Text as=\"div\">\r\n            <div className=\"my-3\">\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} rating`}\r\n              />\r\n\r\n              {/* {product.rating} from {product.numReviews} rating */}\r\n            </div>\r\n          </Card.Text>\r\n\r\n          <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      variant=\"primary\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst Message = ({ varient, children }) => {\r\n  return (\r\n    <Alert className=\"mb-3\" severity={varient}>\r\n      {children}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n      width: \"70rem\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  mobile: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function BasicPagination({ totalPage, setPaginate, isMobile }) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event, page) => {\r\n    setPaginate((prev) => ({\r\n      ...prev,\r\n      currentPage: page,\r\n    }));\r\n    if (isMobile) {\r\n      window.scrollTo(0, 2820);\r\n    } else {\r\n      window.scrollTo(0, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={isMobile ? classes.mobile : classes.root}>\r\n      <Pagination\r\n        className={classes.paginate}\r\n        count={totalPage}\r\n        onChange={handleChange}\r\n        shape=\"rounded\"\r\n        color=\"primary\"\r\n        size={isMobile ? \"small\" : \"large\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Welcome To eShop\",\r\n  description: \"Buy all the best products here at very cheap price\",\r\n  keyword:\r\n    \"eShop,ecommerce,cheap products,online store,ecommerce website,shopping cart,e commerce business,e commerce sites,free shopping cart,payment,payment integration,paypal,stripe,search by products,best products,buy electronics,buy men's accessories,buy women's accessories,buy home appliances\",\r\n};\r\n\r\nexport default Meta;\r\n","export const carousalData = [\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_electronics.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_electronics_phone.png\",\r\n    heading: \"Electronics Accessories\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n    id: \"#electronics\",\r\n  },\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_home.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_home_phone.png\",\r\n    heading: \"Home Appliances\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n    id: \"#home_appliances\",\r\n  },\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_mens.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_mens_phone.png\",\r\n    heading: \"Mens Accessories\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n\r\n    id: \"#mens_accessories\",\r\n  },\r\n  {\r\n    image_desktop: \"/assets/images/carousal/Landing_womens.png\",\r\n    image_mobile: \"/assets/images/carousal/Landing_womens_phone.png\",\r\n    heading: \"Womens Accessories\",\r\n    para:\r\n      \"Lorem Ipsum is simply dummy text of the print and type setting industry.\",\r\n    id: \"#womens_accessories\",\r\n  },\r\n];\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button } from \"react-bootstrap\";\r\n\r\n// Owl Carousal\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\r\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\r\n\r\n// Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../redux/actions/productListAction\";\r\n\r\n// Components\r\nimport Product from \"../components/Products\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrMess from \"../components/Message\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n// Carousal Data\r\nimport { carousalData } from \"../utils/carousalData\";\r\n\r\n// Styling\r\nimport \"../styles/Screen/HomeScreen.css\";\r\n\r\nexport default function Home({ location, history, API, isMobile }) {\r\n  // option for card carousal\r\n  const options = {\r\n    loop: false,\r\n    dots: false,\r\n    margin: 10,\r\n    nav: true,\r\n    navText: [\r\n      \"<i class='fa fa-2x fa-angle-left'></i>\",\r\n      \"<i class='fa fa-2x fa-angle-right'></i>\",\r\n    ],\r\n    responsive: {\r\n      320: {\r\n        items: 1,\r\n      },\r\n      768: {\r\n        items: 3,\r\n      },\r\n      1000: {\r\n        items: 4,\r\n      },\r\n    },\r\n  };\r\n\r\n  // option for hero section carousal\r\n  const options2 = {\r\n    loop: true,\r\n    margin: 100,\r\n    autoplay: true,\r\n    autoplayTimeout: 4000,\r\n    lazyLoad: true,\r\n    smartSpeed: 1000,\r\n    items: 1,\r\n  };\r\n\r\n  //   fetching datas of productList from redux state\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  // PAGINATION CALCULATIONS\r\n  const [paginate, setPaginate] = useState({\r\n    allProducts: [],\r\n    currentPage: 1,\r\n    allProductsPerPage: !isMobile ? 6 : 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPaginate((prev) => ({\r\n      ...prev,\r\n      allProducts: products,\r\n    }));\r\n\r\n    window.scrollTo(0, 0);\r\n  }, [loading, products]);\r\n\r\n  const { allProducts, currentPage, allProductsPerPage } = paginate;\r\n\r\n  // Logic for displaying current allProducts\r\n  const indexOfLastProduct = currentPage * allProductsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - allProductsPerPage;\r\n  const currentProducts = allProducts.slice(\r\n    indexOfFirstProduct,\r\n    indexOfLastProduct\r\n  );\r\n  const totalPage = Math.ceil(allProducts.length / allProductsPerPage);\r\n  // ENDS PAGINATION CALCULATIONS\r\n\r\n  // SEARCH by query in route\r\n  const [isQuerying, setIsQuerying] = useState(false);\r\n\r\n  const query = new URLSearchParams(location.search);\r\n  const keyword = query.get(\"name\") || \"\";\r\n  // const pageNumber = parseInt(query.get(\"pageNumber\")) || \"\";\r\n\r\n  useEffect(() => {\r\n    if (keyword) {\r\n      setIsQuerying(true);\r\n    } else {\r\n      setIsQuerying(false);\r\n    }\r\n    dispatch(listProducts(keyword, API));\r\n  }, [dispatch, keyword, API]);\r\n\r\n  // Scroll on Click to products category in carousel\r\n  const electronicsRef = useRef(null); // To Electronics\r\n  const homeRef = useRef(null); // To Home Appliances\r\n  const mensRef = useRef(null); // To Mens Accessories\r\n  const womensRef = useRef(null); // To Womens Accessories\r\n\r\n  // function to scroll to desired position smoothly\r\n  const executeScroll = (id) => {\r\n    if (id === \"#electronics\") {\r\n      electronicsRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    } else if (id === \"#home_appliances\") {\r\n      homeRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    } else if (id === \"#mens_accessories\") {\r\n      mensRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    } else if (id === \"#womens_accessories\") {\r\n      womensRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  ///   GO BACK   ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {/*//   CAROUSAL   /// */}\r\n      {!isQuerying ? (\r\n        <OwlCarousel\r\n          key={products.length}\r\n          className=\"owl-carousel owl-theme\"\r\n          {...options2}\r\n        >\r\n          {carousalData.map((data, index) => (\r\n            <Col key={index}>\r\n              <div\r\n                className={isMobile ? \"carousal_phone\" : \"carousal\"}\r\n                style={\r\n                  isMobile\r\n                    ? {\r\n                        background: `url(${data.image_mobile})`,\r\n                        backgroundPosition: \"-30px\",\r\n                        backgroundSize: \"cover\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                      }\r\n                    : {\r\n                        background: `url(${data.image_desktop})`,\r\n                        backgroundPosition: \"center\",\r\n                        backgroundSize: \"cover\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                      }\r\n                }\r\n              >\r\n                <h1\r\n                  className={\r\n                    isMobile ? \"carousal_heading_phone\" : \"carousal_heading\"\r\n                  }\r\n                >\r\n                  {data.heading}\r\n                </h1>\r\n                <h2\r\n                  className={isMobile ? \"carousal_para_phone\" : \"carousal_para\"}\r\n                >\r\n                  {data.para}\r\n                </h2>\r\n                <button\r\n                  onClick={() => executeScroll(data.id)}\r\n                  className={\r\n                    isMobile ? \"carousal_button_phone\" : \"carousal_button\"\r\n                  }\r\n                >\r\n                  SHOP NOW\r\n                </button>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </OwlCarousel>\r\n      ) : (\r\n        <>\r\n          <div className={!isMobile ? \"mx-5 px-4 py-4\" : \"mx-3 px-3 py-4\"}>\r\n            <nav aria-label=\"breadcrumb\">\r\n              <ol className=\"breadcrumb\">\r\n                <li className=\"breadcrumb-item\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                  Search\r\n                </li>\r\n              </ol>\r\n            </nav>\r\n            <Button onClick={goBack} className=\"btn btn-light mt-2 mb-3\">\r\n              Go Back\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* /////////////////    BUG: Render carusal before children ////////// */}\r\n      {/*//////////////////    SOLUTION: ADD key to OwlCarousal  */}\r\n\r\n      <div className={isMobile ? \"products_section_phone\" : \"products_section\"}>\r\n        {/*// if nothing there to search then show all category division of products otherwise not //*/}\r\n        {!isQuerying ? (\r\n          <>\r\n            {/* ELECTRONICS */}\r\n            <h1\r\n              ref={electronicsRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone mt-4\"\r\n                  : \" category_heading mt-5\"\r\n              }\r\n            >\r\n              Electronics Accessories\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"electronics\")\r\n                      .map((electronic, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={electronic} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n\r\n            {/* HOME APPLIANCES */}\r\n            <h1\r\n              ref={homeRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone  pt-2 mt-4\"\r\n                  : \"category_heading pt-5 mt-5\"\r\n              }\r\n            >\r\n              Home Appliances\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"home_appliances\")\r\n                      .map((home_appliance, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={home_appliance} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n\r\n            {/* MENS'S ACCESSORIES */}\r\n            <h1\r\n              ref={mensRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone  pt-2 mt-4\"\r\n                  : \"category_heading pt-5 mt-5\"\r\n              }\r\n            >\r\n              Men's Accessories\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"mens_accessories\")\r\n                      .map((mens_accessory, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={mens_accessory} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n\r\n            {/* WOMEN'S ACCESSORIES */}\r\n            <h1\r\n              ref={womensRef}\r\n              className={\r\n                isMobile\r\n                  ? \"category_heading_phone  pt-2 mt-4\"\r\n                  : \"category_heading pt-5 mt-5\"\r\n              }\r\n            >\r\n              Women's Accessories\r\n            </h1>\r\n\r\n            <Row>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n              ) : (\r\n                products && (\r\n                  <OwlCarousel\r\n                    key={products.length}\r\n                    className=\"owl-theme\"\r\n                    {...options}\r\n                  >\r\n                    {products\r\n                      .filter((p) => p.category === \"womens_accessories\")\r\n                      .map((womens_accessory, index) => (\r\n                        <Col key={index}>\r\n                          <Product product={womens_accessory} />\r\n                        </Col>\r\n                      ))}\r\n                  </OwlCarousel>\r\n                )\r\n              )}\r\n            </Row>\r\n          </>\r\n        ) : null}\r\n\r\n        {/*// CAROUSAL ENDS //*/}\r\n\r\n        {/* ALL PRODUCTS || Searched Products */}\r\n        <h1\r\n          className={\r\n            isQuerying && isMobile\r\n              ? \"category_heading_phone mb-4\"\r\n              : isQuerying\r\n              ? \"category_heading mb-5\"\r\n              : isMobile\r\n              ? \"category_heading_phone\"\r\n              : \"category_heading pt-5 mt-5\"\r\n          }\r\n        >\r\n          {!isQuerying ? \"Latest Products\" : `Results of ${keyword}`}\r\n        </h1>\r\n\r\n        <Row>\r\n          {loading ? (\r\n            isQuerying ? (\r\n              <>\r\n                <Loader />\r\n                <h2>Searching...</h2>\r\n              </>\r\n            ) : (\r\n              <Loader />\r\n            )\r\n          ) : error ? (\r\n            <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n          ) : currentProducts.length !== 0 ? (\r\n            currentProducts.map((product, index) => (\r\n              <Col md={4} lg={3} key={index}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))\r\n          ) : (\r\n            <>\r\n              {/* No Products found  */}\r\n              <Col xs={12} className=\"text-center\">\r\n                <h2 className={isMobile ? \"noProduct_phone\" : \"noProduct\"}>\r\n                  No Products Found\r\n                </h2>\r\n              </Col>\r\n            </>\r\n          )}\r\n          {/*// PAGINATION COMPONENT //*/}\r\n          <Paginate\r\n            totalPage={totalPage}\r\n            currentPage={currentPage}\r\n            setPaginate={setPaginate}\r\n            isMobile={isMobile}\r\n          />\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst ProductScreenSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Skeleton animation=\"wave\" variant=\"rect\" height={440} />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Skeleton variant=\"rect\" height={320} />\r\n        </Col>\r\n        <Col md={3}>\r\n          <Skeleton variant=\"rect\" height={200} />\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Row>\r\n        <Col md={6}>\r\n          <Skeleton variant=\"text\" height={60} width={360} />\r\n          <Skeleton variant=\"rect\" height={16} width={180} />\r\n          <div className=\"mt-4 ml-4 mb-3\">\r\n            <Skeleton variant=\"text\" height={30} width={180} />\r\n            <Skeleton variant=\"text\" height={16} width={190} />\r\n            <Skeleton variant=\"text\" height={24} width={300} />\r\n          </div>\r\n\r\n          <Skeleton variant=\"text\" height={60} width={360} />\r\n          <Skeleton variant=\"rect\" height={30} width={500} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreenSkeleton;\r\n","import {\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILED,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAILED,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAILED,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAILED,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAILED,\r\n} from \"../actionTypes/productDetailsConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n///*      ACTIONS    ///\r\n\r\n// product details\r\nconst reqProduct = () => ({\r\n  type: PRODUCT_DETAILS_REQUEST,\r\n});\r\n\r\nconst addProduct = (product) => ({\r\n  type: PRODUCT_DETAILS_SUCCESS,\r\n  payload: product,\r\n});\r\n\r\nconst productFailed = (errMess) => ({\r\n  type: PRODUCT_DETAILS_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  create products review\r\nconst reqProductReview = () => ({\r\n  type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n});\r\n\r\nconst addProductReview = () => ({\r\n  type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n});\r\n\r\nconst productReviewFailed = (errMess) => ({\r\n  type: PRODUCT_CREATE_REVIEW_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  delete product\r\nconst reqProductDelete = () => ({\r\n  type: PRODUCT_DELETE_REQUEST,\r\n});\r\n\r\nconst successProductDelete = () => ({\r\n  type: PRODUCT_DELETE_SUCCESS,\r\n});\r\n\r\nconst deleteProductFailed = (errMess) => ({\r\n  type: PRODUCT_DELETE_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  create product\r\nconst reqProductCreate = () => ({\r\n  type: PRODUCT_CREATE_REQUEST,\r\n});\r\n\r\nconst successProductCreate = (data) => ({\r\n  type: PRODUCT_CREATE_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst productCreateFailed = (errMess) => ({\r\n  type: PRODUCT_CREATE_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  update product\r\nconst reqProductUpdate = () => ({\r\n  type: PRODUCT_UPDATE_REQUEST,\r\n});\r\n\r\nconst successProductUpdate = (data) => ({\r\n  type: PRODUCT_UPDATE_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst productUpdateFailed = (errMess) => ({\r\n  type: PRODUCT_UPDATE_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n///*   ACTION CREATOR    ///\r\n\r\n// list all product details\r\nexport const listProductDetails = (API, category, id) => async (dispatch) => {\r\n  try {\r\n    dispatch(reqProduct());\r\n\r\n    const { data } = await axios.get(`${API}/products/${category}/${id}`);\r\n\r\n    dispatch(addProduct(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      productFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// Create product Review\r\nexport const createProductReview = (API, category, id, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqProductReview());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${API}/products/${category}/${id}/reviews`,\r\n      review,\r\n      config\r\n    );\r\n\r\n    dispatch(addProductReview());\r\n  } catch (error) {\r\n    dispatch(\r\n      productReviewFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n///*   ADMIN USER   ///\r\n\r\n// delete product\r\nexport const deleteProduct = (API, category, id) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqProductDelete());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`${API}/products/${category}/${id}`, config);\r\n\r\n    dispatch(successProductDelete());\r\n  } catch (error) {\r\n    dispatch(\r\n      deleteProductFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// create product\r\nexport const createProduct = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqProductCreate());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`${API}/products`, {}, config);\r\n\r\n    dispatch(successProductCreate(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      productCreateFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// update product\r\nexport const updateProduct = (API, category, product) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqProductUpdate());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `${API}/products/${category}/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch(successProductUpdate(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      productUpdateFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//////////////////    COMPONENTS     //////////////////////////\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport Skeleton from \"./skeletons/ProductScreenSkeleton\";\r\n\r\n/////////////////     REDUX    ///////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../redux/actions/productDetailsAction\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../redux/actionTypes/productDetailsConstants\";\r\n\r\nimport \"../styles/Screen/ProductScreen.css\";\r\n\r\nexport default function ProductScreen({ history, match, API, isMobile }) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  //////////////////     fetching datas of productList from redux state   ////////////////////////\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // product details\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  // create product review reducer\r\n  const productCreateReview = useSelector((state) => state.productCreateReview);\r\n  const {\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productCreateReview;\r\n\r\n  // user login credentials\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n      alert(\"Review Submitted Successfully\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n    }\r\n    dispatch(listProductDetails(API, match.params.category, match.params.id));\r\n  }, [dispatch, match, successProductReview, API]);\r\n\r\n  console.log(product.reviews);\r\n  //////////////////////    Redirect to Cart page      ///////////////////////\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(\r\n      `/cart/${match.params.category}/${match.params.id}?qty=${qty}`\r\n    );\r\n  };\r\n\r\n  // submit product review\r\n  const submitReviewHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(API, match.params.category, match.params.id, {\r\n        rating: rating,\r\n        comment: comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  /////////////////////    GO BACK      ////////////////////////\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">{product.category}</li>\r\n          {!isMobile ? (\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              {product.name}\r\n            </li>\r\n          ) : null}\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Button>\r\n\r\n      {loading ? (\r\n        <Skeleton />\r\n      ) : error ? (\r\n        <Message varient=\"#FC308B\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          {/* /// add custom title in productScreen (of product name) / */}\r\n          <Meta title={`${product.name}`} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image\r\n                className=\"shadow\"\r\n                src={product.image}\r\n                alt={product.name}\r\n                fluid\r\n              />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup className=\"shadow\" varient=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3 className=\"font-weight-bold text-primary\">\r\n                    {product.name}\r\n                  </h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>\r\n                    <h5 className=\"font-weight-bold text-secondary\">Price:</h5>\r\n                  </strong>\r\n                  <span>{product.price}</span>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>\r\n                    <h5 className=\"font-weight-bold text-secondary\">\r\n                      Description:\r\n                    </h5>\r\n                  </strong>\r\n                  <p>{product.description}</p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup varient=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price: </Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status: </Col>\r\n                      <Col>\r\n                        <strong>\r\n                          ${product.countInStock ? \"In Stock\" : \"Out Of Stock\"}\r\n                        </strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Quantity: </Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (q) => (\r\n                                <option key={q + 1} value={q + 1}>\r\n                                  {q + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      className={\r\n                        product.countInStock === 0\r\n                          ? \"btn-block p-3 disabled\"\r\n                          : \"btn-block p-3\"\r\n                      }\r\n                      onClick={addToCartHandler}\r\n                      type=\"button\"\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      ADD TO CART\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/*// list down product reviews and create review //*/}\r\n          <Row>\r\n            <Col sm={12} md={9}>\r\n              <h2\r\n                className=\"mt-5 font-weight-bolder  text-primary display-5\"\r\n                style={isMobile ? { fontSize: \"2rem\" } : { fontSize: \"3rem\" }}\r\n              >\r\n                Product Reviews\r\n              </h2>\r\n              <Rating value={product.rating} />\r\n              {product.reviews && product.reviews.length === 0 && (\r\n                <Message>No Reviews</Message>\r\n              )}\r\n\r\n              <ListGroup className=\"pt-3\" variant=\"flush\">\r\n                {product.reviews &&\r\n                  product.reviews.map((review) => {\r\n                    return (\r\n                      <ListGroup.Item key={review._id}>\r\n                        <div>\r\n                          <h4>\r\n                            <strong>{review.name}</strong>\r\n                          </h4>{\" \"}\r\n                          <Rating value={review.rating} />\r\n                        </div>\r\n\r\n                        <div>\r\n                          <strong>{review.createdAt.substring(0, 10)} </strong>\r\n                          <span className=\"pl-3\"> {review.comment}</span>\r\n                        </div>\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n              </ListGroup>\r\n\r\n              <ListGroup varient=\"flush\">\r\n                <ListGroup.Item className=\"pt-2 mt-4\">\r\n                  <h2\r\n                    className=\"font-weight-bold pb-2 text-primary\"\r\n                    style={\r\n                      isMobile ? { fontSize: \"1.5rem\" } : { fontSize: \"2.3rem\" }\r\n                    }\r\n                  >\r\n                    Write Your Review\r\n                  </h2>\r\n                  {errorProductReview && (\r\n                    <Message varient=\"error\">{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form>\r\n                      <Form.Group controlId=\"rating\">\r\n                        <Form.Label\r\n                          style={isMobile ? { fontSize: \"1.3rem\" } : {}}\r\n                          className=\"review_form_label  text-primary\"\r\n                        >\r\n                          Rating\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option>Select Rating...</option>\r\n                          <option value=\"1\">1 - Very Bad</option>\r\n                          <option value=\"2\">2 - Not too Bad</option>\r\n                          <option value=\"3\">3 - Noice</option>\r\n                          <option value=\"4\">4 - Loved it</option>\r\n                          <option value=\"5\">5 - WoW Amazing</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"comment\">\r\n                        <Form.Label\r\n                          style={isMobile ? { fontSize: \"1.3rem\" } : {}}\r\n                          className=\"review_form_label  text-primary\"\r\n                        >\r\n                          Your Comment\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"8\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        className=\"review_submit\"\r\n                        onClick={submitReviewHandler}\r\n                        type=\"submit\"\r\n                        variant=\"primary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to=\"/login\">sign in</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  CART_ITEM_ADD,\r\n  CART_ITEM_REMOVE,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_ITEM_RESET,\r\n} from \"../actionTypes/cartConstants\";\r\n\r\n///*     ACTIONS      ///\r\n\r\nconst addCart = (data, qty) => ({\r\n  type: CART_ITEM_ADD,\r\n  payload: {\r\n    product: data._id,\r\n    name: data.name,\r\n    image: data.image,\r\n    price: data.price,\r\n    category: data.category,\r\n    countInStock: data.countInStock,\r\n    qty,\r\n  },\r\n});\r\n\r\nconst removeCart = (id) => ({\r\n  type: CART_ITEM_REMOVE,\r\n  payload: id,\r\n});\r\n\r\nconst shippingAddress = (data) => ({\r\n  type: CART_SAVE_SHIPPING_ADDRESS,\r\n  payload: data,\r\n});\r\n\r\nconst paymentMethod = (data) => ({\r\n  type: CART_SAVE_PAYMENT_METHOD,\r\n  payload: data,\r\n});\r\n\r\n///*     ACTION CREATOR    ///\r\n\r\n///   ADD TO CART   ///\r\nexport const addToCart = (API, id, category, qty) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { data } = await axios.get(`${API}/products/${category}/${id}`);\r\n  dispatch(addCart(data, qty));\r\n  // Adding cartItems to localStorage\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n///   REMOVE FROM CART   ///\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch(removeCart(id));\r\n  // Adding to localStorage after removing particular product\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n///   SAVE SHIPPING ADDRESS   ///\r\nexport const addShippingAddress = (data) => (dispatch) => {\r\n  dispatch(shippingAddress(data));\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\n///   SAVE PAYMENT METHOD   ///\r\nexport const addPaymentMethod = (data) => (dispatch) => {\r\n  dispatch(paymentMethod(data));\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n\r\n///   RESET CART ITEMS   ///\r\nexport const emptyCart = () => (dispatch) => {\r\n  dispatch({ type: CART_ITEM_RESET });\r\n\r\n  localStorage.removeItem(\"cartItems\");\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n//////////////////    COMPONENTS     //////////////////////////\r\nimport Message from \"../components/Message\";\r\n\r\n/////////////////     REDUX    ///////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../redux/actions/cartAction\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//////////////////   CSS style   //////////////////////////////\r\n\r\nimport \"../styles/Screen/CartScreen.css\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst CartScreen = ({ match, location, history, isMobile, API }) => {\r\n  const productId = match.params.id;\r\n  const category = match.params.category;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /// User Login Credentials  ///\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  ///  cart reducer  ///\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (productId) {\r\n      dispatch(addToCart(API, productId, category, qty));\r\n    }\r\n  }, [dispatch, productId, qty, category, userInfo, history, API]);\r\n\r\n  ///    remove cart Handler  ///\r\n  const removecartHandler = (productId) => {\r\n    console.log(productId);\r\n    dispatch(removeFromCart(productId));\r\n  };\r\n\r\n  ///   Checkout Process Handler  ///\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n    console.log(\"CHECKOUT\");\r\n  };\r\n\r\n  ///  GO BACK   ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Cart Screen / */}\r\n      <Meta title=\"Shopping Cart\" />\r\n      {/*///  BREADCRUMB OF NAV  /*/}\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            CART\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2\">\r\n        Go Back\r\n      </Button>\r\n      {/*///////////////////////////  CART WHOLE SECTION  /////////////////////////////*/}\r\n\r\n      <Row className=\"mt-4\">\r\n        {/*//////////////////////////   1. CART LEFT SECTION   //////////////////////////////*/}\r\n        <Col md={8}>\r\n          <h1 className=\"cart__name \">\r\n            YOUR CART ({cartItems && cartItems.length})\r\n            <span className=\"cart__name__span\"> ITEM</span>\r\n          </h1>\r\n\r\n          <br />\r\n\r\n          {/*//////////////    CART == EMPTY -> ErrMess => Else => loop through cartItems   ////////////*/}\r\n\r\n          {cartItems.length === 0 ? (\r\n            <Message varient=\"info\">\r\n              <span className=\"cart__empty\">Your cart is empty </span>\r\n              <Link to=\"/\">Keep Shopping</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup varient=\"flush\" className=\"shadow-lg\">\r\n              {!isMobile ? (\r\n                <ListGroup.Item className=\"cart__left__heading\">\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <h3>Image</h3>\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                      <h3>Name</h3>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <h3>Price</h3>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <h3>Quantity</h3>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ) : null}\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item key={item.product}>\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <Image\r\n                        className=\"cart__left__item__image\"\r\n                        width={isMobile ? \"360\" : \"200\"}\r\n                        src={item.image}\r\n                        alt={item.name}\r\n                        fluid\r\n                        rounded\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"mt-4\" sm={3}>\r\n                      <Link\r\n                        className=\"cart__left__item__name\"\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        {item.name}\r\n                      </Link>\r\n                    </Col>\r\n                    <Col sm={2} className=\"cart__left__item__price\">\r\n                      ${item.price}\r\n                    </Col>\r\n                    <Col className={isMobile ? \"mt-3\" : \"\"} sm={2}>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        style={{ border: \"none\", outline: \"none\" }}\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            addToCart(\r\n                              item.product,\r\n                              item.category,\r\n                              Number(e.target.value)\r\n                            )\r\n                          )\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((q) => (\r\n                          <option key={q + 1} value={q + 1}>\r\n                            {q + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col className={isMobile ? \"mt-3 mb-2\" : \"\"} sm={2}>\r\n                      <Button\r\n                        className=\"cart__left__item__remove\"\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => removecartHandler(item.product)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n\r\n        {/*//////////////////////////   2. CART RIGHT SECTION    /////////////////////////////*/}\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup>\r\n              <ListGroup.Item className={isMobile ? \"pt-4\" : \"pb-4\"}>\r\n                <Button\r\n                  className=\"btn-block p-2 cart__right__checkout\"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  PROCEED TO PAY\r\n                </Button>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <h4 className=\"cart__right__order__heading\">\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__subtotal\">Subtotal:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__subtotal--value\">\r\n                      ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__price\">Price:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__price--value\">\r\n                      $\r\n                      {cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__delivery\">Delivery:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__delivery--value\">Free</h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__total__price\">Total:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__total__price--value\">\r\n                      $\r\n                      {cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//////////////////////////////    CUSTOM STYLES   /////////////////////////////\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n  form: {\r\n    padding: theme.spacing(2.6),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  paper: {\r\n    width: \"50%\",\r\n    margin: \"auto\",\r\n    marginTop: \"3rem\",\r\n\r\n    paddingTop: theme.spacing(2.4),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for user edit screen\r\n  paperUserEdit: {\r\n    width: \"60%\",\r\n    margin: \"auto\",\r\n    marginTop: \"1.2rem\",\r\n\r\n    paddingTop: theme.spacing(2.4),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for product edit screen\r\n  paperProductEdit: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    marginTop: \"1rem\",\r\n    padding: \"3.6rem\",\r\n\r\n    paddingTop: theme.spacing(2.4),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      padding: \"1.6rem\",\r\n    },\r\n  },\r\n\r\n  avatar: {\r\n    width: \"3.1rem\",\r\n    height: \"3.1rem\",\r\n    marginLeft: \"50%\",\r\n    marginBottom: \"0.8rem\",\r\n    transform: \"translateX(-50%)\",\r\n    backgroundImage: \"linear-gradient(45deg, #2196f3,  70%, #045694 90%)\",\r\n  },\r\n\r\n  heading: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"1rem\",\r\n    marginTop: \"0.6rem\",\r\n    color: \"#1853F3\",\r\n    fontSize: \"2.4rem\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"1.4rem\",\r\n    },\r\n  },\r\n\r\n  input: {\r\n    \"& label\": {\r\n      color: theme.palette.info.main,\r\n      fontSize: \"1.2rem\",\r\n      fontWeight: \"550\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#2196f3 \",\r\n        paddingBottom: \"2.8rem\",\r\n      },\r\n    },\r\n    paddingBottom: theme.spacing(3.8),\r\n    width: \"80%\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for product edit screen\r\n  inputProduct: {\r\n    \"& label\": {\r\n      color: theme.palette.info.main,\r\n      fontSize: \"1.2rem\",\r\n      fontWeight: \"550\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#2196f3 \",\r\n        paddingBottom: \"2.8rem\",\r\n      },\r\n    },\r\n    paddingBottom: theme.spacing(3.8),\r\n    width: \"100%\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  button: {\r\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n    width: \"80%\",\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"0.8rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  // for product edit screen\r\n  buttonProduct: {\r\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"1rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"76%\",\r\n      marginBottom: \"3rem\",\r\n    },\r\n  },\r\n\r\n  // upload image button\r\n  uploadButton: {\r\n    marginTop: \"0.8rem\",\r\n    marginBottom: \"0.4rem\",\r\n    marginRight: \"0rem\",\r\n    width: \"100%\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  icon: {\r\n    width: \"1.2rem\",\r\n  },\r\n\r\n  register: {\r\n    paddingTop: theme.spacing(2.8),\r\n    marginLeft: \"6rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"auto\",\r\n    },\r\n  },\r\n\r\n  login: {\r\n    paddingTop: theme.spacing(2.8),\r\n    marginLeft: \"6rem\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"auto\",\r\n    },\r\n  },\r\n\r\n  selectLabel: {\r\n    fontSize: \"1.4rem\",\r\n    textAlign: \"center\",\r\n    color: \"#1853F3\",\r\n  },\r\n\r\n  back: {\r\n    marginLeft: \"0.6rem\",\r\n    width: \"2rem\",\r\n    height: \"2rem\",\r\n    marginBottom: \"-1rem\",\r\n    backgroundImage: \"linear-gradient(45deg, #2196f3,  70%, #045694 90%)\",\r\n    borderRadius: \"2rem\",\r\n    padding: \"0.3rem 0 0.3rem 0.5rem\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\n\r\n//////////////////////////////   Step Connector   ///////////////////////////////\r\nexport const CheckoutStepConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage: \"linear-gradient(45deg, #2196f3,  30%, #045694 90%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage: \"linear-gradient(45deg, #045694,  30%, #2196f3 90%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  AccountBalance,\r\n  LocalShipping,\r\n  PeopleAlt,\r\n  ShoppingBasket,\r\n} from \"@material-ui/icons\";\r\n\r\n/////////////////////////////////////////////   Style Step Icon   //////////////////////////////////////////////\r\nexport const useStepIconStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: \"3.2rem\",\r\n    height: \"3.2rem\",\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"2.4rem\",\r\n      height: \"2.4rem\",\r\n    },\r\n  },\r\n  active: {\r\n    backgroundImage: \"linear-gradient(45deg, #045694,  30%, #2196f3 90%)\",\r\n    boxShadow: \"0 8px 22px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundImage: \"linear-gradient(45deg, #045694,  30%, #2196f3 90%)\",\r\n  },\r\n}));\r\n\r\n////////////////////////////////////////////   Step Icon   /////////////////////////////////////////////\r\nexport function StepIcon(props) {\r\n  const classes = useStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <PeopleAlt fontSize=\"small\" />,\r\n    2: <LocalShipping fontSize=\"small\" />,\r\n    3: <AccountBalance fontSize=\"small\" />,\r\n    4: <ShoppingBasket fontSize=\"small\" />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\n\r\n////////////////////////////////////    CUSTOM STYLE COMPONENTS   /////////////////////////////////////////\r\nimport { CheckoutStepConnector } from \"./CustomStyles/CheckoutStepper/StepConnector\";\r\nimport { StepIcon } from \"./CustomStyles/CheckoutStepper/StepIcon\";\r\n\r\nfunction getSteps() {\r\n  return [\"Sign In\", \"Shipping\", \"Payment\", \"Place Order\"];\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function CheckoutStepper({ step }) {\r\n  const classes = useStyles();\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <div>\r\n      <Stepper\r\n        className={classes.root}\r\n        activeStep={step}\r\n        alternativeLabel\r\n        connector={<CheckoutStepConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={StepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst LoginScreen = ({ history, location, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = login;\r\n\r\n  //    FOR SHIPPING PAGE REDIRECT OR HOME   //\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    // if user logged in redirect to particular query ('register', 'cart', 'shipping')\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    //DISPATCH LOGIN\r\n    dispatch(loginUser(API, email, password));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Login Screen / */}\r\n      <Meta title=\"eShop Login\" />\r\n      {redirect === \"shipping\" ? <CheckoutStepper step={0} /> : null}\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PeopleIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        {/*///////////////////////////////    LOADER    /////////////////////////////////////////*/}\r\n        {loading && <Loader />}\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-email\"\r\n              placeholder=\"Email Address\"\r\n              required\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <EmailIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={54}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              type={passwordVisibility ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setPasswordVisibility(!passwordVisibility)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {passwordVisibility ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={90}\r\n            />\r\n          </FormControl>\r\n\r\n          {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n          {error && <Message varient=\"error\">{error}</Message>}\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item>\r\n              <Typography component=\"h5\" className={classes.register}>\r\n                Haven't Registered yet? &nbsp;\r\n                <Link\r\n                  to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n                  variant=\"body2\"\r\n                >\r\n                  Register\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../redux/actions/userAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst RegisterScreen = ({ history, location, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n  const [confirmPasswordVisibility, setConfirmPasswordVisibility] = useState(\r\n    false\r\n  );\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const register = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = register;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    //DISPATCH REGISTER\r\n    if (password === confirmPassword) {\r\n      dispatch(registerUser(API, name, email, password));\r\n    } else {\r\n      setMessage(\"Password does not match\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Register Screen / */}\r\n      <Meta title=\"eShop Register\" />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PeopleIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n\r\n        {/*///////////////////////////////    LOADER    /////////////////////////////////////////*/}\r\n        {loading && <Loader />}\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-name\">Name</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-name\"\r\n              placeholder=\"Your Name\"\r\n              required\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <PeopleIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={55}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-email\"\r\n              placeholder=\"Email Address\"\r\n              required\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <EmailIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={54}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              type={passwordVisibility ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setPasswordVisibility(!passwordVisibility)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {passwordVisibility ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={90}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-confirmPassword\">\r\n              Confirm Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-confirmPassword\"\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n              type={confirmPasswordVisibility ? \"text\" : \"password\"}\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() =>\r\n                      setConfirmPasswordVisibility(!confirmPasswordVisibility)\r\n                    }\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {confirmPasswordVisibility ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={168}\r\n            />\r\n          </FormControl>\r\n\r\n          {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n\r\n          {error && <Message varient=\"error\">{error}</Message>}\r\n          {message && <Message varient=\"error\">{message}</Message>}\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item>\r\n              <Typography component=\"h5\" className={classes.login}>\r\n                Already Registered? &nbsp;\r\n                <Link\r\n                  to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n                  variant=\"body2\"\r\n                >\r\n                  Login\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAILED,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAILED,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAILED,\r\n  LIST_MY_ORDER_REQUEST,\r\n  LIST_MY_ORDER_SUCCESS,\r\n  LIST_MY_ORDER_FAILED,\r\n  LIST_ALL_ORDER_REQUEST,\r\n  LIST_ALL_ORDER_SUCCESS,\r\n  LIST_ALL_ORDER_FAILED,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAILED,\r\n} from \"../actionTypes/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n///*    ACTIONS   ///\r\n\r\n///     ORDER CREATE    ///\r\nconst reqOrder = () => ({\r\n  type: CREATE_ORDER_REQUEST,\r\n});\r\n\r\nconst addOrder = (order) => ({\r\n  type: CREATE_ORDER_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst orderFailed = (error) => ({\r\n  type: CREATE_ORDER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   Order Details   ///\r\nconst reqOrderDetails = () => ({\r\n  type: ORDER_DETAILS_REQUEST,\r\n});\r\n\r\nconst addOrderDetails = (order) => ({\r\n  type: ORDER_DETAILS_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst orderDetailsFailed = (error) => ({\r\n  type: ORDER_DETAILS_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///    PAY Order   ///\r\nconst reqPayOrder = () => ({\r\n  type: ORDER_PAY_REQUEST,\r\n});\r\n\r\nconst addPayOrder = (order) => ({\r\n  type: ORDER_PAY_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst payOrderFailed = (error) => ({\r\n  type: ORDER_PAY_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   MY ORDERS   ///\r\nconst reqMyOrders = () => ({\r\n  type: LIST_MY_ORDER_REQUEST,\r\n});\r\n\r\nconst addMyOrders = (order) => ({\r\n  type: LIST_MY_ORDER_SUCCESS,\r\n  payload: order,\r\n});\r\n\r\nconst myOrdersFailed = (error) => ({\r\n  type: LIST_MY_ORDER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   ALL ORDERS   ///\r\nconst reqAllOrders = () => ({\r\n  type: LIST_ALL_ORDER_REQUEST,\r\n});\r\n\r\nconst addAllOrders = (orders) => ({\r\n  type: LIST_ALL_ORDER_SUCCESS,\r\n  payload: orders,\r\n});\r\n\r\nconst allOrdersFailed = (error) => ({\r\n  type: LIST_ALL_ORDER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///   UPDATE ORDER TO PAID   ///\r\nconst reqDeliverOrder = () => ({\r\n  type: ORDER_DELIVER_REQUEST,\r\n});\r\n\r\nconst updateOrderToDelivered = () => ({\r\n  type: ORDER_DELIVER_SUCCESS,\r\n  success: true,\r\n});\r\n\r\nconst deliverOrderFailed = (error) => ({\r\n  type: ORDER_DELIVER_FAILED,\r\n  payload: error,\r\n});\r\n\r\n///*     ACTION CREATOR    ///\r\n\r\n///    ORDER CREATE    ///\r\nexport const createOrder = (API, order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqOrder());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(`${API}/orders`, order, config);\r\n    dispatch(addOrder(data));\r\n  } catch (error) {\r\n    orderFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    ORDER DETAILS    ///\r\nexport const getOrderDetails = (API, id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqOrderDetails());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${API}/orders/${id}`, config);\r\n    dispatch(addOrderDetails(data));\r\n  } catch (error) {\r\n    orderDetailsFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    PAY ORDER AND UPDATE ORDER TO PAID    ///\r\nexport const payOrder = (API, orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqPayOrder());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `${API}/orders/${orderId}/payment`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch(addPayOrder(data));\r\n  } catch (error) {\r\n    payOrderFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    LIST MY ORDERS (PARTICULAR USER)    ///\r\nexport const listMyOrders = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqMyOrders());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${API}/orders/myorders`, config);\r\n    dispatch(addMyOrders(data));\r\n  } catch (error) {\r\n    myOrdersFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///* ADMIN USER   ///\r\n\r\n///    LIST ALL ORDERS   ///\r\nexport const listAllOrders = (API) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqAllOrders());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`${API}/orders`, config);\r\n    dispatch(addAllOrders(data));\r\n  } catch (error) {\r\n    allOrdersFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n\r\n///    UPDATE ORDER TO DELIVERED    ///\r\nexport const deliverOrder = (API, orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(reqDeliverOrder());\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    await axios.put(`${API}/orders/${orderId}/deliver`, {}, config);\r\n    dispatch(updateOrderToDelivered());\r\n  } catch (error) {\r\n    deliverOrderFailed(\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    );\r\n  }\r\n};\r\n","import { makeStyles, withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1.4),\r\n      width: \"76%\",\r\n    },\r\n    marginTop: \"1.4rem\",\r\n  },\r\n\r\n  heading: {\r\n    // color: theme.palette.info.main,\r\n    color: \"#2071E3\",\r\n    fontWeight: \"550\",\r\n  },\r\n  button: {\r\n    background: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n    margin: theme.spacing(1.4),\r\n    width: \"76%\",\r\n  },\r\n\r\n  table: {\r\n    borderRadius: \".4rem\",\r\n    marginTop: \"1.4rem\",\r\n  },\r\n  details: {\r\n    boxShadow:\r\n      \"rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px\",\r\n    \"&:hover\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#4EABDE\",\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\n/////////////////////////     CUSTOM STYLE TextField     ///////////////////////////\r\nexport const CssTextField = withStyles({\r\n  root: {\r\n    \"& label\": {\r\n      color: \"green\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"green\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n/////////////////////////     CUSTOM STYLE TABLE CELL     ///////////////////////////\r\nexport const StyledTableCell = withStyles((theme) =>\r\n  createStyles({\r\n    head: {\r\n      background: \"#2196F3\",\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  })\r\n)(TableCell);\r\n\r\n/////////////////////////     CUSTOM STYLE TABLE ROW     ///////////////////////////\r\nexport const StyledTableRow = withStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.selected,\r\n        \"&:hover\": {\r\n          backgroundColor: theme.palette.action.hover,\r\n        },\r\n      },\r\n    },\r\n  })\r\n)(TableRow);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///    MATERIAL UI   ///\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MaterialButton from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\n///    REDUX     ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n  userLogout,\r\n} from \"../redux/actions/userAction\";\r\nimport { listMyOrders } from \"../redux/actions/orderAction\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport {\r\n  useStyles,\r\n  CssTextField,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/ProfileScreen\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProfileScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  ///   LOGIN REDUCER    ///\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  ///    USER PROFILE REDUCER    ///\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  ///   UPDATE USER PROFILE REDUCER    ///\r\n  const updateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = updateProfile;\r\n\r\n  ///   MY ORDERS REDUCER    ///\r\n  const myOrdersList = useSelector((state) => state.myOrders);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = myOrdersList;\r\n\r\n  // redirect to login page if not logged in and set name & email field in form\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n    // logout if jwt expire\r\n    else if (error === \"jwt expired\") {\r\n      alert(\"Logged Out!! Again log in to view profile\");\r\n      dispatch(userLogout());\r\n    }\r\n  }, [dispatch, userInfo, user, history, error]);\r\n\r\n  // fetch user details (even after update) and fetch all orders\r\n  useEffect(() => {\r\n    dispatch(getUserDetails(API, \"profile\"));\r\n    dispatch(listMyOrders(API));\r\n  }, [dispatch, API]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password does not match\");\r\n    } else {\r\n      //DISPATCH UPDATE\r\n      dispatch(updateUserProfile(API, { id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <>\r\n      {/* /// add custom title in User Profile / */}\r\n      <Meta title=\"User profile\" />\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            PROFILE\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      {/*//////////////////////////////////////     GRID       ////////////////////////////////////// */}\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item sm={4} xs={12}>\r\n          <h2 className={classes.heading}>PROFILE</h2>\r\n          {loading && <Loader />}\r\n          <form className={classes.form}>\r\n            <CssTextField\r\n              id=\"outlined-name\"\r\n              label=\"Name\"\r\n              value={name}\r\n              multiline\r\n              placeholder=\"Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            <CssTextField\r\n              id=\"outlined-email\"\r\n              label=\"Email\"\r\n              value={email}\r\n              multiline\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <CssTextField\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              label=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <CssTextField\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              id=\"outlined-password\"\r\n              required\r\n              label=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n\r\n            {error && <Message varient=\"error\">{error}</Message>}\r\n            {message && <Message varient=\"error\">{message}</Message>}\r\n\r\n            {success && (\r\n              <Message varient=\"success\">Profile Updated Successfully</Message>\r\n            )}\r\n            <MaterialButton\r\n              className={classes.button}\r\n              onClick={submitHandler}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update\r\n            </MaterialButton>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid item sm={8} xs={12}>\r\n          <h2 className={classes.heading}>MY ORDERS</h2>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message varient=\"danger\">{errorOrders}</Message>\r\n          ) : (\r\n            <Paper elevation={8} className={classes.table}>\r\n              <TableContainer className={classes.table}>\r\n                <Table aria-label=\"customized table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell align=\"center\">ORDER ID</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">DATE</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">TOTAL</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">PAID</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">\r\n                        DELIVERED\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"center\"></StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {orders &&\r\n                      orders\r\n                        .slice(\r\n                          page * rowsPerPage,\r\n                          page * rowsPerPage + rowsPerPage\r\n                        )\r\n                        .map((order) => (\r\n                          <StyledTableRow key={order._id}>\r\n                            <StyledTableCell component=\"th\" scope=\"row\">\r\n                              {order._id}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.createdAt.substring(0, 10)}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.totalPrice}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.isPaid ? (\r\n                                <div>\r\n                                  <DoneIcon color=\"primary\"></DoneIcon>\r\n                                  &nbsp; &nbsp;\r\n                                  <span>{order.paidAt.substring(0, 10)}</span>\r\n                                </div>\r\n                              ) : (\r\n                                <i\r\n                                  className=\"fa fa-times\"\r\n                                  style={{ color: \"#f44336\" }}\r\n                                ></i>\r\n                              )}\r\n                            </StyledTableCell>\r\n                            <StyledTableCell align=\"center\">\r\n                              {order.isDelivered ? (\r\n                                order.deliveredAt.substring(0, 10)\r\n                              ) : (\r\n                                <i\r\n                                  className=\"fa fa-times\"\r\n                                  style={{ color: \"#f44336\" }}\r\n                                ></i>\r\n                              )}\r\n                            </StyledTableCell>\r\n\r\n                            <StyledTableCell align=\"center\">\r\n                              <Link to={`/orders/${order._id}`}>\r\n                                <MaterialButton\r\n                                  className={classes.details}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  DETAILS\r\n                                </MaterialButton>\r\n                              </Link>\r\n                            </StyledTableCell>\r\n                          </StyledTableRow>\r\n                        ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              {orders && (\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={orders.length}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={(event, newPage) => setPage(newPage)}\r\n                  onChangeRowsPerPage={(event) => {\r\n                    setRowsPerPage(parseInt(event.target.value, 10));\r\n                    setPage(0);\r\n                  }}\r\n                />\r\n              )}\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\n///    MATERIAL UI    ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///      MATERIAL UI ICONS     ///\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport FiberPinIcon from \"@material-ui/icons/FiberPin\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\n///     REDUX       ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addShippingAddress } from \"../redux/actions/cartAction\";\r\n\r\n///   COMPONENT   ///\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const classes = useStyle();\r\n\r\n  ///     REDUX  REDUCER   ///\r\n  const shippingAdd = useSelector((state) => state.cart);\r\n  const { shippingAddress } = shippingAdd;\r\n\r\n  ///    SHIPPING ADDRESS STATE (DEFAULT: FROM LOCAL STORAGE)    ///\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Redirect to loginScreen on logout\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    //DISPATCH SHIPPING ADDRESS\r\n    dispatch(addShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/paymentMethod\");\r\n  };\r\n\r\n  ///    GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Shipping Screen / */}\r\n      <Meta title=\"Shipping Address\" />\r\n      <CheckoutStepper step={1} />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <div onClick={goBack}>\r\n          <ArrowBackIosIcon className={classes.back} />\r\n        </div>\r\n        <Avatar className={classes.avatar}>\r\n          <LocalShippingIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Shipping Address\r\n        </Typography>\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-address\">\r\n              Address\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-address\"\r\n              placeholder=\"Your Address\"\r\n              required\r\n              type=\"text\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LocationOnIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={60}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-city\">City</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-city\"\r\n              placeholder=\"Your City\"\r\n              required\r\n              type=\"text\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LocationCityIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={30}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-postalCode\">\r\n              Postal Code\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-postalCode\"\r\n              placeholder=\"Postal Code\"\r\n              required\r\n              type=\"text\"\r\n              value={postalCode}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <FiberPinIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={90}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-confirmPassword\">\r\n              Country\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-country\"\r\n              placeholder=\"Your Country\"\r\n              required\r\n              type=\"text\"\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LanguageIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={58}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            CONTINUE\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n///    MATERIAL UI    ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\n///   COMPONENTS   ///\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n///    REDUX      ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPaymentMethod } from \"../redux/actions/cartAction\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst PaymentMethodScreen = ({ history }) => {\r\n  const classes = useStyle();\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  ///     REDUX  REDUCER of Shipping Address   ///\r\n  const shippingAdd = useSelector((state) => state.cart);\r\n  const { shippingAddress } = shippingAdd;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Redirect to loginScreen on logout\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    ///      DISPATCH PAYMENT METHOD and push to /placeorder   ///\r\n    dispatch(addPaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  ///    GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in PaymentMethod Screen / */}\r\n      <Meta title=\"Payment Method\" />\r\n      <CheckoutStepper step={2} />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <div onClick={goBack}>\r\n          <ArrowBackIosIcon className={classes.back} />\r\n        </div>\r\n\r\n        <Avatar className={classes.avatar}>\r\n          <AccountBalanceIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Payment Method\r\n        </Typography>\r\n\r\n        <form className={classes.form}>\r\n          <FormControl component=\"fieldset\" className={classes.input}>\r\n            {/* <FormLabel className={classes.selectLabel} component=\"legend\">\r\n              Select Method\r\n            </FormLabel> */}\r\n            <RadioGroup\r\n              aria-label=\"payment method\"\r\n              name=\"payment method\"\r\n              value={paymentMethod}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"PayPal\"\r\n                control={<Radio required />}\r\n                label=\"PayPal\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Stripe\"\r\n                control={<Radio required />}\r\n                label=\"Stripe\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            CONTINUE\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentMethodScreen;\r\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// MOBILE BREAKPOINT\r\nconst isMobile = window.innerWidth <= 768;\r\nexport const useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: \"36ch\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n      display: \"inline\",\r\n    },\r\n\r\n    divider: {\r\n      marginBottom: \"0.5rem\",\r\n      marginTop: \"0.3rem\",\r\n    },\r\n    avatar: {\r\n      width: isMobile ? \"3.9rem\" : \"6.5rem\",\r\n      height: isMobile ? \"3.9rem\" : \"6.5rem\",\r\n      marginRight: \"1rem\",\r\n    },\r\n    paper: {\r\n      marginBottom: \"1.8rem\",\r\n      padding: \"0.4rem 1rem 1rem 0\",\r\n    },\r\n    list_item: {\r\n      paddingLeft: isMobile ? \"1.2rem\" : \"3.4rem\",\r\n      paddingRight: \"1rem\",\r\n      paddingBottom: \"1.4rem\",\r\n    },\r\n    order_summary: {\r\n      fontSize: \"1.6rem\",\r\n      margin: \"auto\",\r\n    },\r\n\r\n    order_link: {\r\n      textDecoration: \"none\",\r\n    },\r\n\r\n    message: {\r\n      paddingLeft: \"2rem\",\r\n      marginTop: \"0.8rem\",\r\n      width: \"100%\",\r\n    },\r\n\r\n    shipping: {\r\n      marginRight: isMobile ? \"1.8rem\" : \"2.8rem\",\r\n    },\r\n\r\n    email: {\r\n      color: \"#000\",\r\n    },\r\n\r\n    qty: {\r\n      fontSize: \"1.3rem\",\r\n      fontWeight: \"450\",\r\n    },\r\n\r\n    deliver_button: {\r\n      width: \"100%\",\r\n      height: \"3.6rem\",\r\n      border: \"none\",\r\n      outline: \"none\",\r\n      float: \"right\",\r\n      background: \"linear-gradient(45deg, #2196f3 30%, #21cbf3 90%)\",\r\n      justifyContent: \"center\",\r\n      fontFamily: \"Montserrat, sans-serif\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 500,\r\n      fontSize: \"1.25rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      letterSpacing: \"0.005em\",\r\n      color: \"#ffffff\",\r\n      filter: \"drop-shadow(12px 12px 10px rgba(0, 0, 0, 0.42))\",\r\n\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        width: \"14rem\",\r\n        height: \"3rem\",\r\n        fontSize: \"1rem\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///     MATERIAL UI   ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n///    REDUX     ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeFromCart } from \"../redux/actions/cartAction\";\r\nimport { createOrder } from \"../redux/actions/orderAction\";\r\nimport { CREATE_ORDER_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\n///  COMPONENTS   ///\r\nimport ErrMess from \"../components/Message\";\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n///    CUSTOM STYLES     ///\r\nimport { useStyles } from \"./customStyle/PlaceOrderScreen\";\r\n\r\nconst PlaceOrderScreen = ({ history, API, isMobile }) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // cart details\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems, shippingAddress, paymentMethod } = cart;\r\n\r\n  ///  Items Price   ///\r\n  cart.itemsPrice = cartItems\r\n    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n    .toFixed(2);\r\n\r\n  ///   Shipping Price  ///\r\n  cart.shippingPrice = (cart.itemsPrice > 150 ? 100 : 0).toFixed(2);\r\n\r\n  ///  Tax Price  ///\r\n  cart.taxPrice = ((cart.itemsPrice * 25) / 100).toFixed(2);\r\n\r\n  ///   TOTAL PRICE  ///\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  ///  REMOVE ORDER FROM CART   ///\r\n  const removeCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const placeOrder = useSelector((state) => state.order);\r\n  const { order, success } = placeOrder;\r\n\r\n  ///  PLACE ORDER   ///\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder(API, {\r\n        orderItems: cartItems,\r\n        shippingAddress: shippingAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (success) {\r\n      history.push(`/orders/${order._id}`);\r\n      dispatch({ type: CREATE_ORDER_RESET });\r\n    }\r\n  }, [dispatch, history, order, success, userInfo, API]);\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Place Order Screen / */}\r\n      <Meta title=\"Place Order\" />\r\n      <CheckoutStepper step={3} />\r\n      <Grid container spacing={4}>\r\n        {/* ///   LEFT SIDE    /// */}\r\n        <Grid item md={8} xs={12}>\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h5\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>SHIPPING DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  {shippingAddress.address},\r\n                  <br />\r\n                  {shippingAddress.city},\r\n                  <br />\r\n                  {shippingAddress.country},\r\n                  <br />\r\n                  {shippingAddress.postalCode}\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n\r\n            <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h5\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>PAYMENT METHOD</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  {paymentMethod}\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"primary\" variant=\"h5\" component=\"h3\">\r\n                  <strong>ORDER DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n\r\n            {!cartItems.length ? (\r\n              <Container maxWidth=\"md\">\r\n                <ErrMess varient=\"info\">\r\n                  Your Cart Is Empty <Link to=\"/\">Keep Shopping</Link>\r\n                </ErrMess>\r\n              </Container>\r\n            ) : (\r\n              <List>\r\n                {cartItems.map((item, index) => (\r\n                  <div key={index}>\r\n                    <ListItem\r\n                      className={classes.list_item}\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          alt={item.name}\r\n                          variant=\"square\"\r\n                          src={item.image}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <Link\r\n                        className={classes.order_link}\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        <ListItemText\r\n                          primary={item.name}\r\n                          secondary={\r\n                            <Typography\r\n                              color=\"primary\"\r\n                              variant={isMobile ? \"span\" : \"body2\"}\r\n                              component=\"span\"\r\n                            >\r\n                              {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toFixed(2)}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </Link>\r\n                      <ListItemSecondaryAction\r\n                        style={\r\n                          isMobile\r\n                            ? { marginTop: \"2.2rem\", marginRight: \"-1.8rem\" }\r\n                            : {}\r\n                        }\r\n                      >\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"light\"\r\n                          onClick={() => removeCartHandler(item.product)}\r\n                        >\r\n                          <i className=\"fas fa-trash\"></i>\r\n                        </Button>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider\r\n                      variant=\"fullWidth\"\r\n                      className={classes.divider}\r\n                      component=\"li\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* ///   RIGHT SIDE    /// */}\r\n        <Grid item md={4} xs={12}>\r\n          <Paper elevation={6}>\r\n            <List>\r\n              <ListItem>\r\n                <Typography\r\n                  className={classes.order_summary}\r\n                  color=\"primary\"\r\n                  variant=\"h4\"\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </Typography>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"inset\" component=\"br\" />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Items</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.itemsPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Shipping</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.shippingPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Tax</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.taxPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Total</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${cart.totalPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"fullWidth\" component=\"br\" />\r\n\r\n              <ListItem>\r\n                <Button\r\n                  className=\"btn-block p-2\"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  PLACE ORDER\r\n                </Button>\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport StripeCheckoutButton from \"react-stripe-checkout\";\r\n\r\n// REDUX\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { payOrder } from \"../redux/actions/orderAction\";\r\nimport { emptyCart } from \"../redux/actions/cartAction\";\r\nimport { ORDER_PAY_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport axios from \"axios\";\r\n\r\n// custom style for stripe checkout button\r\nconst useStyle = makeStyles(() => ({\r\n  stripeButton: {\r\n    background: \"linear-gradient(45deg, #007fe4 30%, #00c3f1 90%)\",\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport const StripeCheckout = ({ orderId, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Order details\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { orders } = orderDetails;\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Updated Order after paid\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  // if paid successfully reset\r\n  useEffect(() => {\r\n    if (successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      // empty cart items\r\n      dispatch(emptyCart());\r\n    }\r\n  }, [dispatch, successPay]);\r\n\r\n  // make payment through stripe by post request data to backend\r\n  const makePayment = async (token) => {\r\n    console.log(token);\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${API}/payment/stripe`,\r\n        { token, orderId },\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        }\r\n      );\r\n      console.log(data);\r\n      if (data) {\r\n        dispatch(payOrder(API, orderId, data));\r\n        alert(\r\n          \"Transaction completed by \" + orders.user.name + \" through stripe\"\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingPay ? (\r\n        <Loader />\r\n      ) : (\r\n        <StripeCheckoutButton\r\n          stripeKey={process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY}\r\n          token={makePayment}\r\n          amount={orders.totalPrice * 100}\r\n          currency=\"USD\"\r\n          name=\"Pay with Stripe\"\r\n          shippingAddress\r\n          billingAddress\r\n        >\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            className={classes.stripeButton}\r\n          >\r\n            Pay With Stripe\r\n          </Button>\r\n        </StripeCheckoutButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { payOrder } from \"../redux/actions/orderAction\";\r\nimport { emptyCart } from \"../redux/actions/cartAction\";\r\nimport { ORDER_PAY_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\nimport Loader from \"./Loader\";\r\n\r\nexport const PayPalCheckout = ({ orderId, API }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { orders } = orderDetails;\r\n\r\n  // PAYPAL PAYMENT INTEGRATION\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  //paypal script\r\n  const addPayPalScript = async () => {\r\n    const { data: clientId } = await axios.get(`${API}/config/paypal`);\r\n    console.log(clientId);\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  // if paid successfully reset order_pay and add paypal script if order not paid and paypal is configured previously\r\n  useEffect(() => {\r\n    if (successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      //empty cart\r\n      dispatch(emptyCart());\r\n    } else if (orders && !orders.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, orders, successPay]);\r\n\r\n  // On payment successfully completed\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(API, orderId, paymentResult));\r\n    // alert(\"Transaction completed by \" + paymentResult.payer.name.given_name);\r\n    alert(\"Transaction completed by \" + orders.user.name + \" through paypal\");\r\n  };\r\n\r\n  // Error handling in payment\r\n  const errorPaymentHandler = (err) => {\r\n    console.log(err);\r\n    alert(err);\r\n  };\r\n\r\n  // On cancel of payment\r\n  const cancelPaymentHandler = (msg) => {\r\n    alert(\"Order \" + msg.orderID + \" Cancelled\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingPay ? (\r\n        <Loader />\r\n      ) : !sdkReady ? (\r\n        <Loader />\r\n      ) : (\r\n        <PayPalButton\r\n          amount={`${orders.totalPrice}`}\r\n          onSuccess={successPaymentHandler}\r\n          onError={errorPaymentHandler}\r\n          onCancel={cancelPaymentHandler}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst OrderScreenSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Skeleton\r\n        className=\"mt-4\"\r\n        width={600}\r\n        height={60}\r\n        variant=\"text\"\r\n        component=\"h2\"\r\n      />\r\n      <Grid className=\"mt-3\" container spacing={4}>\r\n        <Grid item md={8} xs={12}>\r\n          <Skeleton variant=\"rect\" height={500} />\r\n          <Skeleton className=\"mt-4\" variant=\"rect\" height={200} />\r\n        </Grid>\r\n        <Grid item md={4} xs={12}>\r\n          <Skeleton variant=\"rect\" height={360} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreenSkeleton;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///     MATERIAL UI   ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n///    Components   ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport { StripeCheckout } from \"../components/StripeCheckout\";\r\nimport { PayPalCheckout } from \"../components/PayPalCheckout\";\r\n\r\n///    REDUX     ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails, deliverOrder } from \"../redux/actions/orderAction\";\r\nimport { ORDER_DELIVER_RESET } from \"../redux/actionTypes/orderConstants\";\r\n\r\n///    CUSTOM STYLES     ///\r\nimport { useStyles } from \"./customStyle/PlaceOrderScreen\";\r\nimport \"../styles/Screen/OrderScreen.css\";\r\nimport OrderScreenSkeleton from \"./skeletons/OrderScreenSkeleton\";\r\n\r\nconst OrderScreen = ({ match, history, API, isMobile }) => {\r\n  const classes = useStyles();\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials reducer\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Order details reducer\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, orders, error } = orderDetails;\r\n\r\n  // PAYMENT INTEGRATION (update order to paid) reducer\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { success: successPay } = orderPay;\r\n\r\n  // Update order to deliver reducer\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(API, orderId));\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, userInfo, history, API]);\r\n\r\n  const handleDeliver = () => {\r\n    dispatch(deliverOrder(API, orderId));\r\n  };\r\n\r\n  return loading ? (\r\n    <OrderScreenSkeleton />\r\n  ) : error ? (\r\n    <Message varient=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      {/* /// add custom title in Order Screen / */}\r\n      <Meta title=\"Order Screen\" />\r\n      <br />\r\n      <Typography\r\n        variant={isMobile ? \"h6\" : \"h4\"}\r\n        component=\"h4\"\r\n        color=\"textSecondary\"\r\n      >\r\n        <span\r\n          style={isMobile ? { display: \"flex\", justifyContent: \"center\" } : {}}\r\n        >\r\n          ORDER\r\n        </span>{\" \"}\r\n        {orders._id}\r\n      </Typography>\r\n      <br />\r\n      <br />\r\n      <Grid container spacing={4}>\r\n        {/* ///   LEFT SIDE    // */}\r\n        <Grid item md={8} xs={12}>\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h4\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>SHIPPING DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  <strong className={classes.shipping}>Name: </strong>\r\n                  {orders.user.name}\r\n                  <br />\r\n                  <br />\r\n                  <strong className={classes.shipping}>Email: </strong>\r\n                  <a\r\n                    rel=\"noreferrer\"\r\n                    className={classes.email}\r\n                    href={orders.user.email}\r\n                    target=\"_blank\"\r\n                  >\r\n                    {orders.user.email}\r\n                  </a>\r\n                  <br />\r\n                  <br />\r\n                  <strong>Address: </strong>\r\n                  <span className=\"ml-4\">{orders.shippingAddress.address}</span>\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.city}\r\n                  </span>\r\n\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.country},\r\n                  </span>\r\n\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.postalCode}\r\n                  </span>\r\n                </Typography>\r\n              </ListItem>\r\n              <div className={classes.message}>\r\n                {orders.isDelivered ? (\r\n                  <Message varient=\"success\">\r\n                    Delivered at {orders.deliveredAt.substring(0, 10)}\r\n                  </Message>\r\n                ) : (\r\n                  <Message varient=\"error\">Not Delivered</Message>\r\n                )}\r\n              </div>\r\n            </List>\r\n\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h6\" : \"h4\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>PAYMENT METHOD</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  {orders.paymentMethod}\r\n                </Typography>\r\n              </ListItem>\r\n              <div className={classes.message}>\r\n                {orders.isPaid ? (\r\n                  <Message varient=\"success\">\r\n                    Paid on {orders.paidAt.substring(0, 10)}\r\n                  </Message>\r\n                ) : (\r\n                  <Message varient=\"error\">Not Paid</Message>\r\n                )}\r\n              </div>\r\n            </List>\r\n          </Paper>\r\n\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography\r\n                  color=\"primary\"\r\n                  variant={isMobile ? \"h5\" : \"h4\"}\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>ORDER DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n\r\n            {!orders.orderItems.length ? (\r\n              <Container maxWidth=\"md\">\r\n                <Message varient=\"info\">\r\n                  No order <Link to=\"/\"> Keep Shopping</Link>\r\n                </Message>\r\n              </Container>\r\n            ) : (\r\n              <List>\r\n                {orders.orderItems.map((item, index) => (\r\n                  <div key={index}>\r\n                    <ListItem\r\n                      className={classes.list_item}\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          alt={item.name}\r\n                          variant=\"square\"\r\n                          src={item.image}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <Link\r\n                        className={classes.order_link}\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        <ListItemText\r\n                          primary={item.name}\r\n                          secondary={\r\n                            <Typography\r\n                              color=\"primary\"\r\n                              variant={isMobile ? \"span\" : \"body2\"}\r\n                              component=\"span\"\r\n                            >\r\n                              {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toFixed(2)}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </Link>\r\n                      {!isMobile ? (\r\n                        <ListItemSecondaryAction className={classes.qty}>\r\n                          Qty: {item.qty}\r\n                        </ListItemSecondaryAction>\r\n                      ) : null}\r\n                    </ListItem>\r\n                    <Divider\r\n                      variant=\"fullWidth\"\r\n                      className={classes.divider}\r\n                      component=\"li\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* ///   RIGHT SIDE    /// */}\r\n        <Grid item md={4} xs={12}>\r\n          <Paper elevation={6}>\r\n            <List>\r\n              <ListItem>\r\n                <Typography\r\n                  className={classes.order_summary}\r\n                  color=\"primary\"\r\n                  variant=\"h4\"\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </Typography>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"inset\" component=\"br\" />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Items Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.itemsPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Delivery Charge</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.shippingPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Tax Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.taxPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Total Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.totalPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"fullWidth\" component=\"br\" />\r\n\r\n              {/*/// PAYPAL BUTTON or STRIPE BUTTON showed if order is not paid  ///*/}\r\n              {!orders.isPaid ? (\r\n                <ListItem>\r\n                  <Grid item xs={12}>\r\n                    {orders.paymentMethod === \"PayPal\" ? (\r\n                      <PayPalCheckout orderId={orderId} API={API} />\r\n                    ) : orders.paymentMethod === \"Stripe\" ? (\r\n                      <StripeCheckout orderId={orderId} API={API} />\r\n                    ) : null}\r\n                  </Grid>\r\n                </ListItem>\r\n              ) : (\r\n                userInfo &&\r\n                !userInfo.isAdmin && (\r\n                  <Message>Payment Done Successfully</Message>\r\n                )\r\n              )}\r\n              <ListItem>\r\n                {/*/// Marked As Delivered BUTTON showed if order is not delivered and if admin user  ///*/}\r\n                {userInfo &&\r\n                  userInfo.isAdmin &&\r\n                  orders.isPaid &&\r\n                  !orders.isDelivered && (\r\n                    <>\r\n                      <Button\r\n                        className=\"btn-block p-2 order_deliver_button\"\r\n                        onClick={handleDeliver}\r\n                      >\r\n                        MARKED AS DELIVERED\r\n                      </Button>\r\n                      {loadingDeliver && <Loader />}\r\n                    </>\r\n                  )}\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#2196f3\",\r\n    color: theme.palette.common.white,\r\n    paddingLeft: \"1.8rem\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    paddingLeft: \"1.4rem\",\r\n    padding: \"0.6rem\",\r\n  },\r\n}))(TableCell);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.selected,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  tableHead: {\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  tableCol: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  heading: {\r\n    color: \"#2196f3\",\r\n    fontFamily: \"Merriweather Sans, sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fontSize: \"3.6rem\",\r\n    marginBottom: \"2rem\",\r\n    letterSpacing: \"-0.018em\",\r\n    background: \"linear-gradient(90deg, #0063bbdb 0%, #4ca8efcc 86.54%)\",\r\n    backgroundClip: \"text\",\r\n    WebkitBackgroundClip: \"text\",\r\n    WebkitTextFillColor: \"transparent\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"3rem\",\r\n    },\r\n  },\r\n  check: {\r\n    color: \"#0e890a\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n  cross: {\r\n    fontWeight: \"bolder\",\r\n  },\r\n\r\n  // for product list screen only\r\n  createProductButton: {\r\n    width: \"18rem\",\r\n    height: \"3.6rem\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    marginBottom: \"2rem\",\r\n    float: \"right\",\r\n    background:\r\n      \"linear-gradient( 90deg,  #0663af, 0%, rgba(0, 149, 255, 0.582) 106.57%)\",\r\n    borderRadius: \"2.6rem\",\r\n    justifyContent: \"center\",\r\n    fontFamily: \"Montserrat, sans-serif\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 500,\r\n    fontSize: \"1.25rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    letterSpacing: \"0.005em\",\r\n    color: \"#ffffff\",\r\n    filter: \"drop-shadow(12px 12px 10px rgba(0, 0, 0, 0.42))\",\r\n\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"14rem\",\r\n      height: \"3rem\",\r\n      fontSize: \"1rem\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n/// Component  ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n/// Custom Style  ///\r\nimport {\r\n  useStyles,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/listScreen\";\r\n\r\n///  REDUX  ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteUser, listUsers } from \"../redux/actions/userAction\";\r\n\r\nconst UserListScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  ///  USER INFO REDUCER ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  USER LIST REDUCER  ///\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  ///  USER DELETE REDUCER  ///\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers(API));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, API]);\r\n\r\n  // delete user\r\n  const handleUserDelete = (userId) => {\r\n    if (window.confirm(\"Are you sure to delete this user??\")) {\r\n      dispatch(deleteUser(API, userId));\r\n    }\r\n  };\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in User List Screen / */}\r\n      <Meta title=\"eShop Admin: User List\" />\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Admin\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Users\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      <h1 className={classes.heading}>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Paper elevation={20}>\r\n            <TableContainer className={classes.tableContainer}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell className={classes.tableHead} align=\"left\">\r\n                      ID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      Name\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      Email\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      Admin\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      align=\"right\"\r\n                    ></StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {users &&\r\n                    users\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((user) => (\r\n                        <StyledTableRow key={user._id}>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {user._id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {user.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {user.email}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {user.isAdmin ? (\r\n                              <CheckIcon className={classes.check} />\r\n                            ) : (\r\n                              <CloseIcon\r\n                                color=\"error\"\r\n                                className={classes.cross}\r\n                              />\r\n                            )}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"right\">\r\n                            {/* Edit user detail */}\r\n                            <Link to={`/admin/user/${user._id}/edit`}>\r\n                              <Tooltip title=\"Edit\">\r\n                                <IconButton aria-label=\"edit\">\r\n                                  <EditIcon color=\"inherit\" />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </Link>\r\n\r\n                            {/* Delete user detail */}\r\n                            <Tooltip title=\"Delete\">\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() => handleUserDelete(user._id)}\r\n                              >\r\n                                <DeleteIcon color=\"error\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {users && (\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={users.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={(event, newPage) => setPage(newPage)}\r\n                onChangeRowsPerPage={(event) => {\r\n                  setRowsPerPage(parseInt(event.target.value, 10));\r\n                  setPage(0);\r\n                }}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///    MATERIAL UI    ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Grid } from \"@material-ui/core\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n///      MATERIAL UI ICONS     ///\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n\r\n///   COMPONENT  ///\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n///     REDUX     ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getUserDetails, updateUser } from \"../redux/actions/userAction\";\r\nimport { USER_UPDATE_RESET } from \"../redux/actionTypes/userConstants\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst UserEditScreen = ({ history, match, API }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  ///  USER LOGIN REDUCER  ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  USER DETAILS REDUCER (by id) ///\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  ///  USER UPDATE REDUCER (by id) ///\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  ///  get user details  ///\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getUserDetails(API, userId));\r\n    }\r\n  }, [dispatch, API, userId, userInfo, history]);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, userInfo, user, history, successUpdate]);\r\n\r\n  ///   GO BACK    ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  ///  update user details  ///\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      updateUser(API, userId, { name: name, email: email, isAdmin: isAdmin })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Login Screen / */}\r\n      <Meta title=\"eShop Admin: User Edit\" />\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n            <Link to=\"/admin/userlist\">Users</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Grid container spacing={0}>\r\n        <Grid item md={1}>\r\n          {/* GO BACK */}\r\n          <Button onClick={goBack} className=\"btn btn-light mt-1\">\r\n            Go Back\r\n          </Button>\r\n        </Grid>\r\n        <Grid item md={11}>\r\n          <Paper elevation={14} className={classes.paperUserEdit}>\r\n            {/* <div onClick={goBack}>\r\n          <ArrowBackIosIcon className={classes.back} />\r\n        </div> */}\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n            <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n              Edit User\r\n            </Typography>\r\n\r\n            {/* ///    LOADER    /// */}\r\n            {loading && <Loader />}\r\n            {loadingUpdate && <Loader />}\r\n\r\n            <form className={classes.form}>\r\n              <FormControl variant=\"outlined\" className={classes.input}>\r\n                <InputLabel htmlFor=\"outlined-adornment-name\">Name</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-name\"\r\n                  placeholder=\"Your Name\"\r\n                  required\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <PeopleIcon className={classes.icon} />\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={45}\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControl variant=\"outlined\" className={classes.input}>\r\n                <InputLabel htmlFor=\"outlined-adornment-email\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-email\"\r\n                  placeholder=\"Email Address\"\r\n                  required\r\n                  type=\"text\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                      <EmailIcon className={classes.icon} />\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={40}\r\n                />\r\n              </FormControl>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={isAdmin}\r\n                    onChange={() => setIsAdmin(!isAdmin)}\r\n                    name=\"Is Admin\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Is Admin\"\r\n              />\r\n\r\n              {/* ///     VALIDATION ERROR MESSAGE     /// */}\r\n              {error && <Message varient=\"error\">{error}</Message>}\r\n              {errorUpdate && <Message varient=\"error\">{errorUpdate}</Message>}\r\n\r\n              {/* ///     SUCCESS MESSAGE     /// */}\r\n              {successUpdate && (\r\n                <Message varient=\"success\">\r\n                  User Details Editted Successfully\r\n                </Message>\r\n              )}\r\n              <ButtonMui\r\n                className={classes.button}\r\n                onClick={submitHandler}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                UPDATE\r\n              </ButtonMui>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\n/// Component  ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n/// Custom Style  ///\r\nimport {\r\n  useStyles,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/listScreen\";\r\n\r\n///  REDUX  ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../redux/actions/productListAction\";\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n} from \"../redux/actions/productDetailsAction\";\r\nimport { PRODUCT_CREATE_RESET } from \"../redux/actionTypes/productDetailsConstants\";\r\n\r\nconst UserListScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  ///  USER INFO REDUCER ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  PRODUCT LIST REDUCER  ///\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  ///  PRODUCT DELETE REDUCER  ///\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { success: successDelete } = productDelete;\r\n\r\n  ///  PRODUCT CREATE REDUCER  ///\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    error: errorCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listProducts(\"\", API));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, history, successDelete, successCreate, API]);\r\n\r\n  // push to edit screen on creating sample product\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n    if (successCreate) {\r\n      history.push(\r\n        `/admin/product/${createdProduct.category}/${createdProduct._id}/edit`\r\n      );\r\n    }\r\n  }, [dispatch, history, successCreate, createdProduct]);\r\n\r\n  // delete product\r\n  const handleDeleteProduct = (category, productId) => {\r\n    if (window.confirm(\"Are you sure to delete this product??\")) {\r\n      dispatch(deleteProduct(API, category, productId));\r\n    }\r\n  };\r\n\r\n  // create product\r\n  const handleCreateProduct = () => {\r\n    dispatch(createProduct(API));\r\n  };\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Admin ProductList Screen / */}\r\n      <Meta title=\"eShop Admin: Product List\" />\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Admin\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Products\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      <Grid container>\r\n        <Grid item md={9}>\r\n          <h1 className={classes.heading}>Products</h1>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Button\r\n            onClick={handleCreateProduct}\r\n            className={classes.createProductButton}\r\n          >\r\n            <AddIcon /> Create Product\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* LOADING OR ERROR VALIDATION FOR SAMPLE PRODUCT CREATE */}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Paper elevation={20}>\r\n            <TableContainer className={classes.tableContainer}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell className={classes.tableHead} align=\"left\">\r\n                      ID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      NAME\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      PRICE\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      CATEGORY\r\n                    </StyledTableCell>\r\n                    <StyledTableCell style={{ fontSize: \"1rem\" }} align=\"right\">\r\n                      BRAND\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ fontSize: \"1rem\" }}\r\n                      align=\"right\"\r\n                    ></StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {products &&\r\n                    products\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((product) => (\r\n                        <StyledTableRow key={product._id}>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {product._id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.name}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.price}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.category}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {product.brand}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"right\">\r\n                            {/* Edit product detail */}\r\n                            <Link\r\n                              to={`/admin/product/${product.category}/${product._id}/edit`}\r\n                            >\r\n                              <Tooltip title=\"Edit\">\r\n                                <IconButton aria-label=\"edit\">\r\n                                  <EditIcon color=\"inherit\" />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </Link>\r\n\r\n                            {/* Delete product detail */}\r\n                            <Tooltip title=\"Delete\">\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() =>\r\n                                  handleDeleteProduct(\r\n                                    product.category,\r\n                                    product._id\r\n                                  )\r\n                                }\r\n                              >\r\n                                <DeleteIcon color=\"error\" />\r\n                              </IconButton>\r\n                            </Tooltip>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {products && (\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={products.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={(event, newPage) => setPage(newPage)}\r\n                onChangeRowsPerPage={(event) => {\r\n                  setRowsPerPage(parseInt(event.target.value, 10));\r\n                  setPage(0);\r\n                }}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyB5luaGCZN03Xsou9GCyZaUjRULhTQbRH0\",\r\n  authDomain: \"eshop--ecommerce.firebaseapp.com\",\r\n  projectId: \"eshop--ecommerce\",\r\n  storageBucket: \"eshop--ecommerce.appspot.com\",\r\n  messagingSenderId: \"720427442520\",\r\n  appId: \"1:720427442520:web:5cb7718ca9c7dc0c74052d\",\r\n  measurementId: \"G-JZG7JSR14G\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\n\r\nexport { firebase, storage };\r\n","import { storage, firebase } from \"./firebase.config\";\r\nimport imageCompression from \"browser-image-compression\";\r\n\r\nexport const firebaseStorage = async (\r\n  file,\r\n  category,\r\n  setUploading,\r\n  setImage\r\n) => {\r\n  const fileType = file.type;\r\n  const fileName = file.name;\r\n\r\n  // if file type is image\r\n  if (fileType.includes(\"image\")) {\r\n    //  Compress image  //\r\n    const options = {\r\n      maxSizeMB: 1,\r\n      maxWidthOrHeight: 600,\r\n      useWebWorker: true,\r\n    };\r\n    const compressedFile = await imageCompression(file, options); // compressed image\r\n\r\n    const storageRef = storage.ref();\r\n\r\n    // Upload file and metadata to the object 'images/category/image.jpeg'\r\n    const metaData = {\r\n      type: \"image/jpeg\",\r\n    };\r\n    var uploadTask = storageRef\r\n      .child(`images/${category}/` + fileName)\r\n      .put(compressedFile, metaData);\r\n\r\n    setUploading(true);\r\n\r\n    // Listen for state changes, errors, and completion of the upload.\r\n    uploadTask.on(\r\n      firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n      (snapshot) => {\r\n        setUploading(true);\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(\"Upload is \" + progress + \"% done\");\r\n        switch (snapshot.state) {\r\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n            console.log(\"Upload is paused\");\r\n            break;\r\n          case firebase.storage.TaskState.RUNNING: // or 'running'\r\n            console.log(\"Upload is running\");\r\n            break;\r\n        }\r\n      },\r\n      (error) => {\r\n        setUploading(false);\r\n\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n        switch (error.code) {\r\n          case \"storage/unauthorized\":\r\n            // User doesn't have permission to access the object\r\n            alert(error);\r\n            break;\r\n\r\n          case \"storage/canceled\":\r\n            // User canceled the upload\r\n            alert(error);\r\n            break;\r\n\r\n          case \"storage/unknown\":\r\n            // Unknown error occurred, inspect error.serverResponse\r\n            alert(error);\r\n            break;\r\n        }\r\n      },\r\n      () => {\r\n        // Upload completed successfully, now we can get the download URL\r\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n          console.log(\"File available at\", downloadURL);\r\n          setImage(downloadURL);\r\n          setUploading(false);\r\n        });\r\n      }\r\n    );\r\n  } else {\r\n    alert(`Cannot upload file of type ${fileType}`);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n///   FILE UPLOAD   ///\r\nimport { multerStorage } from \"../imageUpload/multerStorage\";\r\nimport { firebaseStorage } from \"../imageUpload/firebaseStorage\";\r\n\r\n///    MATERIAL UI    ///\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\n\r\n///      MATERIAL UI ICONS     ///\r\nimport AttachMoney from \"@material-ui/icons/AttachMoney\";\r\nimport Description from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport ShopIcon from \"@material-ui/icons/Shop\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport LocalMall from \"@material-ui/icons/LocalMall\";\r\n\r\n///     REDUX     ///\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../redux/actions/productDetailsAction\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../redux/actionTypes/productDetailsConstants\";\r\n\r\n///  COMPONENT  ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n///     CUSTOM STYLE    ///\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst ProductEditScreen = ({ history, match, API }) => {\r\n  const classes = useStyle();\r\n  const UPLOAD_TYPE = process.env.REACT_APP_UPLOAD_TYPE;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  ///  USER LOGIN REDUCER  ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  PRODUCT DETAILS REDUCER (by id) ///\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product } = productDetails;\r\n\r\n  ///  UPDATE PRODUCT DETAILS REDUCER (by id) ///\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n  } = productUpdate;\r\n\r\n  const productId = match.params.id;\r\n  const productCategory = match.params.category;\r\n\r\n  ///  get product details and reset update details and push to productScreen on successUpdate  ///\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      dispatch(listProductDetails(API, productCategory, productId));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    API,\r\n    userInfo,\r\n    productId,\r\n    productCategory,\r\n    history,\r\n    successUpdate,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (product || !product.image) {\r\n      setName(product.name);\r\n      setCategory(product.category);\r\n      setBrand(product.brand);\r\n      setPrice(product.price);\r\n      setDescription(product.description);\r\n      setImage(product.image);\r\n      setCountInStock(product.countInStock);\r\n    }\r\n  }, [product]);\r\n\r\n  ///   GO BACK    ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  ///  update product details  ///\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      updateProduct(API, productCategory, {\r\n        _id: product._id,\r\n        name: name,\r\n        category: category,\r\n        brand: brand,\r\n        price: price,\r\n        image: image,\r\n        countInStock: countInStock,\r\n        description: description,\r\n      })\r\n    );\r\n  };\r\n\r\n  ///  handle upload image  ///\r\n  const handleUploadImage = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    // Upload images locally\r\n    if (UPLOAD_TYPE === \"multer\") {\r\n      await multerStorage(API, file, setUploading, setImage);\r\n    }\r\n    // upload images in firebase storage\r\n    else if (UPLOAD_TYPE === \"firebase\") {\r\n      await firebaseStorage(file, category, setUploading, setImage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in Admin Productedit Screen / */}\r\n      <Meta title=\"eShop Admin: Product Edit\" />\r\n      {/* BREADCRUMB */}\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\" aria-current=\"page\">\r\n            <Link to=\"/admin/productlist\">Products</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <Grid container spacing={2}>\r\n        <Grid item md={1}>\r\n          {/* GO BACK */}\r\n          <Button onClick={goBack} className=\"btn btn-light mt-1\">\r\n            Go Back\r\n          </Button>\r\n        </Grid>\r\n        <Grid item md={11}>\r\n          <Paper elevation={14} className={classes.paperProductEdit}>\r\n            <Avatar className={classes.avatar}>\r\n              <ShoppingBasketIcon />\r\n            </Avatar>\r\n            <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n              Edit Product\r\n            </Typography>\r\n            <br />\r\n\r\n            {/* ///    LOADER    /// */}\r\n            {loading && <Loader />}\r\n            {loadingUpdate && <Loader />}\r\n\r\n            <Grid container spacing={10} direction=\"row\" justify=\"space-evenly\">\r\n              <Grid item md={6} xs={12}>\r\n                {/* Product Name */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-name\">\r\n                    Name\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-name\"\r\n                    placeholder=\"Enter Name\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <ShopIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={56}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Category */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-category\">\r\n                    Category\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-category\"\r\n                    placeholder=\"Enter Category\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <LocalMall className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={84}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Brand */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Brand\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-brand\"\r\n                    placeholder=\"Enter Brand\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={brand}\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <BusinessIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={54}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Price */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Price\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-price\"\r\n                    placeholder=\"Enter Price\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <AttachMoney className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={50}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={6} xs={12}>\r\n                {/* Product image */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Image\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-image\"\r\n                    placeholder=\"Enter Image url\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={image}\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <ImageIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={60}\r\n                  />\r\n                  {/* UPLOAD IMAGE */}\r\n                  <input\r\n                    id=\"upload-image\"\r\n                    name=\"upload-image\"\r\n                    className={classes.uploadButton}\r\n                    type=\"file\"\r\n                    onChange={handleUploadImage}\r\n                  />\r\n                  {uploading && <Loader />}\r\n                </FormControl>\r\n\r\n                {/* Product CountInStock */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-countInStock\">\r\n                    Count In Stock\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-countInStock\"\r\n                    placeholder=\"Enter Count In Stock\"\r\n                    required\r\n                    type=\"text\"\r\n                    value={countInStock}\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <ShoppingCartIcon className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={132}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* Product Description */}\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  className={classes.inputProduct}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-brand\">\r\n                    Description\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-description\"\r\n                    placeholder=\"Enter Description\"\r\n                    required\r\n                    multiline\r\n                    rows={4}\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <Description className={classes.icon} />\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={106}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              {successUpdate && <Message>updated Successfully</Message>}\r\n              {errorUpdate && <Message>{errorUpdate}</Message>}\r\n              <ButtonMui\r\n                className={classes.buttonProduct}\r\n                onClick={submitHandler}\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                UPDATE\r\n              </ButtonMui>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n/// Component  ///\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n/// Custom Style  ///\r\nimport {\r\n  useStyles,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/listScreen\";\r\n\r\n///  REDUX  ///\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listAllOrders } from \"../redux/actions/orderAction\";\r\n\r\nconst OrderListScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  ///  USER INFO REDUCER ///\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  ///  ALL ORDERS REDUCER  ///\r\n  const allOrders = useSelector((state) => state.allOrders);\r\n  const { loading, error, orders } = allOrders;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listAllOrders(API));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, API]);\r\n\r\n  ///     GO BACK      ///\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* /// add custom title in dmin OrderList Screen / */}\r\n      <Meta title=\"eShop Admin: Order List\" />\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Admin\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            ORDERS\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      <h1 className={classes.heading}>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Paper elevation={20}>\r\n            <TableContainer className={classes.tableContainer}>\r\n              <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell className={classes.tableHead} align=\"left\">\r\n                      ID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      AMOUNT\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      USER\r\n                    </StyledTableCell>\r\n                    {/* <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      ADDRESS\r\n                    </StyledTableCell> */}\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      DATE\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      PAYMENT METHOD\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      PAID\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    >\r\n                      DELIVERED\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      className={classes.tableHead}\r\n                      align=\"right\"\r\n                    ></StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders &&\r\n                    orders\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((order) => (\r\n                        <StyledTableRow key={order._id}>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            {order._id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            component=\"th\"\r\n                            scope=\"row\"\r\n                          >\r\n                            ${order.totalPrice}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.user && order.user.name.split(\" \")[0]}\r\n                          </StyledTableCell>\r\n                          {/* <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.shippingAddress.city},{\" \"}\r\n                            {order.shippingAddress.postalCode},{\" \"}\r\n                            {order.shippingAddress.country}\r\n                          </StyledTableCell> */}\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.createdAt.substring(0, 10)}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.paymentMethod}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.isPaid ? (\r\n                              <>\r\n                                <CheckIcon className={classes.check} />\r\n                                {order.paidAt.substring(0, 10)}\r\n                              </>\r\n                            ) : (\r\n                              <CloseIcon\r\n                                color=\"error\"\r\n                                className={classes.cross}\r\n                              />\r\n                            )}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell\r\n                            className={classes.tableCol}\r\n                            align=\"right\"\r\n                          >\r\n                            {order.isDelivered ? (\r\n                              <>\r\n                                <CheckIcon className={classes.check} />\r\n                                {order.deliveredAt.substring(0, 10)}\r\n                              </>\r\n                            ) : (\r\n                              <CloseIcon\r\n                                color=\"error\"\r\n                                className={classes.cross}\r\n                              />\r\n                            )}{\" \"}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"right\">\r\n                            {/*Order details (redirect to order screen and can marked as delivered) */}\r\n                            <Link to={`/orders/${order._id}`}>\r\n                              <Button color=\"primary\">Details</Button>\r\n                            </Link>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {orders && (\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={orders.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={(event, newPage) => setPage(newPage)}\r\n                onChangeRowsPerPage={(event) => {\r\n                  setRowsPerPage(parseInt(event.target.value, 10));\r\n                  setPage(0);\r\n                }}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./screen/HomeScreen\";\r\nimport ProductScreen from \"./screen/ProductScreen\";\r\nimport CartScreen from \"./screen/CartScreen\";\r\nimport LoginScreen from \"./screen/LoginScreen\";\r\nimport RegisterScreen from \"./screen/RegisterScreen\";\r\nimport ProfileScreen from \"./screen/ProfileScreen\";\r\nimport ShippingScreen from \"./screen/ShippingScreen\";\r\nimport PaymentMethod from \"./screen/PaymentMethod\";\r\nimport PlaceOrderScreen from \"./screen/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screen/OrderScreen\";\r\n// for admin user\r\nimport UserListScreen from \"./screen/UserListScreen\";\r\nimport UserEditScreen from \"./screen/UserEditScreen\";\r\nimport ProductListScreen from \"./screen/ProductListScreen\";\r\nimport ProductEditScreen from \"./screen/ProductEditScreen\";\r\nimport OrderListScreen from \"./screen/OrderListScreen\";\r\n\r\n///  STYLE   ///\r\nimport \"./styles/styles.css\";\r\n\r\n//REDUX\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userLogout, checkUserAuthToken } from \"./redux/actions/userAction\";\r\nimport { USER_CHECK_TOKEN_RESET } from \"./redux/actionTypes/userConstants\";\r\n\r\nfunction App() {\r\n  // MOBILE BREAKPOINT\r\n  const isMobile = window.innerWidth <= 768;\r\n  const API = process.env.REACT_APP_API;\r\n\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { error } = useSelector((state) => state.userAuthToken);\r\n\r\n  // verify if auth token expired or not\r\n  useEffect(() => {\r\n    dispatch(checkUserAuthToken(API));\r\n  }, [API, dispatch, userInfo]);\r\n\r\n  // if jwt token expired then logged out\r\n  useEffect(() => {\r\n    if (userInfo && error === \"jwt expired\") {\r\n      alert(\"Logged out!! Again login to do shopping!!\");\r\n      dispatch(userLogout());\r\n      dispatch({ type: USER_CHECK_TOKEN_RESET });\r\n    }\r\n  }, [dispatch, userInfo, error]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"body\">\r\n        <Header isMobile={isMobile} />\r\n        <main className=\"screens\">\r\n          <Route\r\n            path=\"/search\"\r\n            render={({ location, history }) => (\r\n              <Home\r\n                location={location}\r\n                API={API}\r\n                isMobile={isMobile}\r\n                history={history}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            render={({ location }) => (\r\n              <Home location={location} API={API} isMobile={isMobile} />\r\n            )}\r\n            exact\r\n          />\r\n          <div className={!isMobile ? \"mx-5 px-4 py-4\" : \"mx-3 px-3 py-4\"}>\r\n            <Route\r\n              path=\"/placeorder\"\r\n              render={({ history }) => (\r\n                <PlaceOrderScreen\r\n                  history={history}\r\n                  API={API}\r\n                  isMobile={isMobile}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/orders/:id\"\r\n              render={({ history, match }) => (\r\n                <OrderScreen\r\n                  match={match}\r\n                  history={history}\r\n                  API={API}\r\n                  isMobile={isMobile}\r\n                />\r\n              )}\r\n            />\r\n            <Route path=\"/shipping\" component={ShippingScreen} />\r\n            <Route path=\"/paymentMethod\" component={PaymentMethod} />\r\n            <Route\r\n              path=\"/login\"\r\n              render={({ location, history }) => (\r\n                <LoginScreen location={location} history={history} API={API} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/register\"\r\n              render={({ location, history }) => (\r\n                <RegisterScreen\r\n                  location={location}\r\n                  history={history}\r\n                  API={API}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/profile\"\r\n              render={({ history }) => (\r\n                <ProfileScreen history={history} API={API} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/products/:category/:id\"\r\n              render={({ history, match }) => (\r\n                <ProductScreen\r\n                  history={history}\r\n                  API={API}\r\n                  match={match}\r\n                  isMobile={isMobile}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/cart/:category?/:id?\"\r\n              component={({ history, match, location }) => (\r\n                <CartScreen\r\n                  history={history}\r\n                  match={match}\r\n                  isMobile={isMobile}\r\n                  API={API}\r\n                  location={location}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/userlist\"\r\n              component={({ history }) => (\r\n                <UserListScreen history={history} API={API} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/admin/user/:id/edit\"\r\n              component={({ history, match }) => (\r\n                <UserEditScreen history={history} match={match} API={API} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/productlist\"\r\n              component={({ history }) => (\r\n                <ProductListScreen history={history} API={API} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/product/:category/:id/edit\"\r\n              component={({ history, match }) => (\r\n                <ProductEditScreen history={history} match={match} API={API} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/orderlist\"\r\n              component={({ history }) => (\r\n                <OrderListScreen history={history} API={API} />\r\n              )}\r\n            />\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nimport \"./bootstrap.min.css\";\r\n\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}