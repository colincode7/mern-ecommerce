[{"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\index.js":"1","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\reportWebVitals.js":"2","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\App.js":"3","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\store.js":"4","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Footer.js":"5","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Header.js":"6","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\HomeScreen.js":"7","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ShippingScreen.js":"8","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProductScreen.js":"9","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\LoginScreen.js":"10","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\RegisterScreen.js":"11","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PaymentMethod.js":"12","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\CartScreen.js":"13","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PlaceOrderScreen.js":"14","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProfileScreen.js":"15","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\OrderScreen.js":"16","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\cart.js":"17","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productLists.js":"18","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productDetails.js":"19","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\user.js":"20","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\order.js":"21","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\ErrMessage.js":"22","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Loader.js":"23","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Products.js":"24","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CheckoutStepper.js":"25","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\header.js":"26","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productListAction.js":"27","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\userAction.js":"28","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\cartAction.js":"29","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\orderAction.js":"30","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\PlaceOrderScreen.js":"31","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\ProfileScreen.js":"32","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\orderConstants.js":"33","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\userConstants.js":"34","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productListConstants.js":"35","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productDetailsConstants.js":"36","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\cartConstants.js":"37","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Rating.js":"38","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepIcon.js":"39","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepConnector.js":"40","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\allFormsScreen.js":"41","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productDetailsAction.js":"42"},{"size":627,"mtime":1608645620000,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1606722012000,"results":"45","hashOfConfig":"44"},{"size":1580,"mtime":1612031501116,"results":"46","hashOfConfig":"44"},{"size":1953,"mtime":1612031501122,"results":"47","hashOfConfig":"44"},{"size":506,"mtime":1607670676000,"results":"48","hashOfConfig":"44"},{"size":7471,"mtime":1609181078000,"results":"49","hashOfConfig":"44"},{"size":5280,"mtime":1608645620000,"results":"50","hashOfConfig":"44"},{"size":5823,"mtime":1609181078000,"results":"51","hashOfConfig":"44"},{"size":5638,"mtime":1609088202000,"results":"52","hashOfConfig":"44"},{"size":6000,"mtime":1609181078000,"results":"53","hashOfConfig":"44"},{"size":8102,"mtime":1609181078000,"results":"54","hashOfConfig":"44"},{"size":3527,"mtime":1609268542000,"results":"55","hashOfConfig":"44"},{"size":8795,"mtime":1608906540000,"results":"56","hashOfConfig":"44"},{"size":11311,"mtime":1612031501139,"results":"57","hashOfConfig":"44"},{"size":9939,"mtime":1612031501140,"results":"58","hashOfConfig":"44"},{"size":13010,"mtime":1612031520606,"results":"59","hashOfConfig":"44"},{"size":1324,"mtime":1609181078000,"results":"60","hashOfConfig":"44"},{"size":657,"mtime":1608709918000,"results":"61","hashOfConfig":"44"},{"size":637,"mtime":1608709918000,"results":"62","hashOfConfig":"44"},{"size":3321,"mtime":1612031501121,"results":"63","hashOfConfig":"44"},{"size":2582,"mtime":1612031501120,"results":"64","hashOfConfig":"44"},{"size":255,"mtime":1608906540000,"results":"65","hashOfConfig":"44"},{"size":418,"mtime":1608645620000,"results":"66","hashOfConfig":"44"},{"size":1354,"mtime":1612071816514,"results":"67","hashOfConfig":"44"},{"size":1212,"mtime":1609181078000,"results":"68","hashOfConfig":"44"},{"size":2505,"mtime":1609088320000,"results":"69","hashOfConfig":"44"},{"size":962,"mtime":1608645620000,"results":"70","hashOfConfig":"44"},{"size":5474,"mtime":1612031501119,"results":"71","hashOfConfig":"44"},{"size":1988,"mtime":1609181078000,"results":"72","hashOfConfig":"44"},{"size":4551,"mtime":1612031520569,"results":"73","hashOfConfig":"44"},{"size":1101,"mtime":1612031520607,"results":"74","hashOfConfig":"44"},{"size":2068,"mtime":1612031501142,"results":"75","hashOfConfig":"44"},{"size":893,"mtime":1612031501116,"results":"76","hashOfConfig":"44"},{"size":940,"mtime":1612031501117,"results":"77","hashOfConfig":"44"},{"size":181,"mtime":1608645620000,"results":"78","hashOfConfig":"44"},{"size":199,"mtime":1608645620000,"results":"79","hashOfConfig":"44"},{"size":244,"mtime":1609181078000,"results":"80","hashOfConfig":"44"},{"size":1855,"mtime":1607758504000,"results":"81","hashOfConfig":"44"},{"size":1513,"mtime":1609181078000,"results":"82","hashOfConfig":"44"},{"size":672,"mtime":1609181078000,"results":"83","hashOfConfig":"44"},{"size":2079,"mtime":1609181078000,"results":"84","hashOfConfig":"44"},{"size":1017,"mtime":1608645620000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"18mc93y",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\index.js",[],["179","180"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\reportWebVitals.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\App.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\store.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Footer.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Header.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\HomeScreen.js",["181","182","183","184","185"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Products\";\r\n\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\r\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../redux/actions/productListAction\";\r\n\r\nimport Loader from \"../components/Loader\";\r\nimport ErrMess from \"../components/ErrMessage\";\r\n\r\nimport \"../styles/Screen/HomeScreen.css\";\r\n\r\nexport default function Home() {\r\n  ///////////////////////      options for CAROUSAL     ///////////////////////\r\n\r\n  const options = {\r\n    loop: false,\r\n    margin: 10,\r\n    nav: true,\r\n    navText: [\r\n      \"<i class='fa fa-2x fa-angle-left'></i>\",\r\n      \"<i class='fa fa-2x fa-angle-right'></i>\",\r\n    ],\r\n    responsive: {\r\n      0: {\r\n        items: 0,\r\n      },\r\n      480: {\r\n        items: 1,\r\n      },\r\n      768: {\r\n        items: 3,\r\n      },\r\n      1000: {\r\n        items: 4,\r\n      },\r\n    },\r\n  };\r\n\r\n  //////////////////     fetching datas of productList from redux state   ////////////////////////\r\n\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {/*//////////////////////////       CAROUSAL      /////////////////////////////////////// */}\r\n\r\n      {/* /////////////////    BUG: Render carusal before children ////////// */}\r\n      {/*//////////////////    SOLUTION: ADD key to OwlCarousal  */}\r\n\r\n      {/* ELECTRONICS */}\r\n      <h1 className=\"pt-5\"> Electronics Accessories </h1>\r\n\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n        ) : (\r\n          products && (\r\n            <OwlCarousel\r\n              key={products.length}\r\n              className=\"owl-theme\"\r\n              {...options}\r\n            >\r\n              {products\r\n                .filter((p) => p.category == \"electronics\")\r\n                .map((electronic, index) => (\r\n                  <Col key={index}>\r\n                    <Product product={electronic} />\r\n                  </Col>\r\n                ))}\r\n            </OwlCarousel>\r\n          )\r\n        )}\r\n      </Row>\r\n\r\n      {/* HOME APPLIANCES */}\r\n      <h1 className=\"pt-5\">Home Appliances</h1>\r\n\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n        ) : (\r\n          products && (\r\n            <OwlCarousel\r\n              key={products.length}\r\n              className=\"owl-theme\"\r\n              {...options}\r\n            >\r\n              {products\r\n                .filter((p) => p.category == \"home_appliances\")\r\n                .map((home_appliance, index) => (\r\n                  <Col key={index}>\r\n                    <Product product={home_appliance} />\r\n                  </Col>\r\n                ))}\r\n            </OwlCarousel>\r\n          )\r\n        )}\r\n      </Row>\r\n\r\n      {/* MENS'S ACCESSORIES */}\r\n      <h1 className=\"pt-5\">Men's Accessories</h1>\r\n\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n        ) : (\r\n          products && (\r\n            <OwlCarousel\r\n              key={products.length}\r\n              className=\"owl-theme\"\r\n              {...options}\r\n            >\r\n              {products\r\n                .filter((p) => p.category == \"mens_accessories\")\r\n                .map((mens_accessory, index) => (\r\n                  <Col key={index}>\r\n                    <Product product={mens_accessory} />\r\n                  </Col>\r\n                ))}\r\n            </OwlCarousel>\r\n          )\r\n        )}\r\n      </Row>\r\n\r\n      {/* WOMEN'S ACCESSORIES */}\r\n      <h1 className=\"pt-5\">Women's Accessories</h1>\r\n\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n        ) : (\r\n          products && (\r\n            <OwlCarousel\r\n              key={products.length}\r\n              className=\"owl-theme\"\r\n              {...options}\r\n            >\r\n              {products\r\n                .filter((p) => p.category == \"womens_accessories\")\r\n                .map((womens_accessory, index) => (\r\n                  <Col key={index}>\r\n                    <Product product={womens_accessory} />\r\n                  </Col>\r\n                ))}\r\n            </OwlCarousel>\r\n          )\r\n        )}\r\n      </Row>\r\n\r\n      {/*//////////////////////////       CAROUSAL ENDS      /////////////////////////////////////// */}\r\n\r\n      {/* ALL PRODUCTS */}\r\n      <h1 className=\"pt-5\">Latest Products</h1>\r\n\r\n      <Row>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <ErrMess varient=\"#FC308B\">{error}</ErrMess>\r\n        ) : (\r\n          products.map((product, index) => (\r\n            <Col md={4} lg={3} key={index}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ShippingScreen.js",["186"],"import React, { useEffect, useState } from \"react\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport FiberPinIcon from \"@material-ui/icons/FiberPin\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addShippingAddress } from \"../redux/actions/cartAction\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const classes = useStyle();\r\n\r\n  ////////////////////     REDUX  REDUCER   ////////////////////\r\n  const shippingAdd = useSelector((state) => state.cart);\r\n  const { shippingAddress } = shippingAdd;\r\n\r\n  ////////////////////    SHIPPING ADDRESS STATE (DEFAULT: FROM LOCAL STORAGE)    ////////////////////////\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    //DISPATCH SHIPPING ADDRESS\r\n    dispatch(addShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutStepper step={1} />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LocalShippingIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Shipping Address\r\n        </Typography>\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-address\">\r\n              Address\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-address\"\r\n              placeholder=\"Your Address\"\r\n              required\r\n              type=\"text\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LocationOnIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={60}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-city\">City</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-city\"\r\n              placeholder=\"Your City\"\r\n              required\r\n              type=\"text\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LocationCityIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={30}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-postalCode\">\r\n              Postal Code\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-postalCode\"\r\n              placeholder=\"Postal Code\"\r\n              required\r\n              type=\"text\"\r\n              value={postalCode}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <FiberPinIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={90}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-confirmPassword\">\r\n              Country\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-country\"\r\n              placeholder=\"Your Country\"\r\n              required\r\n              type=\"text\"\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LanguageIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={58}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            CONTINUE\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProductScreen.js",["187","188","189","190"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n//////////////////    SCREEN        //////////////////////////\r\n\r\n//////////////////    COMPONENTS     //////////////////////////\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrMessage from \"../components/ErrMessage\";\r\n\r\n/////////////////     REDUX    ///////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../redux/actions/productDetailsAction\";\r\n\r\nimport \"../styles/Screen/ProductScreen.css\";\r\n\r\nexport default function ProductScreen({ history, match }) {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  //////////////////     fetching datas of productList from redux state   ////////////////////////\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.category, match.params.id));\r\n  }, [dispatch]);\r\n\r\n  //////////////////////    Redirect to Cart page      ///////////////////////\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(\r\n      `/cart/${match.params.category}/${match.params.id}?qty=${qty}`\r\n    );\r\n  };\r\n\r\n  /////////////////////    GO BACK      ////////////////////////\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <a href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">{product.category}</li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {product.name}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Button>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <ErrMessage varient=\"#FC308B\">{error}</ErrMessage>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image\r\n              className=\"shadow\"\r\n              src={product.image}\r\n              alt={product.name}\r\n              fluid\r\n            />\r\n          </Col>\r\n\r\n          <Col md={3}>\r\n            <ListGroup className=\"shadow\" varient=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3 className=\"font-weight-bold text-primary\">\r\n                  {product.name}\r\n                </h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <h5 className=\"font-weight-bold text-secondary\">Price:</h5>\r\n                </strong>\r\n                <span>{product.price}</span>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>\r\n                  <h5 className=\"font-weight-bold text-secondary\">\r\n                    Description:\r\n                  </h5>\r\n                </strong>\r\n                <p>{product.description}</p>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup varient=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price: </Col>\r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status: </Col>\r\n                    <Col>\r\n                      <strong>\r\n                        ${product.countInStock ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Quantity: </Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((q) => (\r\n                            <option key={q + 1} value={q + 1}>\r\n                              {q + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className={\r\n                      product.countInStock == 0\r\n                        ? \"btn-block p-3 disabled\"\r\n                        : \"btn-block p-3\"\r\n                    }\r\n                    onClick={addToCartHandler}\r\n                    type=\"button\"\r\n                    disabled={product.countInStock == 0}\r\n                  >\r\n                    ADD TO CART\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\LoginScreen.js",["191","192"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\nimport Message from \"../components/ErrMessage\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst LoginScreen = ({ history, location }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = login;\r\n\r\n  ///////////////////////    FOR SHIPPING PAGE REDIRECT OR HOME   //////////////////\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    //DISPATCH LOGIN\r\n    dispatch(loginUser(email, password));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {redirect == \"shipping\" ? <CheckoutStepper step={0} /> : null}\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <PeopleIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        {/*///////////////////////////////    LOADER    /////////////////////////////////////////*/}\r\n        {loading && <Loader />}\r\n\r\n        <form className={classes.form}>\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-email\"\r\n              placeholder=\"Email Address\"\r\n              required\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <EmailIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className={classes.input}>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              type={passwordVisibility ? \"text\" : \"password\"}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon className={classes.icon} />\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => setPasswordVisibility(!passwordVisibility)}\r\n                    onMouseDown={(e) => e.preventDefault()}\r\n                    edge=\"end\"\r\n                  >\r\n                    {passwordVisibility ? (\r\n                      <VisibilityIcon />\r\n                    ) : (\r\n                      <VisibilityOffIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n          </FormControl>\r\n\r\n          {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n          {error && <Message varient=\"error\">{error}</Message>}\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          <Grid container>\r\n            <Grid item>\r\n              <Typography component=\"h5\" className={classes.register}>\r\n                Haven't Registered yet? &nbsp;\r\n                <Link\r\n                  to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n                  variant=\"body2\"\r\n                >\r\n                  Register\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\RegisterScreen.js",["193","194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\n\r\n///////////////////////////////////////      MATERIAL UI ICONS     ///////////////////////////////\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../redux/actions/userAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nimport Message from \"../components/ErrMessage\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst RegisterScreen = ({ history, location }) => {\r\n  const classes = useStyle();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [passwordVisibility, setPasswordVisibility] = useState(false);\r\n  const [confirmPasswordVisibility, setConfirmPasswordVisibility] = useState(\r\n    false\r\n  );\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const register = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo, isAuthenticated } = register;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    //DISPATCH REGISTER\r\n    if (password == confirmPassword) {\r\n      dispatch(registerUser(name, email, password));\r\n    } else {\r\n      setMessage(\"Password does not match\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={14} className={classes.paper}>\r\n      <Avatar className={classes.avatar}>\r\n        <PeopleIcon />\r\n      </Avatar>\r\n      <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n        Sign Up\r\n      </Typography>\r\n\r\n      {/*///////////////////////////////    LOADER    /////////////////////////////////////////*/}\r\n      {loading && <Loader />}\r\n\r\n      <form className={classes.form}>\r\n        <FormControl variant=\"outlined\" className={classes.input}>\r\n          <InputLabel htmlFor=\"outlined-adornment-name\">Name</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-name\"\r\n            placeholder=\"Your Name\"\r\n            required\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <PeopleIcon className={classes.icon} />\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={45}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.input}>\r\n          <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-email\"\r\n            placeholder=\"Email Address\"\r\n            required\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <EmailIcon className={classes.icon} />\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={40}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.input}>\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">\r\n            Password\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            type={passwordVisibility ? \"text\" : \"password\"}\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <LockIcon className={classes.icon} />\r\n              </InputAdornment>\r\n            }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() => setPasswordVisibility(!passwordVisibility)}\r\n                  onMouseDown={(e) => e.preventDefault()}\r\n                  edge=\"end\"\r\n                >\r\n                  {passwordVisibility ? (\r\n                    <VisibilityIcon />\r\n                  ) : (\r\n                    <VisibilityOffIcon />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={70}\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.input}>\r\n          <InputLabel htmlFor=\"outlined-adornment-confirmPassword\">\r\n            Confirm Password\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n            type={confirmPasswordVisibility ? \"text\" : \"password\"}\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <LockIcon className={classes.icon} />\r\n              </InputAdornment>\r\n            }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={() =>\r\n                    setConfirmPasswordVisibility(!confirmPasswordVisibility)\r\n                  }\r\n                  onMouseDown={(e) => e.preventDefault()}\r\n                  edge=\"end\"\r\n                >\r\n                  {confirmPasswordVisibility ? (\r\n                    <VisibilityIcon />\r\n                  ) : (\r\n                    <VisibilityOffIcon />\r\n                  )}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={135}\r\n          />\r\n        </FormControl>\r\n\r\n        {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n\r\n        {error && <Message varient=\"error\">{error}</Message>}\r\n        {message && <Message varient=\"error\">{message}</Message>}\r\n\r\n        <Button\r\n          className={classes.button}\r\n          onClick={submitHandler}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Register\r\n        </Button>\r\n\r\n        <Grid container>\r\n          <Grid item>\r\n            <Typography component=\"h5\" className={classes.login}>\r\n              Already Registered? &nbsp;\r\n              <Link\r\n                to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n                variant=\"body2\"\r\n              >\r\n                Login\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PaymentMethod.js",["196"],"import React, { useState } from \"react\";\r\n\r\n/////////////////////////////////////////    MATERIAL UI    ////////////////////////////////\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\n\r\nimport CheckoutStepper from \"../components/CheckoutStepper\";\r\n\r\n////////////////////////////////////////     REDUX          /////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPaymentMethod } from \"../redux/actions/cartAction\";\r\n\r\n///////////////////////////////////////     CUSTOM STYLE    /////////////////////////////////////\r\nimport { useStyle } from \"./customStyle/allFormsScreen\";\r\n\r\nconst PaymentMethodScreen = ({ history }) => {\r\n  const classes = useStyle();\r\n\r\n  ////////////////////     REDUX  REDUCER of Shipping Address   ////////////////////\r\n  const shippingAdd = useSelector((state) => state.cart);\r\n  const { shippingAddress } = shippingAdd;\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    /////////////////////////      DISPATCH PAYMENT METHOD and push to /placeorder   ////////////////\r\n    dispatch(addPaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutStepper step={2} />\r\n      <Paper elevation={14} className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AccountBalanceIcon />\r\n        </Avatar>\r\n        <Typography className={classes.heading} component=\"h1\" variant=\"h5\">\r\n          Payment Method\r\n        </Typography>\r\n\r\n        <form className={classes.form}>\r\n          <FormControl component=\"fieldset\" className={classes.input}>\r\n            {/* <FormLabel className={classes.selectLabel} component=\"legend\">\r\n              Select Method\r\n            </FormLabel> */}\r\n            <RadioGroup\r\n              aria-label=\"payment method\"\r\n              name=\"payment method\"\r\n              value={paymentMethod}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"PayPal or Credit Card\"\r\n                control={<Radio required />}\r\n                label=\"PayPal or Credit Card\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Stripe\"\r\n                control={<Radio required />}\r\n                label=\"Stripe\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Cash On Delivery\"\r\n                control={<Radio required />}\r\n                label=\"Cash On Delivery\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <Button\r\n            className={classes.button}\r\n            onClick={submitHandler}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            CONTINUE\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentMethodScreen;\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\CartScreen.js",["197","198","199","200","201"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n//////////////////    COMPONENTS     //////////////////////////\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrMessage from \"../components/ErrMessage\";\r\n\r\n/////////////////     REDUX    ///////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../redux/actions/cartAction\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//////////////////   CSS style   //////////////////////////////\r\n\r\nimport \"../styles/Screen/CartScreen.css\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const category = match.params.category;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, category, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  ////////////////////      remove cart Handler    /////////////////////////\r\n\r\n  const removecartHandler = (productId) => {\r\n    console.log(productId);\r\n    dispatch(removeFromCart(productId));\r\n  };\r\n\r\n  ////////////////////      Checkout Process Handler    /////////////////////////\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n    console.log(\"CHECKOUT\");\r\n  };\r\n\r\n  ////////////////////     GO BACK      //////////////////////////////////\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*//////////////////////////   BREADCRUMB OF NAV  //////////////////////////*/}\r\n\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <a href=\"/\">Home</a>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            CART\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2\">\r\n        Go Back\r\n      </Button>\r\n      {/*///////////////////////////  CART WHOLE SECTION  /////////////////////////////*/}\r\n\r\n      <Row className=\"mt-4\">\r\n        {/*//////////////////////////   1. CART LEFT SECTION   //////////////////////////////*/}\r\n        <Col md={8}>\r\n          <h1 className=\"cart__name \">\r\n            YOUR CART ({cartItems.length})\r\n            <span className=\"cart__name__span\"> ITEM</span>\r\n          </h1>\r\n\r\n          <br />\r\n\r\n          {/*//////////////    CART == EMPTY -> ErrMess => Else => loop through cartItems   ////////////*/}\r\n\r\n          {cartItems.length == 0 ? (\r\n            <ErrMessage varient=\"info\">\r\n              <span className=\"cart__empty\">Your cart is empty </span>\r\n              <Link to=\"/\">Keep Shopping</Link>\r\n            </ErrMessage>\r\n          ) : (\r\n            <ListGroup varient=\"flush\" className=\"shadow-lg\">\r\n              <ListGroup.Item className=\"cart__left__heading\">\r\n                <Row>\r\n                  <Col sm={3}>\r\n                    <h3>Image</h3>\r\n                  </Col>\r\n                  <Col sm={3}>\r\n                    <h3>Name</h3>\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <h3>Price</h3>\r\n                  </Col>\r\n                  <Col sm={2}>\r\n                    <h3>Quantity</h3>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item key={item.product}>\r\n                  <Row>\r\n                    <Col sm={3}>\r\n                      <Image\r\n                        className=\"cart__left__item__image\"\r\n                        width=\"200\"\r\n                        src={item.image}\r\n                        alt={item.name}\r\n                        fluid\r\n                        rounded\r\n                      />\r\n                    </Col>\r\n                    <Col sm={3}>\r\n                      <Link\r\n                        className=\"cart__left__item__name\"\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        {item.name}\r\n                      </Link>\r\n                    </Col>\r\n                    <Col sm={2} className=\"cart__left__item__price\">\r\n                      ${item.price}\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        style={{ border: \"none\", outline: \"none\" }}\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            addToCart(\r\n                              item.product,\r\n                              item.category,\r\n                              Number(e.target.value)\r\n                            )\r\n                          )\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((q) => (\r\n                          <option key={q + 1} value={q + 1}>\r\n                            {q + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                      <Button\r\n                        className=\"cart__left__item__remove\"\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => removecartHandler(item.product)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n\r\n        {/*//////////////////////////   2. CART RIGHT SECTION    /////////////////////////////*/}\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup>\r\n              <ListGroup.Item className=\"pb-4\">\r\n                <Button\r\n                  className=\"btn-block p-2 cart__right__checkout\"\r\n                  disabled={cartItems.length == 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  PROCEED TO PAY\r\n                </Button>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <h4 className=\"cart__right__order__heading\">\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__subtotal\">Subtotal:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__subtotal--value\">\r\n                      ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__price\">Price:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__price--value\">\r\n                      $\r\n                      {cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__delivery\">Delivery:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__delivery--value\">Free</h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <h4 className=\"cart__right__total__price\">Total:</h4>\r\n                  </Col>\r\n                  <Col>\r\n                    <h5 className=\"cart__right__total__price--value\">\r\n                      $\r\n                      {cartItems\r\n                        .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                        .toFixed(2)}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PlaceOrderScreen.js",["202","203","204"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProfileScreen.js",["205","206"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\OrderScreen.js",["207","208","209","210","211","212"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\cart.js",["213","214"],"import {\r\n  CART_ITEM_ADD,\r\n  CART_ITEM_REMOVE,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"../actionTypes/cartConstants\";\r\n\r\n///////////////////////    CART ADD & REMOVE TO/FROM CART  ///////////////////\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {}, paymentMethod: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ITEM_ADD:\r\n      const { payload } = action;\r\n      // check if cartItems exist or not\r\n      const existItem = state.cartItems.find(\r\n        (p) => p.product == payload.product\r\n      );\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((p) =>\r\n            p.product == existItem.product ? payload : p\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, payload] };\r\n      }\r\n\r\n    case CART_ITEM_REMOVE:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((p) => p.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productLists.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productDetails.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\user.js",["215"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\order.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\ErrMessage.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Loader.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Products.js",["216"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CheckoutStepper.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\header.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productListAction.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\userAction.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\cartAction.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\orderAction.js",["217"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\PlaceOrderScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\ProfileScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\orderConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\userConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productListConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productDetailsConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\cartConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Rating.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepIcon.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepConnector.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\allFormsScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productDetailsAction.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":77,"column":43,"nodeType":"228","messageId":"229","endLine":77,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":104,"column":43,"nodeType":"228","messageId":"229","endLine":104,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":131,"column":43,"nodeType":"228","messageId":"229","endLine":131,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":158,"column":43,"nodeType":"228","messageId":"229","endLine":158,"endColumn":45},{"ruleId":"222","severity":1,"message":"230","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"231","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"233","line":37,"column":6,"nodeType":"234","endLine":37,"endColumn":16,"suggestions":"235"},{"ruleId":"226","severity":1,"message":"227","line":159,"column":44,"nodeType":"228","messageId":"229","endLine":159,"endColumn":46},{"ruleId":"226","severity":1,"message":"227","line":165,"column":52,"nodeType":"228","messageId":"229","endLine":165,"endColumn":54},{"ruleId":"222","severity":1,"message":"236","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":62,"column":17,"nodeType":"228","messageId":"229","endLine":62,"endColumn":19},{"ruleId":"222","severity":1,"message":"236","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":17},{"ruleId":"222","severity":1,"message":"237","line":48,"column":37,"nodeType":"224","messageId":"225","endLine":48,"endColumn":52},{"ruleId":"226","severity":1,"message":"227","line":62,"column":18,"nodeType":"228","messageId":"229","endLine":62,"endColumn":20},{"ruleId":"222","severity":1,"message":"238","line":10,"column":8,"nodeType":"224","messageId":"225","endLine":10,"endColumn":17},{"ruleId":"222","severity":1,"message":"239","line":13,"column":8,"nodeType":"224","messageId":"225","endLine":13,"endColumn":14},{"ruleId":"222","severity":1,"message":"240","line":14,"column":8,"nodeType":"224","messageId":"225","endLine":14,"endColumn":14},{"ruleId":"232","severity":1,"message":"241","line":39,"column":6,"nodeType":"234","endLine":39,"endColumn":32,"suggestions":"242"},{"ruleId":"226","severity":1,"message":"227","line":93,"column":29,"nodeType":"228","messageId":"229","endLine":93,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":186,"column":46,"nodeType":"228","messageId":"229","endLine":186,"endColumn":48},{"ruleId":"222","severity":1,"message":"243","line":61,"column":27,"nodeType":"224","messageId":"225","endLine":61,"endColumn":32},{"ruleId":"232","severity":1,"message":"244","line":83,"column":6,"nodeType":"234","endLine":83,"endColumn":24,"suggestions":"245"},{"ruleId":"226","severity":1,"message":"227","line":299,"column":46,"nodeType":"228","messageId":"229","endLine":299,"endColumn":48},{"ruleId":"232","severity":1,"message":"246","line":72,"column":6,"nodeType":"234","endLine":72,"endColumn":32,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":154,"column":15,"nodeType":"250","endLine":154,"endColumn":30},{"ruleId":"222","severity":1,"message":"251","line":29,"column":10,"nodeType":"224","messageId":"225","endLine":29,"endColumn":16},{"ruleId":"222","severity":1,"message":"252","line":37,"column":10,"nodeType":"224","messageId":"225","endLine":37,"endColumn":18},{"ruleId":"222","severity":1,"message":"253","line":37,"column":20,"nodeType":"224","messageId":"225","endLine":37,"endColumn":31},{"ruleId":"222","severity":1,"message":"254","line":52,"column":12,"nodeType":"224","messageId":"225","endLine":52,"endColumn":20},{"ruleId":"232","severity":1,"message":"255","line":72,"column":6,"nodeType":"234","endLine":72,"endColumn":53,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":116,"column":19,"nodeType":"259","endLine":120,"endColumn":20},{"ruleId":"226","severity":1,"message":"227","line":18,"column":26,"nodeType":"228","messageId":"229","endLine":18,"endColumn":28},{"ruleId":"226","severity":1,"message":"227","line":24,"column":23,"nodeType":"228","messageId":"229","endLine":24,"endColumn":25},{"ruleId":"222","severity":1,"message":"260","line":15,"column":3,"nodeType":"224","messageId":"225","endLine":15,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":15,"column":13,"nodeType":"259","endLine":15,"endColumn":63},{"ruleId":"222","severity":1,"message":"263","line":8,"column":3,"nodeType":"224","messageId":"225","endLine":8,"endColumn":22},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.category' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["266"],"'TextField' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'FormLabel' is defined but never used.","'Rating' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["267"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["269"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'errorPay' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window'. Either exclude it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.",["270"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'USER_UPDATE_PROFILE_RESET' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ORDER_DETAILS_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [dispatch, match.params.category, match.params.id]",{"range":"281","text":"282"},"Update the dependencies array to be: [category, dispatch, productId, qty]",{"range":"283","text":"284"},"Update the dependencies array to be: [history, order._id, success]",{"range":"285","text":"286"},"Update the dependencies array to be: [dispatch, userInfo, user, history]",{"range":"287","text":"288"},"Update the dependencies array to be: [dispatch, orders, successPay, orderId]",{"range":"289","text":"290"},[1196,1206],"[dispatch, match.params.category, match.params.id]",[1157,1183],"[category, dispatch, productId, qty]",[3012,3030],"[history, order._id, success]",[2678,2704],"[dispatch, userInfo, user, history]",[2579,2626],"[dispatch, orders, successPay, orderId]"]