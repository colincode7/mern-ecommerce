[{"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\index.js":"1","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\reportWebVitals.js":"2","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\App.js":"3","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\store.js":"4","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Footer.js":"5","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Header.js":"6","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\HomeScreen.js":"7","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ShippingScreen.js":"8","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProductScreen.js":"9","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\LoginScreen.js":"10","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\RegisterScreen.js":"11","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PaymentMethod.js":"12","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\CartScreen.js":"13","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PlaceOrderScreen.js":"14","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProfileScreen.js":"15","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\OrderScreen.js":"16","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\cart.js":"17","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productLists.js":"18","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productDetails.js":"19","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\user.js":"20","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\order.js":"21","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Loader.js":"22","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Products.js":"23","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CheckoutStepper.js":"24","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\header.js":"25","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productListAction.js":"26","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\userAction.js":"27","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\cartAction.js":"28","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\orderAction.js":"29","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\PlaceOrderScreen.js":"30","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\ProfileScreen.js":"31","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\orderConstants.js":"32","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\userConstants.js":"33","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productListConstants.js":"34","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productDetailsConstants.js":"35","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\cartConstants.js":"36","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Rating.js":"37","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepIcon.js":"38","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepConnector.js":"39","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\allFormsScreen.js":"40","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productDetailsAction.js":"41","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\utils\\carousalData.js":"42","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\SearchProductBox.js":"43","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Paginate.js":"44","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\StripeCheckout.js":"45","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\PayPalCheckout.js":"46","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Message.js":"47","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\skeletons\\ProductScreenSkeleton.js":"48","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\skeletons\\OrderScreenSkeleton.js":"49"},{"size":627,"mtime":1608645620000,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1606722012000,"results":"52","hashOfConfig":"51"},{"size":3374,"mtime":1613300754474,"results":"53","hashOfConfig":"51"},{"size":2041,"mtime":1612712901985,"results":"54","hashOfConfig":"51"},{"size":506,"mtime":1607670676000,"results":"55","hashOfConfig":"51"},{"size":7334,"mtime":1612594635802,"results":"56","hashOfConfig":"51"},{"size":11408,"mtime":1613300457093,"results":"57","hashOfConfig":"51"},{"size":6393,"mtime":1613236633544,"results":"58","hashOfConfig":"51"},{"size":11168,"mtime":1613300566252,"results":"59","hashOfConfig":"51"},{"size":6005,"mtime":1613300473755,"results":"60","hashOfConfig":"51"},{"size":8039,"mtime":1613298728964,"results":"61","hashOfConfig":"51"},{"size":3833,"mtime":1613236609475,"results":"62","hashOfConfig":"51"},{"size":9219,"mtime":1613223538048,"results":"63","hashOfConfig":"51"},{"size":11877,"mtime":1613300557228,"results":"64","hashOfConfig":"51"},{"size":10068,"mtime":1613300532767,"results":"65","hashOfConfig":"51"},{"size":12748,"mtime":1613300552083,"results":"66","hashOfConfig":"51"},{"size":1418,"mtime":1612757322441,"results":"67","hashOfConfig":"51"},{"size":657,"mtime":1612526093366,"results":"68","hashOfConfig":"51"},{"size":1229,"mtime":1612432012919,"results":"69","hashOfConfig":"51"},{"size":3291,"mtime":1612209987448,"results":"70","hashOfConfig":"51"},{"size":2653,"mtime":1612726991297,"results":"71","hashOfConfig":"51"},{"size":418,"mtime":1608645620000,"results":"72","hashOfConfig":"51"},{"size":1432,"mtime":1612209987448,"results":"73","hashOfConfig":"51"},{"size":1212,"mtime":1613233578211,"results":"74","hashOfConfig":"51"},{"size":2505,"mtime":1612594848565,"results":"75","hashOfConfig":"51"},{"size":1034,"mtime":1613297675001,"results":"76","hashOfConfig":"51"},{"size":5500,"mtime":1613298483901,"results":"77","hashOfConfig":"51"},{"size":2198,"mtime":1612757741762,"results":"78","hashOfConfig":"51"},{"size":4475,"mtime":1613299047795,"results":"79","hashOfConfig":"51"},{"size":1105,"mtime":1613235115104,"results":"80","hashOfConfig":"51"},{"size":2068,"mtime":1612031501142,"results":"81","hashOfConfig":"51"},{"size":950,"mtime":1612726991275,"results":"82","hashOfConfig":"51"},{"size":940,"mtime":1612031501117,"results":"83","hashOfConfig":"51"},{"size":181,"mtime":1612524632272,"results":"84","hashOfConfig":"51"},{"size":511,"mtime":1612432012917,"results":"85","hashOfConfig":"51"},{"size":295,"mtime":1612755535418,"results":"86","hashOfConfig":"51"},{"size":1855,"mtime":1607758504000,"results":"87","hashOfConfig":"51"},{"size":1581,"mtime":1613233459769,"results":"88","hashOfConfig":"51"},{"size":672,"mtime":1613233663864,"results":"89","hashOfConfig":"51"},{"size":2382,"mtime":1612770401128,"results":"90","hashOfConfig":"51"},{"size":2297,"mtime":1613297754360,"results":"91","hashOfConfig":"51"},{"size":1267,"mtime":1612251209177,"results":"92","hashOfConfig":"51"},{"size":1292,"mtime":1612726991255,"results":"93","hashOfConfig":"51"},{"size":1151,"mtime":1613218671844,"results":"94","hashOfConfig":"51"},{"size":2522,"mtime":1613299866966,"results":"95","hashOfConfig":"51"},{"size":2714,"mtime":1613299891249,"results":"96","hashOfConfig":"51"},{"size":249,"mtime":1612726991253,"results":"97","hashOfConfig":"51"},{"size":1146,"mtime":1613223885095,"results":"98","hashOfConfig":"51"},{"size":726,"mtime":1613223885095,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"18mc93y",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\index.js",[],["202","203"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\reportWebVitals.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\App.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\store.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Footer.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Header.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\HomeScreen.js",["204"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ShippingScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProductScreen.js",["205"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\LoginScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\RegisterScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PaymentMethod.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\CartScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\PlaceOrderScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\ProfileScreen.js",["206"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n////////////////////////////////    MATERIAL UI   ////////////////////////////////////\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MaterialButton from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\n\r\n/////////////////////////////////    REDUX     //////////////////////////////////////\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getUserDetails, updateUserProfile } from \"../redux/actions/userAction\";\r\nimport { listMyOrders } from \"../redux/actions/orderAction\";\r\n\r\n///////////////////////////////////     CUSTOM STYLE    ///////////////////////////////\r\nimport {\r\n  useStyles,\r\n  CssTextField,\r\n  StyledTableCell,\r\n  StyledTableRow,\r\n} from \"./customStyle/ProfileScreen\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst ProfileScreen = ({ history, API }) => {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //////////////////////   LOGIN REDUCER    ///////////////////\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  //////////////////////    USER PROFILE REDUCER    /////////////////\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  ///////////////////   UPDATE USER PROFILE REDUCER    ////////////////\r\n  const updateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = updateProfile;\r\n\r\n  ///////////////////   MY ORDERS REDUCER    ////////////////\r\n  const myOrdersList = useSelector((state) => state.myOrders);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = myOrdersList;\r\n\r\n  // redirect to login page if not logged in and set name & email field in form\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n  }, [userInfo, user, history]);\r\n\r\n  // fetch user details (even after update) and fetch all orders\r\n  useEffect(() => {\r\n    dispatch(getUserDetails(API, \"profile\"));\r\n    dispatch(listMyOrders(API));\r\n  }, [dispatch]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password does not match\");\r\n    } else {\r\n      //DISPATCH UPDATE\r\n      dispatch(updateUserProfile(API, { id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  ////////////////////     GO BACK      //////////////////////////////////\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            PROFILE\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n\r\n      <Button onClick={goBack} className=\"btn btn-light mt-2 mb-4\">\r\n        Go Back\r\n      </Button>\r\n\r\n      {/*//////////////////////////////////////     GRID       ////////////////////////////////////// */}\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item sm={4} xs={12}>\r\n          <h2 className={classes.heading}>PROFILE</h2>\r\n          {loading && <Loader />}\r\n          <form className={classes.form}>\r\n            <CssTextField\r\n              id=\"outlined-name\"\r\n              label=\"Name\"\r\n              value={name}\r\n              multiline\r\n              placeholder=\"Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            <CssTextField\r\n              id=\"outlined-email\"\r\n              label=\"Email\"\r\n              value={email}\r\n              multiline\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <CssTextField\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              label=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <CssTextField\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              id=\"outlined-password\"\r\n              required\r\n              label=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n\r\n            {/*//////////////////////     VALIDATION ERROR MESSAGE     ////////////////////////*/}\r\n\r\n            {error && <Message varient=\"error\">{error}</Message>}\r\n            {message && <Message varient=\"error\">{message}</Message>}\r\n\r\n            {success && (\r\n              <Message varient=\"success\">Profile Updated Successfully</Message>\r\n            )}\r\n            <MaterialButton\r\n              className={classes.button}\r\n              onClick={submitHandler}\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update\r\n            </MaterialButton>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid item sm={8} xs={12}>\r\n          <h2 className={classes.heading}>MY ORDERS</h2>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message varient=\"danger\">{errorOrders}</Message>\r\n          ) : (\r\n            <Paper elevation={8} className={classes.table}>\r\n              <TableContainer className={classes.table}>\r\n                <Table aria-label=\"customized table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell align=\"center\">ORDER ID</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">DATE</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">TOTAL</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">PAID</StyledTableCell>\r\n                      <StyledTableCell align=\"center\">\r\n                        DELIVERED\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"center\"></StyledTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {orders &&\r\n                      orders.map((order) => (\r\n                        <StyledTableRow key={order._id}>\r\n                          <StyledTableCell component=\"th\" scope=\"row\">\r\n                            {order._id}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {order.createdAt.substring(0, 10)}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {order.totalPrice}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {order.isPaid ? (\r\n                              <div>\r\n                                <DoneIcon color=\"primary\"></DoneIcon>\r\n                                &nbsp; &nbsp;\r\n                                <span>{order.paidAt.substring(0, 10)}</span>\r\n                              </div>\r\n                            ) : (\r\n                              <i\r\n                                className=\"fa fa-times\"\r\n                                style={{ color: \"#f44336\" }}\r\n                              ></i>\r\n                            )}\r\n                          </StyledTableCell>\r\n                          <StyledTableCell align=\"center\">\r\n                            {order.isDelivered ? (\r\n                              order.deliveredAt.substring(0, 10)\r\n                            ) : (\r\n                              <i\r\n                                className=\"fa fa-times\"\r\n                                style={{ color: \"#f44336\" }}\r\n                              ></i>\r\n                            )}\r\n                          </StyledTableCell>\r\n\r\n                          <StyledTableCell align=\"center\">\r\n                            <Link to={`/orders/${order._id}`}>\r\n                              <MaterialButton\r\n                                className={classes.details}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                              >\r\n                                DETAILS\r\n                              </MaterialButton>\r\n                            </Link>\r\n                          </StyledTableCell>\r\n                        </StyledTableRow>\r\n                      ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\OrderScreen.js",["207"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n///////////////////////////     MATERIAL UI   ////////////////////////////////\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n//////////////////////////////    / Components   ////////////////////////\r\nimport Message from \"../components/Message\";\r\nimport { StripeCheckout } from \"../components/StripeCheckout\";\r\nimport { PayPalCheckout } from \"../components/PayPalCheckout\";\r\n\r\n///////////////////////////    REDUX     ///////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails } from \"../redux/actions/orderAction\";\r\n\r\n///////////////////////////    CUSTOM STYLES     ///////////////////////////////\r\nimport { useStyles } from \"./customStyle/PlaceOrderScreen\";\r\nimport OrderScreenSkeleton from \"./skeletons/OrderScreenSkeleton\";\r\n\r\nconst OrderScreen = ({ match, history, API, isMobile }) => {\r\n  const classes = useStyles();\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // User Login Credentials\r\n  const login = useSelector((state) => state.userLogin);\r\n  const { userInfo } = login;\r\n\r\n  // Order details\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, orders, error } = orderDetails;\r\n\r\n  // PAYPAL PAYMENT INTEGRATION\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { success: successPay } = orderPay;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getOrderDetails(API, orderId));\r\n    }\r\n  }, [dispatch, orderId, successPay, userInfo, history]);\r\n\r\n  return loading ? (\r\n    <OrderScreenSkeleton />\r\n  ) : error ? (\r\n    <Message varient=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <br />\r\n      <Typography\r\n        variant={isMobile ? \"h5\" : \"h4\"}\r\n        component=\"h4\"\r\n        color=\"textSecondary\"\r\n      >\r\n        <span\r\n          style={isMobile ? { display: \"flex\", justifyContent: \"center\" } : {}}\r\n        >\r\n          ORDER\r\n        </span>{\" \"}\r\n        {orders._id}\r\n      </Typography>\r\n      <br />\r\n      <br />\r\n      <Grid container spacing={4}>\r\n        {/*/////////////////////   LEFT SIDE    ///////////////////////////////////*/}\r\n        <Grid item md={8} xs={12}>\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"primary\" variant=\"h5\" component=\"h3\">\r\n                  <strong>SHIPPING DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  <strong className={classes.shipping}>Name: </strong>\r\n                  {orders.user.name}\r\n                  <br />\r\n                  <br />\r\n                  <strong className={classes.shipping}>Email: </strong>\r\n                  <a\r\n                    rel=\"noreferrer\"\r\n                    className={classes.email}\r\n                    href={orders.user.email}\r\n                    target=\"_blank\"\r\n                  >\r\n                    {orders.user.email}\r\n                  </a>\r\n                  <br />\r\n                  <br />\r\n                  <strong>Address: </strong>\r\n                  <span className=\"ml-4\">{orders.shippingAddress.address}</span>\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.city}\r\n                  </span>\r\n\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.country},\r\n                  </span>\r\n\r\n                  <br />\r\n                  <span className=\"ml-5 pl-5\">\r\n                    {orders.shippingAddress.postalCode}\r\n                  </span>\r\n                </Typography>\r\n              </ListItem>\r\n              <div className={classes.message}>\r\n                {orders.isDelivered ? (\r\n                  <Message varient=\"success\">\r\n                    Delivered at {orders.deliveredAt}\r\n                  </Message>\r\n                ) : (\r\n                  <Message varient=\"error\">Not Delivered</Message>\r\n                )}\r\n              </div>\r\n            </List>\r\n\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"primary\" variant=\"h5\" component=\"h3\">\r\n                  <strong>PAYMENT METHOD</strong>\r\n                </Typography>\r\n              </ListItem>\r\n              <Divider variant=\"fullWidth\" className={classes.divider} />\r\n\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                  {orders.paymentMethod}\r\n                </Typography>\r\n              </ListItem>\r\n              <div className={classes.message}>\r\n                {orders.isPaid ? (\r\n                  <Message varient=\"success\">Paid on {orders.paidAt}</Message>\r\n                ) : (\r\n                  <Message varient=\"error\">Not Paid</Message>\r\n                )}\r\n              </div>\r\n            </List>\r\n          </Paper>\r\n\r\n          <Paper className={classes.paper} elevation={6}>\r\n            <List className={classes.list}>\r\n              <ListItem className={classes.list_item}>\r\n                <Typography color=\"primary\" variant=\"h5\" component=\"h3\">\r\n                  <strong>ORDER DETAILS</strong>\r\n                </Typography>\r\n              </ListItem>\r\n            </List>\r\n\r\n            {!orders.orderItems.length ? (\r\n              <Container maxWidth=\"md\">\r\n                <Message varient=\"info\">\r\n                  No order <Link to=\"/\">Keep Shopping</Link>\r\n                </Message>\r\n              </Container>\r\n            ) : (\r\n              <List>\r\n                {orders.orderItems.map((item, index) => (\r\n                  <div key={index}>\r\n                    <ListItem\r\n                      className={classes.list_item}\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n                      <ListItemAvatar>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          alt={item.name}\r\n                          variant=\"square\"\r\n                          src={item.image}\r\n                        />\r\n                      </ListItemAvatar>\r\n                      <Link\r\n                        className={classes.order_link}\r\n                        to={`/products/${item.category}/${item.product}`}\r\n                      >\r\n                        <ListItemText\r\n                          primary={item.name}\r\n                          secondary={\r\n                            <Typography\r\n                              color=\"primary\"\r\n                              variant=\"body2\"\r\n                              component=\"span\"\r\n                            >\r\n                              {item.qty} x {item.price} ={\" \"}\r\n                              {(item.qty * item.price).toFixed(2)}\r\n                            </Typography>\r\n                          }\r\n                        />\r\n                      </Link>\r\n                      {!isMobile ? (\r\n                        <ListItemSecondaryAction className={classes.qty}>\r\n                          Qty: {item.qty}\r\n                        </ListItemSecondaryAction>\r\n                      ) : null}\r\n                    </ListItem>\r\n                    <Divider\r\n                      variant=\"fullWidth\"\r\n                      className={classes.divider}\r\n                      component=\"li\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </List>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/*/////////////////////   RIGHT SIDE    ///////////////////////////////////*/}\r\n        <Grid item md={4} xs={12}>\r\n          <Paper elevation={6}>\r\n            <List>\r\n              <ListItem>\r\n                <Typography\r\n                  className={classes.order_summary}\r\n                  color=\"primary\"\r\n                  variant=\"h4\"\r\n                  component=\"h3\"\r\n                >\r\n                  <strong>ORDER SUMMARY</strong>\r\n                </Typography>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"inset\" component=\"br\" />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Items Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.itemsPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Delivery Charge</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.shippingPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Tax Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.taxPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider\r\n                variant=\"fullWidth\"\r\n                className={classes.divider}\r\n                component=\"li\"\r\n              />\r\n\r\n              <ListItem>\r\n                <Grid container>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"primary\" varient=\"h6\" component=\"h6\">\r\n                      <strong>Total Price</strong>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={6} xs={6}>\r\n                    <Typography color=\"textPrimary\" varient=\"p\" component=\"h6\">\r\n                      ${orders.totalPrice}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </ListItem>\r\n\r\n              <Divider variant=\"fullWidth\" component=\"br\" />\r\n\r\n              {/*/// PAYPAL BUTTON or STRIPE BUTTON showed if order is not paid  ///*/}\r\n              {!orders.isPaid ? (\r\n                <ListItem>\r\n                  <Grid item xs={12}>\r\n                    {orders.paymentMethod === \"PayPal\" ? (\r\n                      <PayPalCheckout orderId={orderId} API={API} />\r\n                    ) : orders.paymentMethod === \"Stripe\" ? (\r\n                      <StripeCheckout orderId={orderId} API={API} />\r\n                    ) : null}\r\n                  </Grid>\r\n                </ListItem>\r\n              ) : (\r\n                <Message>Payment Done Successfully</Message>\r\n              )}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\cart.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productLists.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\productDetails.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\user.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\reducers\\order.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Loader.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Products.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CheckoutStepper.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\header.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productListAction.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\userAction.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\cartAction.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\orderAction.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\PlaceOrderScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\ProfileScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\orderConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\userConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productListConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\productDetailsConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actionTypes\\cartConstants.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Rating.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepIcon.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\CustomStyles\\CheckoutStepper\\StepConnector.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\customStyle\\allFormsScreen.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\redux\\actions\\productDetailsAction.js",["208","209"],"import {\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAILED,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FAILED,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n} from \"../actionTypes/productDetailsConstants\";\r\n\r\nimport axios from \"axios\";\r\nconst API = process.env.API;\r\n\r\n//////////////////////      ACTIONS    /////////////////////////////\r\n\r\n// product details\r\nconst reqProduct = () => ({\r\n  type: PRODUCT_DETAILS_REQUEST,\r\n});\r\n\r\nconst addProduct = (product) => ({\r\n  type: PRODUCT_DETAILS_SUCCESS,\r\n  payload: product,\r\n});\r\n\r\nconst productFailed = (errMess) => ({\r\n  type: PRODUCT_DETAILS_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n//  create products review\r\nconst reqProductReview = () => ({\r\n  type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n});\r\n\r\nconst addProductReview = () => ({\r\n  type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n});\r\n\r\nconst productReviewFailed = (errMess) => ({\r\n  type: PRODUCT_CREATE_REVIEW_FAILED,\r\n  payload: errMess,\r\n});\r\n\r\n///////////////////////   ACTION CREATOR    ///////////////////////////\r\n\r\n// list all product details\r\nexport const listProductDetails = (API, category, id) => async (dispatch) => {\r\n  try {\r\n    dispatch(reqProduct());\r\n\r\n    const { data } = await axios.get(`${API}/products/${category}/${id}`);\r\n\r\n    dispatch(addProduct(data));\r\n  } catch (error) {\r\n    dispatch(\r\n      productFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// Create product Review\r\nexport const createProductReview = (API, category, id, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(reqProductReview());\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const newReview = await axios.post(\r\n      `${API}/products/${category}/${id}/reviews`,\r\n      review,\r\n      config\r\n    );\r\n\r\n    dispatch(addProductReview());\r\n  } catch (error) {\r\n    dispatch(\r\n      productReviewFailed(\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      )\r\n    );\r\n  }\r\n};\r\n","D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\utils\\carousalData.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\SearchProductBox.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Paginate.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\StripeCheckout.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\PayPalCheckout.js",["210"],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\components\\Message.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\skeletons\\ProductScreenSkeleton.js",[],"D:\\PROJECTS\\1. Web Dev\\eCommerce\\frontend\\src\\screen\\skeletons\\OrderScreenSkeleton.js",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":108,"column":6,"nodeType":"217","endLine":108,"endColumn":25,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"216","line":64,"column":6,"nodeType":"217","endLine":64,"endColumn":45,"suggestions":"219"},{"ruleId":"215","severity":1,"message":"216","line":74,"column":6,"nodeType":"217","endLine":74,"endColumn":16,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"216","line":55,"column":6,"nodeType":"217","endLine":55,"endColumn":56,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":11,"column":7,"nodeType":"224","messageId":"225","endLine":11,"endColumn":10},{"ruleId":"222","severity":1,"message":"226","line":84,"column":11,"nodeType":"224","messageId":"225","endLine":84,"endColumn":20},{"ruleId":"215","severity":1,"message":"227","line":51,"column":6,"nodeType":"217","endLine":51,"endColumn":36,"suggestions":"228"},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'API'. Either include it or remove the dependency array.","ArrayExpression",["231"],["232"],["233"],["234"],"no-unused-vars","'API' is assigned a value but never used.","Identifier","unusedVar","'newReview' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addPayPalScript'. Either include it or remove the dependency array.",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [API, dispatch, keyword]",{"range":"246","text":"247"},"Update the dependencies array to be: [API, dispatch, match, successProductReview]",{"range":"248","text":"249"},"Update the dependencies array to be: [API, dispatch]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, orderId, successPay, userInfo, history, API]",{"range":"252","text":"253"},"Update the dependencies array to be: [addPayPalScript, dispatch, orders, successPay]",{"range":"254","text":"255"},[2894,2913],"[API, dispatch, keyword]",[2007,2046],"[API, dispatch, match, successProductReview]",[2845,2855],"[API, dispatch]",[2146,2196],"[dispatch, orderId, successPay, userInfo, history, API]",[1719,1749],"[addPayPalScript, dispatch, orders, successPay]"]